{"version":3,"sources":["../node_modules/@scandipwa/scandipwa/src/type/Account.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.config.js","../node_modules/@scandipwa/scandipwa/src/util/Address/index.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressTable/MyAccountAddressTable.container.js","../node_modules/@scandipwa/scandipwa/src/route/MyAccount/MyAccount.config.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.component.js","../node_modules/@scandipwa/scandipwa/src/type/Config.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressTable/MyAccountAddressTable.component.js","../node_modules/@scandipwa/scandipwa/src/component/KeyValueTable/index.js","../node_modules/@scandipwa/scandipwa/src/component/KeyValueTable/KeyValueTable.component.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountConfirmEmail/index.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountConfirmEmail/MyAccountConfirmEmail.component.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPassword/index.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPassword/MyAccountForgotPassword.container.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPasswordSuccess/index.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPasswordSuccess/MyAccountForgotPasswordSuccess.component.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountSignIn/index.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountSignIn/MyAccountSignIn.container.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPassword/MyAccountForgotPassword.component.js","../node_modules/@scandipwa/scandipwa/src/component/MyAccountSignIn/MyAccountSignIn.component.js"],"names":["regionType","PropTypes","oneOfType","shape","region_code","string","region","region_id","number","addressType","city","country_id","customer_id","default_billing","bool","default_shipping","firstname","id","lastname","middlename","postcode","prefix","street","arrayOf","suffix","telephone","addressesType","customerType","created_at","dob","date","email","group_id","is_subscribed","taxvat","baseOrderInfoType","increment_id","status_label","grand_total","subtotal","orderType","base_order_info","order_products","array","payment_info","object","shipping_info","DASHBOARD","MY_ORDERS","MY_WISHLIST","ADDRESS_BOOK","NEWSLETTER_SUBSCRIPTION","tabType","url","name","objectOf","ADDRESS_POPUP_ID","EDIT_ADDRESS","DELETE_ADDRESS","ADD_ADDRESS","trimCustomerAddress","customerAddress","company","method","vat_id","trimAddressFields","fields","region_string","fieldsData","setAddressesInFormObject","numberOfLines","addressKeys","Array","fill","map","_","index","addressValues","key","newFields","Object","keys","filter","includes","reduce","acc","getFormFields","addressLinesQty","mapStateToProps","state","countries","ConfigReducer","mapDispatchToProps","dispatch","showEditPopup","payload","showPopup","MyAccountAddressTableContainer","containerFunctions","getFormatedRegion","bind","onEditClick","onDeleteClick","this","props","address","action","title","__","regionData","country","find","label","available_regions","defineProperty","_MyAccountAddressTableContainer","value","connect","MY_ACCOUNT_URL","MyAccountAddressForm","onFormSuccess","onSave","newAddress","onCountryChange","countryId","setState","availableRegions","default_country","regionId","length","type","selectOptions","onChange","validation","getStreetFields","streets","i","showVatNumber","fieldEntry","addressValue","undefined","block","mix","elem","checked","getRegionFields","getAddressFields","getVatField","propTypes","isRequired","countriesType","func","defaultProps","_MyAccountAddressForm","code","MyAccountAddressTable","showActions","isDeleteAllowed","onClick","mods","isHollow","disabled","isLoading","renderTable","renderActions","showAdditionalFields","additionalFields","source","MixType","_MyAccountAddressTable","KeyValueTable","renderTableRow","data","getValueFromSource","isArray","join","colSpan","renderHeading","dataPairArray","_KeyValueTable","MyAccountConfirmEmail","handleSignIn","aria-labelledby","_MyAccountConfirmEmail","MyAccountDispatcher","forgotPassword","options","then","default","MyAccountForgotPasswordContainer","onForgotPasswordAttempt","onForgotPasswordSuccess","containerProps","onFormError","handleCreateAccount","isCheckout","setLoadingState","setSignInState","STATE_FORGOT_PASSWORD_SUCCESS","_MyAccountForgotPasswordContainer","MyAccountForgotPasswordSuccess","_MyAccountForgotPasswordSuccess","isEmailAvailable","CheckoutReducer","signIn","showNotification","message","MyAccountSignInContainer","onSignInSuccess","onSignInAttempt","handleForgotPassword","emailValue","handleEmailInput","prevProps","prevIsEmailAvailable","onSignIn","_MyAccountSignInContainer","MyAccountForgotPassword","onSubmit","onSubmitSuccess","onSubmitError","autocomplete","likeLink","renderCreateAccountLabel","renderForgotPasswordForm","renderAdditionalField","_MyAccountForgotPassword","MyAccountSignIn","renderSignInForm","_MyAccountSignIn"],"mappings":"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","file":"static/js/3.e6d8a427.chunk.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\n\nexport const regionType = PropTypes.oneOfType([\n    PropTypes.shape({\n        region_code: PropTypes.string,\n        region: PropTypes.string,\n        region_id: PropTypes.number\n    })\n]);\n\nexport const addressType = PropTypes.shape({\n    city: PropTypes.string,\n    country_id: PropTypes.string,\n    customer_id: PropTypes.number,\n    default_billing: PropTypes.bool,\n    default_shipping: PropTypes.bool,\n    firstname: PropTypes.string,\n    id: PropTypes.number,\n    lastname: PropTypes.string,\n    middlename: PropTypes.string,\n    postcode: PropTypes.string,\n    prefix: PropTypes.string,\n    regionType,\n    street: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string)\n    ]),\n    suffix: PropTypes.string,\n    telephone: PropTypes.string\n});\n\nexport const addressesType = PropTypes.arrayOf(addressType);\n\nexport const customerType = PropTypes.shape({\n    addressesType,\n    created_at: PropTypes.string,\n    default_billing: PropTypes.string,\n    default_shipping: PropTypes.string,\n    dob: PropTypes.date,\n    email: PropTypes.string,\n    firstname: PropTypes.string,\n    group_id: PropTypes.number,\n    id: PropTypes.number,\n    is_subscribed: PropTypes.bool,\n    lastname: PropTypes.string,\n    middlename: PropTypes.string,\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    taxvat: PropTypes.string\n});\n\nexport const baseOrderInfoType = PropTypes.shape({\n    id: PropTypes.number,\n    increment_id: PropTypes.string,\n    created_at: PropTypes.string,\n    status_label: PropTypes.string,\n    grand_total: PropTypes.number,\n    subtotal: PropTypes.string\n});\n\n// TODO: remove objects\nexport const orderType = PropTypes.shape({\n    base_order_info: baseOrderInfoType,\n    order_products: PropTypes.array,\n    payment_info: PropTypes.object,\n    shipping_info: PropTypes.object\n});\n\nexport const ordersType = PropTypes.arrayOf(orderType);\n\nexport const DASHBOARD = 'dashboard';\nexport const MY_ORDERS = 'my-orders';\nexport const MY_WISHLIST = 'my-wishlist';\nexport const ADDRESS_BOOK = 'address-book';\nexport const NEWSLETTER_SUBSCRIPTION = 'newsletter-subscription';\n\nexport const activeTabType = PropTypes.string;\n\nexport const tabType = PropTypes.shape({\n    url: PropTypes.string,\n    name: PropTypes.string\n});\n\nexport const tabMapType = PropTypes.objectOf(tabType);\n\nexport const signInStateType = PropTypes.string;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const ADDRESS_POPUP_ID = 'MyAccountAddressPopup';\nexport const EDIT_ADDRESS = 'EDIT_ADDRESS';\nexport const DELETE_ADDRESS = 'DELETE_ADDRESS';\nexport const ADD_ADDRESS = 'ADD_ADDRESS';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/** @namespace Util/Address/trimCustomerAddress */\nexport const trimCustomerAddress = (customerAddress) => {\n    const {\n        city,\n        company,\n        country_id,\n        email,\n        firstname,\n        lastname,\n        method,\n        postcode,\n        street,\n        telephone,\n        region,\n        vat_id\n    } = customerAddress;\n\n    return {\n        city,\n        company,\n        country_id,\n        email,\n        firstname,\n        lastname,\n        method,\n        postcode,\n        street,\n        telephone,\n        vat_id,\n        ...region\n    };\n};\n\n/** @namespace Util/Address/trimAddressFields */\nexport const trimAddressFields = (fields) => {\n    const {\n        region_string: region,\n        ...fieldsData\n    } = fields;\n\n    return { ...fieldsData, region };\n};\n\n/** transforming \"street[index]\" entries into a single \"street\" object\n    for checkout/billing/myAccoutAddress form fields object */\n/** @namespace Util/Address/setAddressesInFormObject */\nexport const setAddressesInFormObject = (fields, numberOfLines) => {\n    const addressKeys = new Array(numberOfLines)\n        .fill('')\n        .map((_, index) => `street${index}`);\n\n    const addressValues = addressKeys.map((key) => fields[key]);\n\n    // removing street related fields from the form object\n    const newFields = Object.keys(fields)\n        .filter((key) => !addressKeys.includes(key))\n        .reduce(\n            (acc, key) => {\n                acc[key] = fields[key];\n                return acc;\n            }, {}\n        );\n\n    // setting single street entry to the form object\n    newFields.street = addressValues;\n\n    return newFields;\n};\n\n// get Form Fields object depending on addressLinesQty\n/** @namespace Util/Address/getFormFields */\nexport const getFormFields = (fields, addressLinesQty) => {\n    if (addressLinesQty === 1) {\n        return fields;\n    }\n\n    return setAddressesInFormObject(fields, addressLinesQty);\n};\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    ADDRESS_POPUP_ID,\n    DELETE_ADDRESS,\n    EDIT_ADDRESS\n} from 'Component/MyAccountAddressPopup/MyAccountAddressPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { addressType } from 'Type/Account';\nimport { countriesType } from 'Type/Config';\n\nimport MyAccountAddressTable from './MyAccountAddressTable.component';\n\n/** @namespace Component/MyAccountAddressTable/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    countries: state.ConfigReducer.countries\n});\n\n/** @namespace Component/MyAccountAddressTable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showEditPopup: (payload) => dispatch(showPopup(ADDRESS_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountAddressTable/Container */\nexport class MyAccountAddressTableContainer extends PureComponent {\n    static propTypes = {\n        address: addressType.isRequired,\n        showEditPopup: PropTypes.func.isRequired,\n        countries: countriesType.isRequired\n    };\n\n    containerFunctions = {\n        getFormatedRegion: this.getFormatedRegion.bind(this),\n        onEditClick: this.onEditClick.bind(this),\n        onDeleteClick: this.onDeleteClick.bind(this)\n    };\n\n    onEditClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: EDIT_ADDRESS,\n            title: __('Edit address'),\n            address\n        });\n    }\n\n    onDeleteClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: DELETE_ADDRESS,\n            title: __('Confirm delete'),\n            address\n        });\n    }\n\n    getFormatedRegion(address) {\n        const { countries } = this.props;\n        const { country_id, region: regionData } = address;\n\n        if (!regionData) {\n            return {};\n        }\n\n        const { region_id, region } = regionData;\n        const country = countries.find(({ id }) => id === country_id);\n\n        if (!country) {\n            return {};\n        }\n\n        const { label, available_regions } = country;\n        const regions = available_regions || [];\n        const { name } = regions.find(({ id }) => id === region_id) || { name: region };\n\n        return {\n            country: label,\n            region: name\n        };\n    }\n\n    render() {\n        return (\n            <MyAccountAddressTable\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressTableContainer);\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const MY_ACCOUNT_URL = '/my-account';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FieldForm from 'Component/FieldForm';\nimport { addressType } from 'Type/Account';\nimport { countriesType } from 'Type/Config';\nimport { setAddressesInFormObject } from 'Util/Address';\n\n/** @namespace Component/MyAccountAddressForm/Component */\nexport class MyAccountAddressForm extends FieldForm {\n    static propTypes = {\n        address: addressType.isRequired,\n        countries: countriesType.isRequired,\n        default_country: PropTypes.string,\n        onSave: PropTypes.func,\n        addressLinesQty: PropTypes.number.isRequired,\n        showVatNumber: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        default_country: 'US',\n        onSave: () => {}\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            countries,\n            default_country,\n            address: { country_id, region: { region_id } = {} }\n        } = props;\n\n        const countryId = country_id || default_country;\n        const country = countries.find(({ id }) => id === countryId);\n        const { available_regions: availableRegions } = country || {};\n        const regions = availableRegions || [{}];\n        const regionId = region_id || regions[0].id;\n\n        this.state = {\n            countryId,\n            availableRegions,\n            regionId\n        };\n    }\n\n    onFormSuccess = (fields) => {\n        const { onSave, addressLinesQty } = this.props;\n        const { region_id, region_string: region, ...newAddress } = addressLinesQty > 1\n            ? setAddressesInFormObject(fields, addressLinesQty)\n            : fields;\n\n        newAddress.region = { region_id, region };\n        onSave(newAddress);\n    };\n\n    getRegionFields() {\n        const { address: { region: { region } = {} } } = this.props;\n        const { availableRegions, regionId } = this.state;\n\n        if (!availableRegions || !availableRegions.length) {\n            return {\n                region_string: {\n                    label: __('State/Province'),\n                    value: region\n                }\n            };\n        }\n\n        return {\n            region_id: {\n                label: __('State/Province'),\n                type: 'select',\n                selectOptions: availableRegions.map(({ id, name }) => ({ id, label: name, value: id })),\n                onChange: (regionId) => this.setState({ regionId }),\n                value: regionId\n            }\n        };\n    }\n\n    onCountryChange = (countryId) => {\n        const { countries } = this.props;\n        const country = countries.find(({ id }) => id === countryId);\n        const { available_regions } = country;\n\n        this.setState({\n            countryId,\n            availableRegions: available_regions || []\n        });\n    };\n\n    getStreetFields(label, index) {\n        const { address: { street = [] } } = this.props;\n\n        return {\n            label,\n            value: street[index],\n            validation: index === 0 ? ['notEmpty'] : []\n        };\n    }\n\n    // returns the address fields in quantity equal to BE\n    getAddressFields() {\n        const { addressLinesQty } = this.props;\n\n        if (addressLinesQty === 1) {\n            return {\n                street: this.getStreetFields(\n                    __('Street address'),\n                    0\n                )\n            };\n        }\n\n        const streets = {};\n\n        // eslint-disable-next-line fp/no-loops, fp/no-let\n        for (let i = 0; i < addressLinesQty; i++) {\n            streets[`street${i}`] = this.getStreetFields(\n                __('Street address line %s', i + 1),\n                i\n            );\n        }\n\n        return streets;\n    }\n\n    getVatField() {\n        const { showVatNumber } = this.props;\n\n        if (!showVatNumber) {\n            return {};\n        }\n\n        return {\n            vat_id: {\n                label: __('VAT Number')\n            }\n        };\n    }\n\n    get fieldMap() {\n        const { countryId } = this.state;\n        const { countries, address } = this.props;\n        const { default_billing, default_shipping } = address;\n\n        return {\n            default_billing: {\n                type: 'checkbox',\n                label: __('This is default Billing Address'),\n                value: 'default_billing',\n                checked: default_billing\n            },\n            default_shipping: {\n                type: 'checkbox',\n                label: __('This is default Shipping Address'),\n                value: 'default_shipping',\n                checked: default_shipping\n            },\n            firstname: {\n                label: __('First name'),\n                validation: ['notEmpty']\n            },\n            lastname: {\n                label: __('Last name'),\n                validation: ['notEmpty']\n            },\n            telephone: {\n                label: __('Phone number'),\n                validation: ['notEmpty']\n            },\n            city: {\n                label: __('City'),\n                validation: ['notEmpty']\n            },\n            country_id: {\n                type: 'select',\n                label: __('Country'),\n                validation: ['notEmpty'],\n                value: countryId,\n                selectOptions: countries.map(({ id, label }) => ({ id, label, value: id })),\n                onChange: this.onCountryChange\n            },\n            ...this.getRegionFields(),\n            postcode: {\n                label: __('Zip/Postal code'),\n                validation: ['notEmpty']\n            },\n            ...this.getAddressFields(),\n            ...this.getVatField()\n            // Will be back with B2B update\n            // company: {\n            //     label: __('Company')\n            // }\n        };\n    }\n\n    getDefaultValues(fieldEntry) {\n        const [key, { value }] = fieldEntry;\n        const { address: { [key]: addressValue } } = this.props;\n\n        return {\n            ...super.getDefaultValues(fieldEntry),\n            value: value !== undefined ? value : addressValue\n        };\n    }\n\n    renderActions() {\n        return (\n            <button\n              type=\"submit\"\n              block=\"Button\"\n              mix={ { block: 'MyAccount', elem: 'Button' } }\n            >\n                { __('Save address') }\n            </button>\n        );\n    }\n}\n\nexport default MyAccountAddressForm;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nexport const regionType = PropTypes.shape({\n    code: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.number\n});\n\nexport const countriesType = PropTypes.arrayOf(\n    PropTypes.shape({\n        label: PropTypes.string,\n        id: PropTypes.string,\n        available_regions: PropTypes.arrayOf(regionType)\n    })\n);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport KeyValueTable from 'Component/KeyValueTable';\nimport Loader from 'Component/Loader';\nimport { addressType } from 'Type/Account';\nimport { MixType } from 'Type/Common';\n\nimport './MyAccountAddressTable.style';\n\n/** @namespace Component/MyAccountAddressTable/Component */\nexport class MyAccountAddressTable extends KeyValueTable {\n    static propTypes = {\n        mix: MixType,\n        getFormatedRegion: PropTypes.func.isRequired,\n        address: addressType.isRequired,\n        showActions: PropTypes.bool,\n        showAdditionalFields: PropTypes.bool,\n        onEditClick: PropTypes.func.isRequired,\n        onDeleteClick: PropTypes.func.isRequired,\n        countries: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                id: PropTypes.string,\n                available_regions: PropTypes.arrayOf(\n                    PropTypes.shape({\n                        code: PropTypes.string,\n                        name: PropTypes.string,\n                        id: PropTypes.number\n                    })\n                )\n            })\n        ).isRequired\n    };\n\n    static defaultProps = {\n        showAdditionalFields: false,\n        showActions: false,\n        mix: {}\n    };\n\n    get dataPairArray() {\n        const { address, getFormatedRegion, showAdditionalFields } = this.props;\n        const regionData = getFormatedRegion(address);\n\n        const additionalFields = [\n            {\n                key: 'country',\n                label: __('County'),\n                source: regionData\n            },\n            {\n                key: 'region',\n                label: __('State/Province'),\n                source: regionData\n            },\n            {\n                key: 'city',\n                label: __('City'),\n                source: address\n            }\n            // Will be back with B2B update\n            // {\n            //     key: 'company',\n            //     label: __('Company'),\n            //     source: address\n            // }\n        ];\n\n        return [\n            {\n                key: 'firstname',\n                label: __('First name'),\n                source: address\n            },\n            {\n                key: 'lastname',\n                label: __('Last name'),\n                source: address\n            },\n            {\n                key: 'street',\n                label: __('Street'),\n                source: address\n            },\n            {\n                key: 'postcode',\n                label: __('Postal code'),\n                source: address\n            },\n            {\n                key: 'telephone',\n                label: __('Phone number'),\n                source: address\n            },\n            ...(showAdditionalFields ? additionalFields : [])\n        ];\n    }\n\n    renderActions() {\n        const {\n            onEditClick,\n            onDeleteClick,\n            showActions,\n            address: { default_billing, default_shipping }\n        } = this.props;\n\n        const isDeleteAllowed = default_shipping || default_billing;\n\n        if (!showActions) {\n            return null;\n        }\n\n        return (\n            <>\n                <button\n                  block=\"Button\"\n                  onClick={ onEditClick }\n                >\n                    { __('Edit address') }\n                </button>\n                <button\n                  block=\"Button\"\n                  mods={ { isHollow: true } }\n                  onClick={ onDeleteClick }\n                  disabled={ isDeleteAllowed }\n                  title={ isDeleteAllowed ? __('Can not delete - address is set as default.') : 'Delete this address' }\n                >\n                    { __('Delete') }\n                </button>\n            </>\n        );\n    }\n\n    render() {\n        const { countries, mix } = this.props;\n\n        return (\n            <div block=\"MyAccountAddressTable\" mix={ mix }>\n                <Loader isLoading={ !countries.length } />\n                { this.renderTable() }\n                { this.renderActions() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountAddressTable;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './KeyValueTable.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './KeyValueTable.style';\n\n/** @namespace Component/KeyValueTable/Component */\nexport class KeyValueTable extends PureComponent {\n    static propTypes = {\n        title: PropTypes.string\n    };\n\n    static defaultProps = {\n        title: ''\n    };\n\n    get dataPairArray() {\n        return [\n            /**\n             * {\n             *     key: 'id',\n             *     label': 'Identifier',\n             *     source: customer\n             * }\n             */\n        ];\n    }\n\n    getValueFromSource({ key, source }) {\n        const { [key]: value } = source;\n        return Array.isArray(value) ? value.join(', ') : value;\n    }\n\n    renderTableRow = (data) => {\n        const { key, label } = data;\n        const value = this.getValueFromSource(data);\n\n        if (!value) {\n            return null;\n        }\n\n        return (\n            <tr key={ key }>\n                <th>{ label }</th>\n                <td>{ value }</td>\n            </tr>\n        );\n    };\n\n    renderHeading() {\n        const { title } = this.props;\n        if (!title) {\n            return null;\n        }\n\n        return (\n            <tr>\n                <th\n                  block=\"KeyValueTable\"\n                  elem=\"Heading\"\n                  colSpan={ 2 }\n                >\n                    { title }\n                </th>\n            </tr>\n        );\n    }\n\n    renderTable() {\n        return (\n            <div block=\"KeyValueTable\" elem=\"Wrapper\">\n                <table block=\"KeyValueTable\">\n                    <thead>\n                        { this.renderHeading() }\n                    </thead>\n                    <tbody>\n                        { this.dataPairArray.map(this.renderTableRow) }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    render() {\n        return this.renderTable();\n    }\n}\n\nexport default KeyValueTable;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './MyAccountConfirmEmail.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { signInStateType } from 'Type/Account';\n\n/** @namespace Component/MyAccountConfirmEmail/Component */\nexport class MyAccountConfirmEmail extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        handleSignIn: PropTypes.func.isRequired\n    };\n\n    render() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <article\n              aria-labelledby=\"confirm-email-notice\"\n              block=\"MyAccountOverlay\"\n              elem=\"Additional\"\n              mods={ { state } }\n            >\n                <p id=\"confirm-email-notice\">\n                    { /* eslint-disable-next-line max-len */ }\n                    { __('The email confirmation link has been sent to your email. Please confirm your account to proceed.') }\n                </p>\n                <button\n                  block=\"Button\"\n                  onClick={ handleSignIn }\n                >\n                    { __('Got it') }\n                </button>\n            </article>\n        );\n    }\n}\n\nexport default MyAccountConfirmEmail;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './MyAccountForgotPassword.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { STATE_FORGOT_PASSWORD_SUCCESS } from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport { signInStateType } from 'Type/Account';\n\nimport MyAccountForgotPassword from './MyAccountForgotPassword.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountForgotPassword/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\n/** @namespace Component/MyAccountForgotPassword/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    forgotPassword: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.forgotPassword(options, dispatch)\n    )\n});\n\n/** @namespace Component/MyAccountForgotPassword/Container */\nexport class MyAccountForgotPasswordContainer extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleSignIn: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        forgotPassword: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        setSignInState: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        onForgotPasswordAttempt: this.onForgotPasswordAttempt.bind(this),\n        onForgotPasswordSuccess: this.onForgotPasswordSuccess.bind(this)\n    };\n\n    containerProps = () => {\n        const {\n            state,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            isCheckout\n        } = this.props;\n\n        return {\n            state,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            isCheckout\n        };\n    };\n\n    onForgotPasswordAttempt() {\n        const { setLoadingState } = this.props;\n        setLoadingState(true);\n    }\n\n    onForgotPasswordSuccess(fields) {\n        const { forgotPassword, setSignInState, setLoadingState } = this.props;\n\n        forgotPassword(fields).then(\n            /** @namespace Component/MyAccountOverlay/Container/forgotPasswordThen */\n            () => {\n                setSignInState(STATE_FORGOT_PASSWORD_SUCCESS);\n                setLoadingState(false);\n            },\n            /** @namespace Component/MyAccountForgotPassword/Container/forgotPasswordThen */\n            () => setLoadingState(false)\n        );\n    }\n\n    render() {\n        return (\n            <MyAccountForgotPassword\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountForgotPasswordContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport { default } from './MyAccountForgotPasswordSuccess.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { signInStateType } from 'Type/Account';\n\n/** @namespace Component/MyAccountForgotPasswordSuccess/Component */\nexport class MyAccountForgotPasswordSuccess extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        handleSignIn: PropTypes.func.isRequired\n    };\n\n    render() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <article\n              aria-labelledby=\"forgot-password-success\"\n              block=\"MyAccountOverlay\"\n              elem=\"Additional\"\n              mods={ { state } }\n            >\n                <p id=\"forgot-password-success\">\n                    { /* eslint-disable-next-line max-len */ }\n                    { __('If there is an account associated with the provided address you will receive an email with a link to reset your password') }\n                </p>\n                <button\n                  block=\"Button\"\n                  onClick={ handleSignIn }\n                >\n                    { __('Got it') }\n                </button>\n            </article>\n        );\n    }\n}\n\nexport default MyAccountForgotPasswordSuccess;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport { default } from './MyAccountSignIn.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport MyAccountSignIn from './MyAccountSignIn.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountSignIn/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({\n    isEmailAvailable: state.CheckoutReducer.isEmailAvailable\n});\n\n/** @namespace Component/MyAccountSignIn/Container/mapDispatchtoProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    signIn: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.signIn(options, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/MyAccountSignIn/Container */\nexport class MyAccountSignInContainer extends PureComponent {\n    static propTypes = {\n        state: PropTypes.string.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleForgotPassword: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        signIn: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        onSignIn: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        emailValue: PropTypes.string,\n        isEmailAvailable: PropTypes.bool,\n        setSignInState: PropTypes.func,\n        handleEmailInput: PropTypes.func\n    };\n\n    static defaultProps = {\n        emailValue: '',\n        isEmailAvailable: true,\n        setSignInState: () => {},\n        handleEmailInput: () => {}\n    };\n\n    containerFunctions = {\n        onSignInSuccess: this.onSignInSuccess.bind(this),\n        onSignInAttempt: this.onSignInAttempt.bind(this)\n    };\n\n    componentDidUpdate(prevProps) {\n        const { isCheckout, isEmailAvailable, setSignInState } = this.props;\n        const { isEmailAvailable: prevIsEmailAvailable } = prevProps;\n\n        if (isCheckout && isEmailAvailable && !prevIsEmailAvailable) {\n            setSignInState('');\n        }\n    }\n\n    containerProps = () => {\n        const {\n            state,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            emailValue,\n            handleEmailInput\n        } = this.props;\n\n        return {\n            state,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            emailValue,\n            handleEmailInput\n        };\n    };\n\n    async onSignInSuccess(fields) {\n        const {\n            signIn,\n            showNotification,\n            onSignIn,\n            setLoadingState\n        } = this.props;\n\n        try {\n            await signIn(fields);\n            onSignIn();\n        } catch ([{ message }]) {\n            setLoadingState(false);\n            showNotification('error', message);\n        }\n    }\n\n    onSignInAttempt() {\n        const { setLoadingState } = this.props;\n        setLoadingState(true);\n    }\n\n    render() {\n        return (\n            <MyAccountSignIn\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountSignInContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { signInStateType } from 'Type/Account';\n\n/** @namespace Component/MyAccountForgotPassword/Component */\nexport class MyAccountForgotPassword extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        onForgotPasswordSuccess: PropTypes.func.isRequired,\n        onForgotPasswordAttempt: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleSignIn: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired\n    };\n\n    renderForgotPasswordForm() {\n        const { onForgotPasswordAttempt, onForgotPasswordSuccess, onFormError } = this.props;\n\n        return (\n            <Form\n              key=\"forgot-password\"\n              onSubmit={ onForgotPasswordAttempt }\n              onSubmitSuccess={ onForgotPasswordSuccess }\n              onSubmitError={ onFormError }\n            >\n                <Field\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  label={ __('Email') }\n                  autocomplete=\"email\"\n                  validation={ ['notEmpty', 'email'] }\n                />\n                <div block=\"MyAccountOverlay\" elem=\"Buttons\">\n                    <button block=\"Button\" type=\"submit\">\n                        { __('Send reset link') }\n                    </button>\n                </div>\n            </Form>\n        );\n    }\n\n    renderCreateAccountLabel() {\n        const { isCheckout, handleCreateAccount } = this.props;\n\n        if (isCheckout) {\n            return null;\n        }\n\n        return (\n            <section aria-labelledby=\"create-account-label\">\n                <h4 id=\"create-account-label\">{ __('Don`t have an account?') }</h4>\n                <button\n                  block=\"Button\"\n                  mods={ { likeLink: true } }\n                  onClick={ handleCreateAccount }\n                >\n                    { __('Create an account') }\n                </button>\n            </section>\n        );\n    }\n\n    renderAdditionalField() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <article block=\"MyAccountOverlay\" elem=\"Additional\" mods={ { state } }>\n                <section aria-labelledby=\"forgot-password-labe\">\n                    <h4 id=\"forgot-password-label\">{ __('Already have an account?') }</h4>\n                    <button\n                      block=\"Button\"\n                      mods={ { likeLink: true } }\n                      onClick={ handleSignIn }\n                    >\n                        { __('Sign in here') }\n                    </button>\n                </section>\n                { this.renderCreateAccountLabel() }\n            </article>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                { this.renderForgotPasswordForm() }\n                { this.renderAdditionalField() }\n            </>\n        );\n    }\n}\n\nexport default MyAccountForgotPassword;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { signInStateType } from 'Type/Account';\n\n/** @namespace Component/MyAccountSignIn/Component */\nexport class MyAccountSignIn extends PureComponent {\n    static propTypes = {\n        onSignInSuccess: PropTypes.func.isRequired,\n        onSignInAttempt: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleForgotPassword: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        state: signInStateType.isRequired,\n        emailValue: PropTypes.string.isRequired,\n        handleEmailInput: PropTypes.func\n    };\n\n    static defaultProps = {\n        handleEmailInput: () => {}\n    };\n\n    renderSignInForm() {\n        const {\n            onSignInAttempt,\n            onSignInSuccess,\n            onFormError,\n            handleForgotPassword,\n            emailValue,\n            handleEmailInput,\n            isCheckout\n        } = this.props;\n\n        return (\n            <Form\n              key=\"sign-in\"\n              onSubmit={ onSignInAttempt }\n              onSubmitSuccess={ onSignInSuccess }\n              onSubmitError={ onFormError }\n            >\n                <Field\n                  type=\"text\"\n                  label={ __('Email') }\n                  id=\"email\"\n                  name=\"email\"\n                  value={ emailValue }\n                  autocomplete={ isCheckout ? 'off' : 'email' }\n                  validation={ ['notEmpty', 'email'] }\n                  onChange={ handleEmailInput }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Password') }\n                  id=\"password\"\n                  name=\"password\"\n                  autocomplete=\"current-password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <div block=\"MyAccountOverlay\" elem=\"Buttons\">\n                    <button block=\"Button\">{ __('Sign in') }</button>\n                </div>\n                <button\n                  block=\"Button\"\n                  mods={ { likeLink: true } }\n                  onClick={ handleForgotPassword }\n                >\n                    { __('Forgot password?') }\n                </button>\n            </Form>\n        );\n    }\n\n    renderAdditionalField() {\n        const {\n            isCheckout,\n            handleCreateAccount,\n            state\n        } = this.props;\n\n        if (isCheckout) {\n            return null;\n        }\n\n        return (\n            <article block=\"MyAccountOverlay\" elem=\"Additional\" mods={ { state } }>\n                <section>\n                    <h4 id=\"forgot-password-label\">{ __('Don`t have an account?') }</h4>\n                    <button\n                      block=\"Button\"\n                      mods={ { isHollow: true } }\n                      onClick={ handleCreateAccount }\n                    >\n                        { __('Create an account') }\n                    </button>\n                </section>\n            </article>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                { this.renderSignInForm() }\n                { this.renderAdditionalField() }\n            </>\n        );\n    }\n}\n\nexport default MyAccountSignIn;\n"],"sourceRoot":""}