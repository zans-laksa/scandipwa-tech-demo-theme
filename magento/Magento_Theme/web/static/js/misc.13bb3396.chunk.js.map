{"version":3,"sources":["component/ProductCard/ProductCard.container.js","component/ProductAttributeValue/ProductAttributeValue.component.js"],"names":["ProductCardContainer","this","props","product","configurable_options","Object","keys","length","values","attribute_options","reduce","acc","option","swatch_data","label","type","value","push","to","SharedTransitionContainer","registerSharedElement","containerFunctions","containerProps","defineProperty","_ProductCardContainer","connect","mapStateToProps","mapDispatchToProps"],"mappings":"iRAYaA,EAAb,2LACkC,IAAD,EAC0BC,KAAKC,MAAhDC,QAAWC,4BADM,MACiB,GADjB,EAGzB,GAAiD,IAA7CC,OAAOC,KAAKF,GAAsBG,OAClC,MAAO,GAJc,MAOUF,OAAOG,OAAOJ,GAAsB,GAA/DK,yBAPiB,MAOG,GAPH,EASzB,OAAOJ,OAAOG,OAAOC,GAAmBC,QACpC,SAACC,EAAKC,GAAY,IAEVC,EAEAD,EAFAC,YACAC,EACAF,EADAE,MAHS,EAMWD,GAAe,GAA/BE,EANK,EAMLA,KAAMC,EAND,EAMCA,MAMd,OAJID,GAAQC,GACRL,EAAIM,KAAK,CAAED,QAAOF,QAAOC,SAGtBJ,IAEX,MAzBZ,+BA6Bc,IAAD,OACL,WACK,IADL,CACeO,GAAK,CAACC,OACX,gBAAGC,EAAH,EAAGA,sBAAH,WACG,IADH,6BAAC,eAGa,EAAKlB,OAHnB,IAG0BkB,0BACjB,EAAKC,mBACL,EAAKC,0BArChC,WAZAjB,OAAOkB,eAAeC,EAAuB,OAAQ,CAAER,MAAO,yB,iFAyD/CS,gBAAQC,IAAiBC,IAAzBF,CAA6CzB,K,6ECzD5D","file":"static/js/misc.13bb3396.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { Subscribe } from 'unstated';\n\nimport ProductCard from 'SourceComponent/ProductCard/ProductCard.component';\nimport {\n    mapDispatchToProps,\n    mapStateToProps,\n    ProductCardContainer as SourceProductCardContainer\n} from 'SourceComponent/ProductCard/ProductCard.container';\nimport SharedTransitionContainer from 'SourceComponent/SharedTransition/SharedTransition.unstated';\n\n/** @namespace ScandipwaTheme/Component/ProductCard/Container/ProductCardContainer */\nexport class ProductCardContainer extends SourceProductCardContainer {\n    _getAvailableVisualOptions() {\n        const { product: { configurable_options = {} } } = this.props;\n\n        if (Object.keys(configurable_options).length === 0) {\n            return [];\n        }\n\n        const { attribute_options = {} } = Object.values(configurable_options)[0];\n\n        return Object.values(attribute_options).reduce(\n            (acc, option) => {\n                const {\n                    swatch_data,\n                    label\n                } = option;\n\n                const { type, value } = swatch_data || {};\n\n                if (type && value) {\n                    acc.push({ value, label, type });\n                }\n\n                return acc;\n            },\n            []\n        );\n    }\n\n    render() {\n        return (\n            <Subscribe to={ [SharedTransitionContainer] }>\n                { ({ registerSharedElement }) => (\n                    <ProductCard\n                      // eslint-disable-next-line @scandipwa/scandipwa-guidelines/jsx-no-props-destruction\n                      { ...{ ...this.props, registerSharedElement } }\n                      { ...this.containerFunctions }\n                      { ...this.containerProps() }\n                    />\n                ) }\n            </Subscribe>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCardContainer);\n","import './ProductAttributeValue.override.style.scss';\n\nexport { default } from 'SourceComponent/ProductAttributeValue/ProductAttributeValue.component';\n"],"sourceRoot":""}