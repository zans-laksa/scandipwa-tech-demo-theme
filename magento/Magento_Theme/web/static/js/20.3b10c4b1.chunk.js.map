{"version":3,"sources":["../node_modules/@scandipwa/scandipwa/src/store/Wishlist/Wishlist.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Breadcrumbs/Breadcrumbs.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/NoMatch/NoMatch.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/NewsletterSubscription/NewsletterSubscription.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/UrlRewrites/UrlRewrites.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/query/Wishlist.query.js","../node_modules/@scandipwa/scandipwa/src/store/ProductListInfo/ProductListInfo.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/query/Order.query.js","../node_modules/@scandipwa/scandipwa/src/query/ContactForm.query.js","../node_modules/@scandipwa/scandipwa/src/store/ProductCompare/ProductCompare.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Meta/Meta.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Order/Order.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Category/Category.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/SearchBar/SearchBar.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/query/NewsletterSubscription.query.js","../node_modules/@scandipwa/scandipwa/src/query/UrlRewrites.query.js","../node_modules/@scandipwa/scandipwa/src/query/ProductCompare.query.js","../node_modules/@scandipwa/scandipwa/src/store/Checkout/Checkout.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/query/CheckEmail.query.js","../node_modules/@scandipwa/scandipwa/src/query/Category.query.js","../node_modules/@scandipwa/scandipwa/src/store/ProductList/ProductList.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/ContactForm/ContactForm.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Product/Product.dispatcher.js","../node_modules/@scandipwa/scandipwa/src/store/Review/Review.dispatcher.js"],"names":["CartDispatcher","WishlistDispatcher","dispatch","isSignedIn","this","_syncWishlistWithBE","updateAllProductsInWishlist","fetchQuery","WishlistQuery","getWishlistQuery","then","data","wishlist","items_count","productsToAdd","items","reduce","prev","wishlistItem","id","sku","product","description","quantity","qty","updateIsLoading","error","console","log","showNotification","__","fetchMutation","getSaveWishlistItemMutation","options","updateItemOptions","getClearWishlist","clearWishlist","catch","sharingCode","getMoveWishlistToCart","default","_syncCartWithBE","item_id","noMessages","getRemoveProductFromWishlistMutation","removeItemFromWishlist","itemIdMap","length","map","message","Object","defineProperty","_WishlistDispatcher","value","BreadcrumbsDispatcher","breadcrumbs","toggleBreadcrumbs","updateBreadcrumbs","category","_getCategoryBreadcrumbs","_getProductBreadcrumbs","title","url","name","breadcrumbsList","sort","a","b","category_level","forEach","crumb","category_url","category_name","category_is_active","push","pathname","state","reverse","categories","acc","longestBreadcrumbsLength","breadcrumbsLength","breadcrumbsCategory","_BreadcrumbsDispatcher","NoMatchDispatcher","noMatch","updateNoMatch","_NoMatchDispatcher","NewsletterSubscriptionDispatcher","email","NewsletterSubscriptionQuery","getSubscribeToNewsletterMutation","_NewsletterSubscriptionDispatcher","UrlRewritesDispatcher","urlResolver","urlParam","updateUrlRewrite","notFound","setIsUrlRewritesLoading","UrlRewritesQuery","getQuery","processUrlOptions","trimmedParam","replace","RegExp","window","storeRegexText","_UrlRewritesDispatcher","field","Field","setAlias","addFieldList","_getWishlistFields","addArgument","_getWishlistItemsFields","input","guestQuoteId","BrowserDatabase","getItem","GUEST_QUOTE_ID","_getItemsField","_getProductField","ProductListQuery","_getProductInterfaceFields","_getItemsFields","_WishlistQuery","ProductListInfoDispatcher","products","filter","args","updateProductListInfo","updateInfoLoadStatus","requireInfo","_ProductListInfoDispatcher","OrderQuery","_getOrderListFields","orderId","_getOrderByIdField","isList","_getOrderItemsField","_getOrderItemsFields","_getOrderProductsFields","_getDefaultFields","_prepareImageFields","_prepareAttributes","_prepareThumbnailFields","_prepareSmallImageFields","_prepareAttributesFields","_getAttributeOptions","_getAttributeOptionsFields","addField","_prepareShippingInfoFields","_prepareOrderCustomerAddressInfo","_prepareOrderCustomerAddressInfoFields","_getBaseOrderInfoFields","_getPaymentInfoFields","_getAdditionalInformationField","_getAdditionalInformationFields","_getCustomerInfoField","_getCustomerInfoFields","_getBaseOrderInfoField","_getPaymentInfoField","_prepareShippingInfo","_getOrderProductsField","_OrderQuery","ContactFormQuery","mutation","_addSendContactFormMutationArguments","_getSendContactFormMutationResponse","_getContactPageConfigFields","_ContactFormQuery","ProductCompareDispatcher","_getGuestQuoteId","guestCartId","toggleLoader","ProductCompareQuery","compareProducts","setCompareList","productId","getAddProductToCompareMutation","result","getRemoveComparedProductMutation","removeComparedProduct","getClearComparedProductsMutation","clearComparedProducts","cartDispatcher","createGuestEmptyCart","_ProductCompareDispatcher","MetaDispatcher","meta","_getCategoryMeta","updateMeta","_getProductMeta","meta_title","meta_keyword","canonical_url","meta_description","keywords","location","origin","appendWithStoreCode","meta_keywords","meta_robots","robots","_MetaDispatcher","OrderDispatcher","query","getOrderListQuery","orders","getOrderList","_OrderDispatcher","CategoryDispatcher","isSearchPage","updateCurrentCategory","CategoryQuery","_CategoryDispatcher","SearchBarDispatcher","updateLoadStatus","updateSearchBar","_","clearSearchResults","notRequireInfo","_SearchBarDispatcher","_getPageFields","_NewsletterSubscriptionQuery","_getUrlResolverFields","_UrlRewritesQuery","_getQueryFields","_getProductsField","_getProductsFields","_getProductThumbnailField","_getProductSmallField","_getPriceRangeField","_getAttributesField","_getConfigurableProductFragment","_getGroupedProductItems","_getCustomizableProductFragment","_getValuesField","_ProductCompareQuery","CheckoutDispatcher","is_email_available","isEmailAvailable","updateEmailAvailable","CheckEmailQuery","getIsEmailAvailableQuery","_CheckoutDispatcher","_CheckEmailQuery","_getConditionalArguments","_getChildrenFields","categoryIds","Error","_getBreadcrumbFields","_getCmsBlockFields","_getCmsBlockField","_getBreadcrumbsField","_CategoryQuery","ProductListDispatcher","total_count","page_info","total_pages","isNext","currentPage","appendPage","updateProductListItems","updatePageLoadingStatus","_ProductListDispatcher","ContactFormDispatcher","getSendContactFormMutation","updateContactForm","isLoading","contactForm","_ContactFormDispatcher","LinkedProductsDispatcher","ProductDispatcher","product_links","links","values","item","dispatcher","handleData","clearLinkedProducts","updateProductDetails","_ProductDispatcher","ReviewDispatcher","reviewItem","rating_data","product_sku","detail","nickname","summary","text","ratings","keys","key","value_id","ReviewQuery","getAddProductReviewMutation","prepareReviewData","_ReviewDispatcher"],"mappings":"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","file":"static/js/20.3b10c4b1.chunk.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport WishlistQuery from 'Query/Wishlist.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    clearWishlist,\n    removeItemFromWishlist,\n    updateAllProductsInWishlist,\n    updateIsLoading,\n    updateItemOptions\n} from 'Store/Wishlist/Wishlist.action';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation, fetchQuery } from 'Util/Request';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/**\n * Product Wishlist Dispatcher\n * @class WishlistDispatcher\n * @namespace Store/Wishlist/Dispatcher\n */\nexport class WishlistDispatcher {\n    updateInitialWishlistData(dispatch) {\n        if (isSignedIn()) {\n            this._syncWishlistWithBE(dispatch);\n        } else {\n            dispatch(updateAllProductsInWishlist({}));\n        }\n    }\n\n    _syncWishlistWithBE(dispatch) {\n        // Need to get current wishlist from BE, update wishlist\n        return fetchQuery(WishlistQuery.getWishlistQuery()).then(\n            /** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryThen */\n            (data) => {\n                if (data && data.wishlist && data.wishlist.items_count) {\n                    const { wishlist } = data;\n                    const productsToAdd = wishlist.items.reduce((prev, wishlistItem) => {\n                        const {\n                            id,\n                            sku,\n                            product,\n                            description,\n                            qty: quantity\n                        } = wishlistItem;\n\n                        return {\n                            ...prev,\n                            [id]: {\n                                ...product,\n                                quantity,\n                                wishlist: {\n                                    id,\n                                    sku,\n                                    quantity,\n                                    description\n                                }\n                            }\n                        };\n                    }, {});\n\n                    dispatch(updateAllProductsInWishlist(productsToAdd));\n                } else {\n                    dispatch(updateIsLoading(false));\n                }\n            },\n            /** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryError */\n            (error) => {\n                // eslint-disable-next-line no-console\n                console.log(error);\n                dispatch(updateIsLoading(false));\n            }\n        );\n    }\n\n    addItemToWishlist(dispatch, wishlistItem) {\n        dispatch(updateIsLoading(true));\n        dispatch(showNotification('success', __('Product added to wish-list!')));\n\n        return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(wishlistItem)).then(\n            /** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationThen */\n            () => this._syncWishlistWithBE(dispatch),\n            /** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationError */\n            (error) => {\n                dispatch(showNotification('error', __('Error updating wish list!')));\n                // eslint-disable-next-line no-console\n                console.log(error);\n            }\n        );\n    }\n\n    updateWishlistItem(dispatch, options) {\n        return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(options)).then(\n            /** @namespace Store/Wishlist/Dispatcher/updateWishlistItemFetchMutationThen */\n            () => dispatch(updateItemOptions(options))\n        );\n    }\n\n    clearWishlist(dispatch) {\n        return fetchMutation(WishlistQuery.getClearWishlist())\n            .then(\n                /** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThen */\n                () => dispatch(clearWishlist())\n            )\n            .catch(\n                /** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThenCatch */\n                () => dispatch(showNotification('error', __('Error clearing wish list!')))\n            );\n    }\n\n    moveWishlistToCart(dispatch, sharingCode) {\n        return fetchMutation(WishlistQuery.getMoveWishlistToCart(sharingCode))\n            .then(\n                /** @namespace Store/Wishlist/Dispatcher/moveWishlistToCartFetchMutationThen */\n                () => {\n                    dispatch(clearWishlist());\n                    CartDispatcher.then(\n                        ({ default: dispatcher }) => dispatcher._syncCartWithBE(dispatch)\n                    );\n                }\n            );\n    }\n\n    removeItemFromWishlist(dispatch, { item_id, noMessages }) {\n        if (!item_id) {\n            return null;\n        }\n        dispatch(updateIsLoading(true));\n\n        if (noMessages) {\n            return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(\n                /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistNoMessagesFetchMutationThen */\n                () => dispatch(removeItemFromWishlist(item_id))\n            );\n        }\n\n        dispatch(showNotification('info', __('Product has been removed from your Wish List!')));\n\n        return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(\n            /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationThen */\n            () => dispatch(removeItemFromWishlist(item_id)),\n            /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationError */\n            (error) => {\n                dispatch(showNotification('error', __('Error updating wish list!')));\n                // eslint-disable-next-line no-console\n                console.log(error);\n            }\n        );\n    }\n\n    // TODO: Need to make it in one request\n    removeItemsFromWishlist(dispatch, itemIdMap) {\n        if (!itemIdMap.length) {\n            return null;\n        }\n\n        return itemIdMap.map((id) => (\n            fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(id)).then(\n                /** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistNoMessagesFetchMutationThen */\n                () => {\n                    dispatch(removeItemFromWishlist(id));\n                    dispatch(showNotification('info', __('Product has been removed from your Wish List!')));\n                },\n                /** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistFetchMutationError */\n                (error) => {\n                    const [message] = error;\n\n                    dispatch(showNotification('error', message || __('Error updating wishlist!')));\n                    // eslint-disable-next-line no-console\n                    console.log(error);\n                }\n            )\n        ));\n    }\n}\n\nexport default new WishlistDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { toggleBreadcrumbs, updateBreadcrumbs } from 'Store/Breadcrumbs/Breadcrumbs.action';\n\n/**\n * Breadcrumbs Dispatcher\n * @class BreadcrumbsDispatcher\n * @namespace Store/Breadcrumbs/Dispatcher\n */\nexport class BreadcrumbsDispatcher {\n    /**\n     * Set breadcrumbs\n     * @param {Array<Object>} breadcrumbs Breadcrumbs array\n     * @param {Function} dispatch\n     * @memberof BreadcrumbsDispatcher\n     */\n    update(breadcrumbs, dispatch) {\n        dispatch(toggleBreadcrumbs(true));\n        dispatch(updateBreadcrumbs(breadcrumbs));\n    }\n\n    /**\n     * Set breadcrumbs for category\n     * @param {Array<Object>} category Category breadcumbs items\n     * @param {Function} dispatch\n     * @memberof BreadcrumbsDispatcher\n     */\n    updateWithCategory(category, dispatch) {\n        const breadcrumbs = this._getCategoryBreadcrumbs(category);\n        dispatch(toggleBreadcrumbs(true));\n        dispatch(updateBreadcrumbs(breadcrumbs));\n    }\n\n    /**\n     * Set breadcrumbs for category\n     * @param {Array<Object>} category Category breadcumbs items\n     * @param {Function} dispatch\n     * @memberof BreadcrumbsDispatcher\n     */\n    updateWithProduct(product, dispatch) {\n        const breadcrumbs = this._getProductBreadcrumbs(product);\n        dispatch(toggleBreadcrumbs(true));\n        dispatch(updateBreadcrumbs(breadcrumbs));\n    }\n\n    /**\n     * Set breadcrumbs for category\n     * @param {Array<Object>} category Category breadcumbs items\n     * @param {Function} dispatch\n     * @memberof BreadcrumbsDispatcher\n     */\n    updateWithCmsPage({ title }, dispatch) {\n        const breadcrumbs = title\n            ? [\n                {\n                    url: '',\n                    name: title\n                },\n                {\n                    url: '/',\n                    name: __('Home')\n                }\n            ]\n            : [];\n\n        dispatch(updateBreadcrumbs(breadcrumbs));\n    }\n\n    /**\n     * Get breadcrumbs for category\n     * @param {Object} category Category breadcumbs items\n     * @return {Array<Object>} Breadcrumbs array\n     * @memberof BreadcrumbsDispatcher\n     */\n    _getCategoryBreadcrumbs(category) {\n        const { url, name, breadcrumbs } = category;\n        const breadcrumbsList = [];\n\n        if (breadcrumbs) {\n            breadcrumbs\n                .sort((a, b) => a.category_level - b.category_level)\n                .forEach((crumb) => {\n                    const { category_url, category_name, category_is_active } = crumb;\n\n                    // do not add link to inactive categories\n                    if (category_is_active) {\n                        breadcrumbsList.push({\n                            name: category_name,\n                            url: {\n                                pathname: category_url,\n                                state: { category: true }\n                            }\n                        });\n                    } else {\n                        breadcrumbsList.push({\n                            url: '',\n                            name: category_name\n                        });\n                    }\n                });\n        }\n\n        return [\n            { url, name },\n            ...breadcrumbsList.reverse()\n        ];\n    }\n\n    /**\n     * Get breadcrumbs for product\n     * @param {Object} product Product breadcumbs items\n     * @return {Array<Object>} Breadcrumbs array\n     * @memberof BreadcrumbsDispatcher\n     */\n    _getProductBreadcrumbs(product) {\n        const { categories, url, name } = product;\n\n        if (!categories || !categories.length) {\n            return [];\n        }\n\n        const { breadcrumbsCategory = {} } = categories.reduce((acc, category) => {\n            const { longestBreadcrumbsLength } = acc;\n            const { breadcrumbs } = category;\n            const breadcrumbsLength = (breadcrumbs || []).length;\n\n            if (!breadcrumbsLength && longestBreadcrumbsLength !== 0) {\n                return acc;\n            }\n\n            if (longestBreadcrumbsLength === 0) {\n                return { ...acc, breadcrumbsCategory: category };\n            }\n\n            if (breadcrumbsLength <= longestBreadcrumbsLength) {\n                return acc;\n            }\n\n            return {\n                breadcrumbsCategory: category,\n                longestBreadcrumbsLength: breadcrumbsLength\n            };\n        }, {\n            breadcrumbsCategory: {},\n            longestBreadcrumbsLength: 0\n        });\n\n        return [\n            { url, name },\n            ...this._getCategoryBreadcrumbs(breadcrumbsCategory)\n        ];\n    }\n}\n\nexport default new BreadcrumbsDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\n/**\n * NoMatch Dispatcher\n * @class NoMatchDispatcher\n * @namespace Store/NoMatch/Dispatcher\n */\nexport class NoMatchDispatcher {\n    updateNoMatch(dispatch, options) {\n        const { noMatch } = options;\n        dispatch(updateNoMatch(noMatch));\n    }\n}\n\nexport default new NoMatchDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport NewsletterSubscriptionQuery from 'Query/NewsletterSubscription.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation } from 'Util/Request';\n\n/**\n * Product Cart Dispatcher\n * @class NewsletterSubscriptionDispatcher\n * @namespace Store/NewsletterSubscription/Dispatcher\n */\nexport class NewsletterSubscriptionDispatcher {\n    subscribeToNewsletter(dispatch, email) {\n        return fetchMutation(NewsletterSubscriptionQuery.getSubscribeToNewsletterMutation(email)).then(\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationThen */\n            () => {\n                dispatch(showNotification('success', __('You’ve successfully subscribed to our newsletter')));\n            },\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess */\n            (error) => dispatch(showNotification('error', error[0].message))\n        );\n    }\n}\n\nexport default new NewsletterSubscriptionDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport UrlRewritesQuery from 'Query/UrlRewrites.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { setIsUrlRewritesLoading, updateUrlRewrite } from 'Store/UrlRewrites/UrlRewrites.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Url Rewrite Dispathcer\n * @class UrlRewritesDispatcher\n * @extends RequestDispatcher\n * @namespace Store/UrlRewrites/Dispatcher\n */\nexport class UrlRewritesDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('UrlRewrites');\n    }\n\n    onSuccess({ urlResolver }, dispatch, { urlParam }) {\n        dispatch(updateUrlRewrite(urlResolver || { notFound: true }, urlParam));\n    }\n\n    onError(error, dispatch) {\n        dispatch(setIsUrlRewritesLoading(false));\n        dispatch(showNotification('error', 'Error fetching URL-rewrites!', error));\n    }\n\n    /**\n     * Prepare UrlRewrite requests\n     * @param {Object} options A object containing different aspects of query, each item can be omitted\n     * @return {Query} UrlRewrite query\n     * @memberof UrlRewritesDispatcher\n     */\n    prepareRequest(options, dispatch) {\n        dispatch(setIsUrlRewritesLoading(true));\n\n        return [\n            UrlRewritesQuery.getQuery(this.processUrlOptions(options))\n        ];\n    }\n\n    processUrlOptions(options) {\n        const { urlParam } = options;\n\n        // FAILSAFE: Trim index.php if someone forgot to set \"Use Web Server Rewrites\" to \"Yes\"\n        const trimmedParam = urlParam.replace('index.php/', '');\n\n        return {\n            ...options,\n            urlParam: trimmedParam.replace(new RegExp(window.storeRegexText), '')\n        };\n    }\n}\n\nexport default new UrlRewritesDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { GUEST_QUOTE_ID } from 'Store/Cart/Cart.dispatcher';\nimport { isSignedIn } from 'Util/Auth';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/Wishlist */\nexport class WishlistQuery {\n    getWishlistQuery(sharingCode) {\n        const field = new Field('s_wishlist')\n            .setAlias('wishlist')\n            .addFieldList(this._getWishlistFields());\n\n        if (sharingCode) {\n            field.addArgument('sharing_code', 'ID', sharingCode);\n        }\n\n        return field;\n    }\n\n    getSaveWishlistItemMutation(wishlistItem) {\n        return new Field('s_saveWishlistItem')\n            .setAlias('saveWishlistItem')\n            .addArgument('wishlistItem', 'WishlistItemInput!', wishlistItem)\n            .addFieldList(this._getWishlistItemsFields());\n    }\n\n    getShareWishlistMutation(input) {\n        return new Field('s_shareWishlist')\n            .setAlias('shareWishlist')\n            .addArgument('input', 'ShareWishlistInput!', input);\n    }\n\n    getClearWishlist() {\n        return new Field('s_clearWishlist')\n            .setAlias('clearWishlist');\n    }\n\n    getMoveWishlistToCart(sharingCode) {\n        const field = new Field('s_moveWishlistToCart')\n            .setAlias('moveWishlistToCart');\n\n        if (sharingCode) {\n            field.addArgument('sharingCode', 'ID', sharingCode);\n\n            if (!isSignedIn()) {\n                const guestQuoteId = BrowserDatabase.getItem(GUEST_QUOTE_ID);\n                field.addArgument('guestCartId', 'ID', guestQuoteId);\n            }\n        }\n\n        return field;\n    }\n\n    getRemoveProductFromWishlistMutation(item_id) {\n        return new Field('s_removeProductFromWishlist')\n            .setAlias('removeProductFromWishlist')\n            .addArgument('itemId', 'ID!', item_id);\n    }\n\n    _getWishlistFields() {\n        return [\n            'updated_at',\n            'items_count',\n            'creators_name',\n            this._getItemsField()\n        ];\n    }\n\n    _getWishlistItemsFields() {\n        return [\n            'id',\n            'sku',\n            'qty',\n            'description'\n        ];\n    }\n\n    _getItemsFields() {\n        return [\n            ...this._getWishlistItemsFields(),\n            this._getProductField()\n        ];\n    }\n\n    _getProductField() {\n        return new Field('product')\n            .addFieldList(ProductListQuery._getProductInterfaceFields());\n    }\n\n    _getItemsField() {\n        return new Field('items')\n            .addFieldList(this._getItemsFields());\n    }\n}\n\nexport default new WishlistQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    updateInfoLoadStatus,\n    updateProductListInfo\n} from 'Store/ProductListInfo/ProductListInfo.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Product List Info Dispatcher\n * @class ProductListInfoDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ProductListInfo/Dispatcher\n */\nexport class ProductListInfoDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('ProductListInfo');\n    }\n\n    onSuccess({ products }, dispatch, options) {\n        const {\n            args: {\n                filter\n            }\n        } = options;\n\n        dispatch(updateProductListInfo(products, filter));\n    }\n\n    onError(error, dispatch) {\n        dispatch(showNotification('error', 'Error fetching Product List Information!', error));\n        dispatch(updateNoMatch(true));\n    }\n\n    prepareRequest(options, dispatch) {\n        dispatch(updateInfoLoadStatus(true));\n\n        return ProductListQuery.getQuery({\n            ...options,\n            requireInfo: true\n        });\n    }\n}\n\nexport default new ProductListInfoDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * Order Query\n * @class OrderQuery\n * @namespace Query/Order\n */\nexport class OrderQuery {\n    getOrderListQuery() {\n        return new Field('getOrderList')\n            .addFieldList(this._getOrderListFields(true));\n    }\n\n    getOrderByIdQuery(orderId) {\n        return this._getOrderByIdField(orderId);\n    }\n\n    _getOrderListFields(isList) {\n        return [\n            this._getOrderItemsField(isList)\n        ];\n    }\n\n    _getOrderByIdField(orderId) {\n        return new Field('getOrderById')\n            .addArgument('id', 'Int!', orderId)\n            .addFieldList(this._getOrderItemsFields());\n    }\n\n    _getOrderProductsField() {\n        return new Field('order_products')\n            .addFieldList(this._getOrderProductsFields());\n    }\n\n    _getOrderProductsFields() {\n        return [\n            ...this._getDefaultFields(),\n            ...this._prepareImageFields(),\n            this._prepareAttributes()\n        ];\n    }\n\n    _prepareImageFields() {\n        return [\n            new Field('thumbnail')\n                .addFieldList(this._prepareThumbnailFields()),\n            new Field('small_image')\n                .addFieldList(this._prepareSmallImageFields())\n        ];\n    }\n\n    _prepareSmallImageFields() {\n        return [\n            'url',\n            'label',\n            'path'\n        ];\n    }\n\n    _prepareThumbnailFields() {\n        return [\n            'url',\n            'label',\n            'path'\n        ];\n    }\n\n    _prepareAttributes() {\n        return new Field('s_attributes')\n            .setAlias('attributes')\n            .addFieldList(this._prepareAttributesFields());\n    }\n\n    _prepareAttributesFields() {\n        return [\n            'attribute_value',\n            'attribute_code',\n            'attribute_type',\n            'attribute_label',\n            this._getAttributeOptions()\n        ];\n    }\n\n    _getAttributeOptions() {\n        return new Field('attribute_options')\n            .addFieldList(this._getAttributeOptionsFields());\n    }\n\n    _getAttributeOptionsFields() {\n        return [\n            'label',\n            'value',\n            new Field('swatch_data')\n                .addField('value')\n        ];\n    }\n\n    _getDefaultFields() {\n        return [\n            'id',\n            'name',\n            (new Field('short_description').addField('html')),\n            'sku',\n            'qty',\n            'row_total',\n            'original_price',\n            'license_key'\n        ];\n    }\n\n    _prepareShippingInfo() {\n        return new Field('shipping_info')\n            .addFieldList(this._prepareShippingInfoFields());\n    }\n\n    _prepareShippingInfoFields() {\n        return [\n            'shipping_method',\n            'shipping_description',\n            'shipping_amount',\n            'tracking_numbers',\n            this._prepareOrderCustomerAddressInfo()\n        ];\n    }\n\n    _prepareOrderCustomerAddressInfo() {\n        return new Field('shipping_address')\n            .addFieldList(this._prepareOrderCustomerAddressInfoFields());\n    }\n\n    _prepareOrderCustomerAddressInfoFields() {\n        return [\n            'city',\n            'company',\n            'firstname',\n            'lastname',\n            'middlename',\n            'telephone',\n            'district',\n            'house_number',\n            'apartment_number',\n            'postomat_code',\n            'store_pickup_code',\n            'post_office_code',\n            'postcode',\n            'street',\n            'is_b2b',\n            'region',\n            'organizationname',\n            'organizationbin',\n            'organizationaddress',\n            'organizationiic',\n            'organizationbik'\n        ];\n    }\n\n    _getBaseOrderInfoField(isList) {\n        return new Field('base_order_info')\n            .addFieldList(this._getBaseOrderInfoFields(isList));\n    }\n\n    _getBaseOrderInfoFields(isList) {\n        return [\n            'id',\n            'increment_id',\n            'created_at',\n            'status_label',\n            'grand_total',\n            ...(isList ? [] : ['sub_total'])\n        ];\n    }\n\n    _getPaymentInfoField() {\n        return new Field('payment_info')\n            .addFieldList(this._getPaymentInfoFields());\n    }\n\n    _getPaymentInfoFields() {\n        return [\n            'method',\n            this._getAdditionalInformationField()\n        ];\n    }\n\n    _getAdditionalInformationField() {\n        return new Field('additional_information')\n            .addFieldList(this._getAdditionalInformationFields());\n    }\n\n    _getAdditionalInformationFields() {\n        return [\n            'bank',\n            'method_title',\n            'credit_type',\n            'month',\n            this._getCustomerInfoField()\n        ];\n    }\n\n    _getCustomerInfoField() {\n        return new Field('customer_info')\n            .addFieldList(this._getCustomerInfoFields());\n    }\n\n    _getCustomerInfoFields() {\n        return [\n            'first_name',\n            'last_name',\n            'phone'\n        ];\n    }\n\n    _getOrderItemsField(isList) {\n        return new Field('items')\n            .addFieldList(this._getOrderItemsFields(isList));\n    }\n\n    _getOrderItemsFields(isList) {\n        return [\n            this._getBaseOrderInfoField(isList),\n            ...(!isList ? [\n                this._getPaymentInfoField(),\n                this._prepareShippingInfo(),\n                this._getOrderProductsField()\n            ] : [])\n        ];\n    }\n}\n\nexport default new OrderQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/ContactForm */\nexport class ContactFormQuery {\n    getSendContactFormMutation(options) {\n        const mutation = new Field('contactForm');\n        this._addSendContactFormMutationArguments(mutation, options);\n        mutation.addFieldList(this._getSendContactFormMutationResponse());\n        return mutation;\n    }\n\n    getContactPageConfigQuery() {\n        return new Field('contactPageConfig')\n            .addFieldList(this._getContactPageConfigFields());\n    }\n\n    _addSendContactFormMutationArguments(mutation, options) {\n        return mutation.addArgument('contact', 'ContactForm!', options);\n    }\n\n    _getSendContactFormMutationResponse() {\n        return ['message'];\n    }\n\n    _getContactPageConfigFields() {\n        return ['enabled'];\n    }\n}\n\nexport default new ContactFormQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductCompareQuery from 'Query/ProductCompare.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    clearComparedProducts,\n    removeComparedProduct,\n    setCompareList,\n    toggleLoader\n} from 'Store/ProductCompare/ProductCompare.action';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { fetchMutation, fetchQuery } from 'Util/Request';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\nexport const GUEST_QUOTE_ID = 'guest_quote_id';\n\n/** @namespace Store/ProductCompare/Dispatcher */\nexport class ProductCompareDispatcher {\n    async getCompareList(dispatch) {\n        const guestCartId = await this._getGuestQuoteId(dispatch);\n\n        dispatch(toggleLoader(true));\n\n        try {\n            const { compareProducts } = await fetchQuery(\n                ProductCompareQuery.getQuery(guestCartId)\n            );\n\n            dispatch(toggleLoader(false));\n            dispatch(setCompareList(compareProducts));\n        } catch (error) {\n            dispatch(toggleLoader(false));\n            dispatch(showNotification('error', __('Unable to fetch compare list'), error));\n        }\n    }\n\n    async addProductToCompare(productId, dispatch) {\n        const guestCartId = await this._getGuestQuoteId(dispatch);\n\n        try {\n            const result = await fetchMutation(\n                ProductCompareQuery.getAddProductToCompareMutation(\n                    productId,\n                    guestCartId\n                )\n            );\n\n            dispatch(showNotification('success', __('Product is added to the compare list')));\n            return result;\n        } catch (error) {\n            dispatch(showNotification('error', __('Unable to add product to the compare list'), error));\n            return false;\n        }\n    }\n\n    async removeComparedProduct(productId, dispatch) {\n        const guestCartId = await this._getGuestQuoteId(dispatch);\n\n        try {\n            const result = await fetchMutation(\n                ProductCompareQuery.getRemoveComparedProductMutation(\n                    productId,\n                    guestCartId\n                )\n            );\n\n            dispatch(showNotification('success', __('Product is removed from the compare list')));\n            dispatch(removeComparedProduct(productId));\n            return result;\n        } catch (error) {\n            dispatch(showNotification('error', __('Unable to remove product from the compare list'), error));\n            return false;\n        }\n    }\n\n    async clearComparedProducts(dispatch) {\n        const guestCartId = await this._getGuestQuoteId(dispatch);\n\n        dispatch(toggleLoader(true));\n\n        try {\n            const result = await fetchMutation(\n                ProductCompareQuery.getClearComparedProductsMutation(guestCartId)\n            );\n\n            dispatch(toggleLoader(false));\n            dispatch(clearComparedProducts());\n            dispatch(showNotification('success', __('Compare list is cleared')));\n            return result;\n        } catch (error) {\n            dispatch(toggleLoader(false));\n            dispatch(showNotification('error', __('Unable to clear product compare list'), error));\n            return false;\n        }\n    }\n\n    async _getGuestQuoteId(dispatch) {\n        const result = BrowserDatabase.getItem(GUEST_QUOTE_ID);\n\n        if (result) {\n            return result;\n        }\n\n        const { default: cartDispatcher } = await CartDispatcher;\n        return cartDispatcher.createGuestEmptyCart(dispatch);\n    }\n}\n\nexport default new ProductCompareDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { appendWithStoreCode } from 'Util/Url';\n\n/**\n * Meta Dispatcher\n * @class MetaDispatcher\n * @namespace Util/Meta/Dispatcher\n */\nexport class MetaDispatcher {\n    /**\n     * Set meta for category\n     * @param {Object} category\n     * @param {Function} dispatch\n     * @memberof MetaDispatcher\n     */\n    updateWithCategory(category, dispatch) {\n        const meta = this._getCategoryMeta(category);\n        dispatch(updateMeta(meta));\n    }\n\n    /**\n     * Set meta for product\n     * @param {Object} product\n     * @param {Function} dispatch\n     * @memberof MetaDispatcher\n     */\n    updateWithProduct(product, dispatch) {\n        const meta = this._getProductMeta(product);\n        dispatch(updateMeta(meta));\n    }\n\n    /**\n     * Get meta for product\n     * @param {Object} product\n     * @return {Object} Meta object\n     * @memberof MetaDispatcher\n     */\n    _getProductMeta(product) {\n        const {\n            name,\n            meta_title,\n            meta_keyword,\n            canonical_url,\n            meta_description\n        } = product;\n\n        return {\n            description: meta_description,\n            keywords: meta_keyword,\n            title: meta_title || name,\n            canonical_url: `${window.location.origin}${appendWithStoreCode(canonical_url)}`\n        };\n    }\n\n    /**\n     * Get meta for category\n     * @param {Object} category\n     * @return {Object} Meta object\n     * @memberof MetaDispatcher\n     */\n    _getCategoryMeta(category) {\n        const {\n            description, name, canonical_url,\n            meta_title, meta_keywords, meta_description,\n            meta_robots = 'follow, index'\n        } = category;\n\n        return {\n            description: meta_description || description,\n            title: meta_title || name,\n            keywords: meta_keywords,\n            canonical_url: `${window.location.origin}${appendWithStoreCode(canonical_url)}`,\n            robots: meta_robots\n        };\n    }\n}\n\nexport default new MetaDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport OrderQuery from 'Query/Order.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { getOrderList } from 'Store/Order/Order.action';\nimport { fetchQuery } from 'Util/Request';\n\n/** @namespace Store/Order/Dispatcher */\nexport class OrderDispatcher {\n    requestOrders(dispatch) {\n        const query = OrderQuery.getOrderListQuery();\n\n        return fetchQuery(query).then(\n            /** @namespace Store/Order/Dispatcher/requestOrdersFetchQueryThen */\n            ({ getOrderList: orders }) => {\n                dispatch(getOrderList(orders, false));\n            },\n            /** @namespace Store/Order/Dispatcher/requestOrdersFetchQueryError */\n            (error) => dispatch(showNotification('error', error[0].message))\n        );\n    }\n}\n\nexport default new OrderDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport CategoryQuery from 'Query/Category.query';\nimport { updateCurrentCategory } from 'Store/Category/Category.action';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Category Dispatcher\n * @class CategoryDispatcher\n * @extends QueryDispatcher\n * @namespace Store/Category/Dispatcher\n */\nexport class CategoryDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('Category');\n    }\n\n    onSuccess(data, dispatch, { isSearchPage }) {\n        const { category = {}, category: { id } } = data;\n\n        if (!id && !isSearchPage) {\n            dispatch(updateNoMatch(true));\n        }\n\n        dispatch(updateCurrentCategory(category));\n    }\n\n    onError(error, dispatch, { isSearchPage }) {\n        if (!isSearchPage) {\n            dispatch(updateNoMatch(true));\n            dispatch(showNotification('error', 'Error fetching Category!', error));\n        } else {\n            dispatch(updateCurrentCategory({ id: 'all-products' }));\n        }\n    }\n\n    prepareRequest(options) {\n        return CategoryQuery.getQuery(options);\n    }\n}\n\nexport default new CategoryDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { QueryDispatcher } from 'Util/Request';\n\nimport { clearSearchResults, updateLoadStatus, updateSearchBar } from './SearchBar.action';\n\n/**\n * Search Bar Dispatcher\n * @class SearchBarDispatcher\n * @extends QueryDispatcher\n * @namespace Store/SearchBar/Dispatcher\n */\nexport class SearchBarDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('SearchBar');\n    }\n\n    onSuccess(data, dispatch) {\n        dispatch(updateLoadStatus(false));\n        dispatch(updateSearchBar(data));\n    }\n\n    onError(_, dispatch) {\n        dispatch(updateLoadStatus(false));\n    }\n\n    clearSearchResults(dispatch) {\n        dispatch(clearSearchResults());\n    }\n\n    prepareRequest(options, dispatch) {\n        dispatch(updateLoadStatus(true));\n\n        return ProductListQuery.getQuery({\n            ...options,\n            notRequireInfo: true\n        });\n    }\n}\n\nexport default new SearchBarDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * NewsletterSubscription Mutations\n * @class NewsletterSubscriptionQuery\n * @namespace Query/NewsletterSubscription\n */\nexport class NewsletterSubscriptionQuery {\n    getSubscribeToNewsletterMutation(email) {\n        return new Field('subscribeEmailToNewsletter')\n            .addArgument('email', 'String!', email)\n            .addFieldList(this._getPageFields());\n    }\n\n    _getPageFields() {\n        return [\n            'status'\n        ];\n    }\n}\n\nexport default new NewsletterSubscriptionQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n/**\n * UrlRewrites Query\n * @class UrlRewritesQuery\n * @namespace Query/UrlRewrites\n */\nexport class UrlRewritesQuery {\n    getQuery({ urlParam }) {\n        return new Field('urlResolver')\n            .addArgument('url', 'String!', urlParam)\n            .addFieldList(this._getUrlResolverFields());\n    }\n\n    _getUrlResolverFields() {\n        return [\n            'id',\n            'sku',\n            'type'\n        ];\n    }\n}\n\nexport default new UrlRewritesQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { ProductListQuery } from 'Query/ProductList.query';\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/ProductCompare */\nexport class ProductCompareQuery extends ProductListQuery {\n    getQuery(guestCartId = null) {\n        const field = new Field('compareProducts');\n\n        if (guestCartId) {\n            field.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return field.addFieldList(this._getQueryFields());\n    }\n\n    getAddProductToCompareMutation(productId, guestCartId = null) {\n        const field = new Field('addProductToCompare')\n            .addArgument('product_id', 'Int!', productId);\n\n        if (guestCartId) {\n            field.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return field;\n    }\n\n    getRemoveComparedProductMutation(productId, guestCartId = null) {\n        const field = new Field('removeComparedProduct')\n            .addArgument('product_id', 'Int!', productId);\n\n        if (guestCartId) {\n            field.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return field;\n    }\n\n    getClearComparedProductsMutation(guestCartId = null) {\n        const field = new Field('clearComparedProducts');\n\n        if (guestCartId) {\n            field.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return field;\n    }\n\n    _getQueryFields() {\n        return [\n            'count',\n            this._getProductsField()\n        ];\n    }\n\n    _getProductsField() {\n        return new Field('products')\n            .addFieldList(this._getProductsFields());\n    }\n\n    _getProductsFields() {\n        return [\n            'id',\n            'name',\n            'sku',\n            'url',\n            'type_id',\n            this._getProductThumbnailField(),\n            this._getProductSmallField(),\n            this._getPriceRangeField(),\n            this._getAttributesField(),\n            this._getConfigurableProductFragment(),\n            this._getGroupedProductItems(),\n            this._getCustomizableProductFragment()\n        ];\n    }\n\n    _getConfigurableOptionFields() {\n        return [\n            'attribute_code',\n            'label',\n            this._getValuesField()\n        ];\n    }\n\n    _getValueFields() {\n        return [\n            'label'\n        ];\n    }\n}\n\nexport default new ProductCompareQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport CheckEmailQuery from 'Query/CheckEmail.query';\nimport { QueryDispatcher } from 'Util/Request';\n\nimport { updateEmailAvailable } from './Checkout.action';\n\n/**\n * Checkout Dispatcher\n * @class CheckoutDispatcher\n * @extends QueryDispatcher\n * @namespace Store/Checkout/Dispatcher\n *  */\nexport class CheckoutDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('Checkout');\n    }\n\n    onSuccess(data, dispatch) {\n        const { isEmailAvailable: { is_email_available } } = data;\n        dispatch(updateEmailAvailable(is_email_available));\n    }\n\n    onError(error, dispatch) {\n        dispatch(updateEmailAvailable(true));\n        return error;\n    }\n\n    prepareRequest(email) {\n        return CheckEmailQuery.getIsEmailAvailableQuery(email);\n    }\n}\n\nexport default new CheckoutDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * Email availability check Query\n * @class CheckEmailQuery\n * @namespace Query/CheckEmail\n */\nexport class CheckEmailQuery {\n    getIsEmailAvailableQuery(email) {\n        const query = new Field('isEmailAvailable')\n            .addArgument('email', 'String!', email)\n            .addField('is_email_available');\n\n        return query;\n    }\n}\n\nexport default new CheckEmailQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * Category Query\n * @class CategoryQuery\n * @namespace Query/Category\n */\nexport class CategoryQuery {\n    __construct() {\n        super.__construct();\n        this.options = {};\n    }\n\n    getQuery(options = {}) {\n        this.options = options;\n\n        return new Field('category')\n            .addArgument(...this._getConditionalArguments())\n            .addFieldList(this._getDefaultFields())\n            .addField(this._getChildrenFields());\n    }\n\n    _getConditionalArguments() {\n        const { categoryIds } = this.options;\n\n        if (categoryIds) {\n            return ['id', 'Int!', categoryIds];\n        }\n\n        throw new Error(__('There was an error requesting the category'));\n    }\n\n    _getChildrenFields() {\n        return new Field('children')\n            .addFieldList(this._getDefaultFields());\n    }\n\n    _getBreadcrumbsField() {\n        return new Field('breadcrumbs')\n            .addFieldList(this._getBreadcrumbFields());\n    }\n\n    _getBreadcrumbFields() {\n        return [\n            'category_name',\n            'category_level',\n            'category_url',\n            'category_is_active'\n        ];\n    }\n\n    _getCmsBlockFields() {\n        return [\n            'content',\n            'disabled',\n            'title',\n            'identifier'\n        ];\n    }\n\n    _getCmsBlockField() {\n        return new Field('cms_block')\n            .addFieldList(this._getCmsBlockFields());\n    }\n\n    _getDefaultFields() {\n        return [\n            'id',\n            'url',\n            'name',\n            'image',\n            'url_key',\n            'url_path',\n            'is_active',\n            'meta_title',\n            'description',\n            'canonical_url',\n            'product_count',\n            'meta_keywords',\n            'default_sort_by',\n            'meta_description',\n            'landing_page',\n            'display_mode',\n            this._getCmsBlockField(),\n            this._getBreadcrumbsField()\n        ];\n    }\n}\n\nexport default new CategoryQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    appendPage,\n    updateLoadStatus,\n    updatePageLoadingStatus,\n    updateProductListItems\n} from 'Store/ProductList/ProductList.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Product List Dispatcher\n * @class ProductListDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ProductList/Dispatcher\n */\nexport class ProductListDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('ProductList');\n    }\n\n    onSuccess(data, dispatch, options) {\n        const {\n            products: {\n                items,\n                total_count,\n                page_info: { total_pages } = {}\n            } = {}\n        } = data;\n\n        const { args, isNext } = options;\n        const { currentPage } = args;\n\n        if (isNext) {\n            return dispatch(\n                appendPage(\n                    items,\n                    currentPage\n                )\n            );\n        }\n\n        return dispatch(\n            updateProductListItems(\n                items,\n                currentPage,\n                total_count,\n                total_pages,\n                args\n            )\n        );\n    }\n\n    onError(error, dispatch) {\n        dispatch(showNotification('error', 'Error fetching Product List!', error));\n        dispatch(updateNoMatch(true));\n    }\n\n    prepareRequest(options, dispatch) {\n        const { isNext } = options;\n\n        if (!isNext) {\n            dispatch(updateLoadStatus(true));\n        } else {\n            dispatch(updatePageLoadingStatus());\n        }\n\n        return ProductListQuery.getQuery(options);\n    }\n}\n\nexport default new ProductListDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ContactFormQuery from 'Query/ContactForm.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation } from 'Util/Request';\n\nimport { updateContactForm } from './ContactForm.action';\n\n/**\n * ContactForm Dispatcher\n * @class ContactFormDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ContactForm/Dispatcher\n */\nexport class ContactFormDispatcher {\n    prepareRequest(options, dispatch) {\n        const mutation = ContactFormQuery.getSendContactFormMutation(options);\n\n        dispatch(updateContactForm({\n            isLoading: true\n        }));\n\n        return fetchMutation(mutation)\n            .then(\n                /** @namespace Store/ContactForm/Dispatcher/fetchMutationThen */\n                (data) => {\n                    dispatch(showNotification('success', data.contactForm.message));\n                    dispatch(updateContactForm({\n                        isLoading: false\n                    }));\n                },\n                /** @namespace Store/ContactForm/Dispatcher/fetchMutationError */\n                (error) => {\n                    dispatch(showNotification('error', error[0].message));\n                    dispatch(updateContactForm({\n                        isLoading: false\n                    }));\n                }\n            );\n    }\n}\n\nexport default new ContactFormDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { updateProductDetails } from 'Store/Product/Product.action';\nimport { QueryDispatcher } from 'Util/Request';\n\nexport const LinkedProductsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/LinkedProducts/LinkedProducts.dispatcher'\n);\n\n/**\n * Product List Dispatcher\n * @class ProductDispatcher\n * @extends ProductDispatcher\n * @namespace Store/Product/Dispatcher\n */\nexport class ProductDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('Product');\n    }\n\n    onSuccess(data, dispatch) {\n        const { products: { items } } = data;\n\n        /**\n         * In case there are no items, or item count is\n         * smaller then 0 => the product was not found.\n         */\n        if (!items || items.length <= 0) {\n            dispatch(updateNoMatch(true));\n            return;\n        }\n\n        const [product] = items;\n\n        const product_links = items.reduce((links, product) => {\n            const { product_links } = product;\n\n            if (product_links) {\n                Object.values(product_links).forEach((item) => {\n                    links.push(item);\n                });\n            }\n\n            return links;\n        }, []);\n\n        LinkedProductsDispatcher.then(\n            ({ default: dispatcher }) => {\n                if (product_links.length > 0) {\n                    dispatcher.handleData(dispatch, product_links);\n                } else {\n                    dispatcher.clearLinkedProducts(dispatch);\n                }\n            }\n        );\n\n        dispatch(updateProductDetails(product));\n    }\n\n    onError(_, dispatch) {\n        dispatch(updateNoMatch(true));\n    }\n\n    prepareRequest(options) {\n        return ProductListQuery.getQuery(options);\n    }\n}\n\nexport default new ProductDispatcher();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ReviewQuery from 'Query/Review.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation } from 'Util/Request';\n\n/**\n * Product Review Dispatcher\n * @class WishlistDispatcher\n * @namespace Store/Review/Dispatcher\n */\nexport class ReviewDispatcher {\n    prepareReviewData(reviewItem) {\n        const {\n            rating_data,\n            product_sku,\n            detail,\n            title,\n            nickname\n        } = reviewItem;\n\n        return {\n            nickname,\n            sku: product_sku,\n            summary: title,\n            text: detail,\n            ratings: Object.keys(rating_data).map(\n                (key) => ({\n                    id: key,\n                    value_id: rating_data[key]\n                })\n            )\n        };\n    }\n\n    submitProductReview(dispatch, options) {\n        return fetchMutation(ReviewQuery.getAddProductReviewMutation(\n            this.prepareReviewData(options)\n        )).then(\n            /** @namespace Store/Review/Dispatcher/submitProductReviewFetchMutationThen */\n            () => dispatch(showNotification('success', 'You submitted your review for moderation.')),\n            /** @namespace Store/Review/Dispatcher/submitProductReviewFetchMutationError */\n            // eslint-disable-next-line no-console\n            (error) => dispatch(showNotification('error', 'Error submitting review!')) && console.log(error)\n        );\n    }\n}\n\nexport default new ReviewDispatcher();\n"],"sourceRoot":""}