{"version":3,"sources":["../node_modules/@scandipwa/scandipwa/src/route/Checkout/index.js","../node_modules/@scandipwa/scandipwa/src/util/Price/index.js","../node_modules/@scandipwa/scandipwa/src/type/Checkout.js","../node_modules/@scandipwa/scandipwa/src/util/Price/Price.js","../node_modules/@scandipwa/scandipwa/src/component/FieldForm/index.js","../node_modules/@scandipwa/scandipwa/src/util/Price/Price.config.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/CheckoutPayments.config.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutTermsAndConditionsPopup/CheckoutTermsAndConditionsPopup.config.js","../node_modules/@scandipwa/scandipwa/src/component/Klarna/Klarna.container.js","../node_modules/@scandipwa/scandipwa/src/route/Checkout/Checkout.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutBilling/CheckoutBilling.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressBook/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressBook/CheckoutAddressBook.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressForm/CheckoutAddressForm.container.js","../node_modules/@scandipwa/scandipwa/src/component/FormPortal/index.js","../node_modules/@scandipwa/scandipwa/src/component/FormPortal/FormPortal.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressTable/CheckoutAddressTable.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/CheckoutPayments.container.js","../node_modules/@scandipwa/scandipwa/src/component/Braintree/Braintree.config.js","../node_modules/@scandipwa/scandipwa/src/util/Braintree/Braintree.js","../node_modules/@scandipwa/scandipwa/src/component/Braintree/Braintree.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayment/CheckoutPayment.component.js","../node_modules/@scandipwa/scandipwa/src/component/NotSupportedPayment/NotSupportedPayment.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutTermsAndConditionsPopup/CheckoutTermsAndConditionsPopup.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutGuestForm/CheckoutGuestForm.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutOrderSummary/CheckoutOrderSummary.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutOrderSummaryPriceLine/CheckoutOrderSummaryPriceLine.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutShipping/CheckoutShipping.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOption/CheckoutDeliveryOption.container.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutSuccess/CheckoutSuccess.component.js","../node_modules/@scandipwa/scandipwa/src/query/Checkout.query.js","../node_modules/@scandipwa/scandipwa/src/route/Checkout/Checkout.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutBilling/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutBilling/CheckoutBilling.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressBook/CheckoutAddressBook.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressForm/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressForm/CheckoutAddressForm.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressForm/CheckoutAddressForm.config.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressTable/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressTable/CheckoutAddressTable.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/index.js","../node_modules/@scandipwa/scandipwa/src/component/Klarna/Klarna.component.js","../node_modules/@scandipwa/scandipwa/src/query/Klarna.query.js","../node_modules/@scandipwa/scandipwa/src/component/Klarna/Klarna.config.js","../node_modules/@scandipwa/scandipwa/src/util/Braintree/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/CheckoutPayments.component.js","../node_modules/@scandipwa/scandipwa/src/component/Braintree/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutPayment/index.js","../node_modules/@scandipwa/scandipwa/src/component/Klarna/index.js","../node_modules/@scandipwa/scandipwa/src/component/NotSupportedPayment/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutTermsAndConditionsPopup/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutTermsAndConditionsPopup/CheckoutTermsAndConditionsPopup.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutGuestForm/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutGuestForm/CheckoutGuestForm.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutOrderSummary/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutOrderSummary/CheckoutOrderSummary.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutOrderSummaryPriceLine/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutShipping/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutShipping/CheckoutShipping.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOption/index.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOption/CheckoutDeliveryOption.component.js","../node_modules/@scandipwa/scandipwa/src/component/CheckoutSuccess/index.js"],"names":["paymentMethodType","PropTypes","shape","code","string","title","shippingMethodType","arrayOf","amount","number","available","bool","base_amount","carrier_code","carrier_title","error_message","method_code","method_title","price_excl_tax","price_incl_tax","formatPrice","currency","currencyMap","price","language","navigator","languages","Intl","NumberFormat","style","format","calculateFinalPrice","discount","min","reg","roundPrice","parseFloat","toFixed","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EEK","EGP","ERN","ETB","ETH","EUR","FJD","FKP","GBP","GEL","GGP","GHC","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTC","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RMB","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRL","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XBT","XCD","XOF","XPF","YER","ZAR","ZWD","KLARNA","BRAINTREE","TERMS_AND_CONDITIONS_POPUP_ID","mapDispatchToProps","dispatch","showError","message","showNotification","KlarnaContainer","this","props","Promise","resolve","reject","window","Klarna","Payments","authorize","payment_method_category","localStorage","getItem","res","error","approved","authorization_token","Object","defineProperty","_KlarnaContainer","value","mapStateToProps","state","connect","CartDispatcher","MyAccountDispatcher","CheckoutDispatcher","totals","CartReducer","cartTotals","customer","MyAccountReducer","guest_checkout","ConfigReducer","countries","isEmailAvailable","CheckoutReducer","isMobile","device","updateMeta","meta","resetCart","then","default","updateInitialCartData","resetGuestCart","toggleBreadcrumbs","showErrorNotification","showInfoNotification","showSuccessNotification","setHeaderState","stateName","changeNavigationState","TOP_NAVIGATION_TYPE","setNavigationState","BOTTOM_NAVIGATION_TYPE","createAccount","options","updateShippingFields","fields","updateEmail","email","checkEmailAvailability","handleData","updateShippingPrice","data","CheckoutContainer","containerFunctions","setLoading","bind","setDetailsStep","savePaymentInformation","saveAddressInformation","onShippingEstimationFieldsChange","onEmailChange","onCreateUserChange","onPasswordChange","goBack","debounce","UPDATE_EMAIL_CHECK_FREQUENCY","setShippingAddress","a","shippingAddress","region","region_id","address","mutation","MyAccountQuery","getCreateAddressMutation","fetchMutation","containerProps","paymentTotals","checkoutTotals","_getCheckoutTotals","_handleError","debugMessage","setState","isDeliveryOptionsLoading","isLoading","_getGuestCartId","BrowserDatabase","GUEST_QUOTE_ID","is_virtual","requestsSent","paymentMethods","shippingMethods","checkoutStep","BILLING_STEP","SHIPPING_STEP","orderID","PAYMENT_TOTALS","isGuestEmailSaved","isCreateUser","_getPaymentMethods","history","items","length","__","push","appendWithStoreCode","isSignedIn","prevProps","prevState","urlStep","match","params","step","prevUrlStep","prevEmail","test","deleteItem","password","CheckoutQuery","getEstimateShippingCosts","estimateShippingCosts","DETAILS_STEP","name","CART_TAB","fetchQuery","getPaymentMethodsQuery","getPaymentMethods","shipping_amount","guestCartId","getSaveGuestEmailMutation","setGuestEmailOnCart","firstname","lastname","saveGuestEmail","creation","addressInformation","shipping_address","save_in_address_book","billing_address","billingAddress","createUserOrSaveGuest","getSaveAddressInformation","prepareAddressInformation","payment_methods","setItem","ONE_MONTH_IN_SECONDS","paymentInformation","billingFirstName","billingLastName","saveBillingAddress","savePaymentMethodAndPlaceOrder","country_id","region_code","restOfBillingAddress","newAddress","country_code","available_regions","find","id","guest_cart_id","getSetBillingAddressOnCart","trimAddressMagentoStyle","paymentMethod","additional_data","getSetPaymentMethodOnCartMutation","payment_method","getPlaceOrderMutation","orderData","order_id","placeOrder","order","_CheckoutContainer","termsAreEnabled","terms_are_enabled","termsAndConditions","checkoutAgreements","addressLinesQty","address_lines_quantity","showPopup","payload","CheckoutBillingContainer","onBillingSuccess","onBillingError","onAddressSelect","onSameAsShippingChange","onPaymentMethodSelect","isSameAsShipping","isSameShippingAddress","selectedCustomerAddressId","prevPaymentMethods","default_billing","default_shipping","asyncData","_getAddress","_getPaymentData","invalidFields","content","text","payment_method_nonce","nonce","is_active_payment_token_enabler","formFields","getFormFields","trimAddressFields","addresses","trimCustomerAddress","_CheckoutBillingContainer","requestCustomerData","CheckoutAddressBookContainer","keys","defaultAddressId","_getDefaultAddressId","estimateShipping","prevDefaultAddressId","selectedAddressId","_","prevSelectedAddressId","addressId","city","postcode","isBilling","defaultProps","_CheckoutAddressBookContainer","default_country","shippingFields","showVatNumber","show_vat_number_on_storefront","CheckoutAddressForm","FormPortal","prevId","unsubscribeToFormPortalCollector","subscribeToFormPortalCollector","formPortalCollector","subscribe","collectFieldsInformation","unsubscribe","Error","children","propTypes","Form","isRequired","_FormPortal","CheckoutAddressTableContainer","_CheckoutAddressTableContainer","CheckoutPaymentsContainer","initBraintree","selectPaymentMethod","braintree","BraintreeDropIn","BRAINTREE_CONTAINER_ID","dataMap","getBraintreeData","getKlarnaData","collectAdditionalData","selectedPaymentCode","additionalDataGetter","grand_total","requestPaymentNonce","create","setOrderButtonEnableStatus","_CheckoutPaymentsContainer","Braintree","isThreeDSecure","containerId","dropIn","requestBraintreeClientToken","authorization","requestBraintreeConfig","configuration","is_three_d_secure","container","threeDSecure","braintreeDropIn","query","Field","addFieldList","getBraintreeConfig","setAlias","token","telephone","street0","street1","givenName","surname","phoneNumber","streetAddress","extendedAddress","locality","postalCode","countryCodeAlpha2","requestData","convertAddressToBillingAddress","requestPaymentMethod","_Braintree","init","block","elem","CheckoutPayment","onClick","method","isSelected","mods","type","_CheckoutPayment","NotSupportedPayment","disableButton","_NotSupportedPayment","PopupReducer","popupPayload","CheckoutTermsAndConditionsPopupContainer","_CheckoutTermsAndConditionsPopupContainer","isEmailConfirmationRequired","is_email_confirmation_required","emailValue","signIn","CheckoutGuestFormContainer","signInState","handleEmailInput","handleCreateUser","handlePasswordInput","handleForgotPassword","handleSignIn","handleCreateAccount","onFormError","setSignInState","setLoadingState","formId","e","preventDefault","nativeEvent","stopImmediatePropagation","STATE_FORGOT_PASSWORD","STATE_SIGN_IN","STATE_CREATE_ACCOUNT","onSignIn","_CheckoutGuestFormContainer","cartDisplayConfig","cartSubtotal","getCartSubtotal","cartSubtotalSubPrice","getCartSubtotalSubPrice","cartShippingPrice","getCartShippingPrice","cartShippingSubPrice","getCartShippingSubPrice","cartTotalSubPrice","getCartTotalSubPrice","CheckoutOrderSummary","CheckoutOrderSummaryPriceLine","subPrice","renderPrice","renderSubPrice","_CheckoutOrderSummaryPriceLine","CheckoutShippingContainer","onShippingSuccess","onShippingError","onShippingMethodSelect","selectedShippingMethod","_getAddressById","shipping_carrier_code","shipping_method_code","_CheckoutShippingContainer","shippingMethod","shipping_method","CheckoutDeliveryOptionsContainer","selectShippingMethod","selectedShippingMethodCode","prevShippingMethods","_getDefaultMethod","prevSelectedShippingMethodCode","_CheckoutDeliveryOptionsContainer","getCartShippingItemPrice","getCartShippingItemSubPrice","CheckoutDeliveryOptionContainer","option","optionPrice","optionSubPrice","_CheckoutDeliveryOptionContainer","CheckoutSuccess","mix","to","renderButtons","_CheckoutSuccess","_getPaymentMethodFields","_addGuestCartId","cart_id","input","addArgument","addField","_getEstimatedShippingFields","_getSaveAddressInformationFields","_getCartField","_getOrderField","_getPaymentMethodsField","_getTotalsField","_getTotalItemFields","_getTotalItemField","_getTotalsFields","_getCartFieldList","_CheckoutQuery","Checkout","stepMap","url","render","renderShippingStep","areTotalsVisible","renderCartCoupon","renderBillingStep","renderDetailsStep","updateHeader","replace","CHECKOUT_URL","updateStep","CHECKOUT_SUCCESS","CHECKOUT","onBackClick","showOnMobile","coupon_code","isExpandable","couponCode","renderCmsBlock","renderPromo","heading","contentConfiguration","checkout_content","promo","identifier","wrapperMix","label","renderSummary","renderTitle","renderGuestForm","renderStep","renderLoader","renderCoupon","_Checkout","CheckoutBilling","isOrderButtonVisible","isOrderButtonEnabled","isTermsAndConditionsAccepted","setOrderButtonVisibility","setTACAccepted","handleShowPopup","checkbox_text","htmlFor","checked","onChange","quote_currency_code","orderTotal","isDisabled","renderOrderTotal","disabled","renderSameAsShippingCheckbox","renderAddressBook","onSubmitError","onSubmitSuccess","renderAddresses","renderPayments","renderTermsAndConditions","renderActions","renderPopup","_CheckoutBilling","CheckoutAddressBook","isCustomAddressExpanded","expandCustomAddress","renderAddress","key","MY_ACCOUNT_URL","ADDRESS_BOOK","map","renderNoAddresses","renderLoading","addressName","formPortalId","isHollow","renderCustomAddress","renderAddressList","renderOptionalCustomAddress","renderSignedInContent","renderGuestContent","renderHeading","renderContent","_CheckoutAddressBook","UPDATE_STATE_FREQUENCY","countryId","regionId","prevCountryId","prevRegionId","prevRegion","prevCity","prevpostcode","initialValue","handledInitialCountry","onCountryChange","regionFieldData","region_string","v","renderFields","vat_id","fieldMap","entries","forEach","hasOwnProperty","call","handleInitialCountryValue","MyAccountAddressForm","func","_CheckoutAddressForm","CheckoutAddressTable","onAddressClick","renderTable","MyAccountAddressTable","_CheckoutAddressTable","canShowPaymentSelector","paymentIsShown","loadPaymentMethodPayLater","loadPaymentMethod","loadPaymentMethodPayNow","loadPaymentMethodPayOverTime","klarnaDOM","document","getElementById","KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID","remove","_getGuestQuoteId","KlarnaQuery","getCreateKlarnaTokenMutation","client_token","klarnaToken","load","KLARNA_PAYMENTS_CONTAINER_ID","console","groupCollapsed","groupEnd","klarnaAsyncCallback","initiateKlarna","script","KLARNA_SCRIPT_ID","parentNode","removeChild","klarnaScript","createElement","setAttribute","async","head","appendChild","renderScript","renderPaymentSelector","_Klarna","_KlarnaQuery","CheckoutPayments","paymentRenderMap","renderBrainTreePayment","renderKlarnaPayment","hasError","renderPayment","info","toString","renderSelectedPayment","_CheckoutPayments","CheckoutTermsAndConditionsPopup","clickOutside","_CheckoutTermsAndConditionsPopup","CheckoutGuestForm","renderMap","renderSignIn","renderForgotPassword","STATE_FORGOT_PASSWORD_SUCCESS","renderForgotPasswordSuccess","STATE_LOGGED_IN","STATE_CONFIRM_EMAIL","renderConfirmEmail","prevIsEmailAvailable","skipValue","isCheckout","renderCreateUserCheckbox","renderForm","guest_email","form","validation","guest_password","_CheckoutGuestForm","renderItem","item","item_id","currency_code","applied_rule_ids","discount_amount","renderPriceLine","Math","abs","toUpperCase","items_qty","hasDivider","getShippingLabel","divider","applied_taxes","display_full_tax_summary","flatMap","rates","i","percent","tax_amount","display_zero_tax_subtotal","withAppendedContent","renderTaxFullSummary","renderSubTotal","renderShipping","renderDiscount","renderTax","renderItems","renderTotals","renderExpandableContent","aria-label","_CheckoutOrderSummary","CheckoutShipping","renderDelivery","_CheckoutShipping","CheckoutDeliveryOptions","shippingRenderMap","renderDeliveryOption","renderNoDeliveryOptions","renderShippingMethods","renderSelectedShippingMethod","_CheckoutDeliveryOptions","CheckoutDeliveryOption","getOptionPrice","renderOptionSubPrice","renderRow","_CheckoutDeliveryOption"],"mappings":"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","file":"static/js/15.88400175.chunk.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './Checkout.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport * from './Price';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nexport const paymentMethodType = PropTypes.shape({\n    code: PropTypes.string,\n    title: PropTypes.string\n});\n\nexport const paymentMethodsType = PropTypes.arrayOf(\n    paymentMethodType\n);\n\nexport const shippingMethodType = PropTypes.shape({\n    amount: PropTypes.number,\n    available: PropTypes.bool,\n    base_amount: PropTypes.number,\n    carrier_code: PropTypes.string,\n    carrier_title: PropTypes.string,\n    error_message: PropTypes.string,\n    method_code: PropTypes.string,\n    method_title: PropTypes.string,\n    price_excl_tax: PropTypes.number,\n    price_incl_tax: PropTypes.number\n});\n\nexport const shippingMethodsType = PropTypes.arrayOf(\n    shippingMethodType\n);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable import/prefer-default-export */\nimport currencyMap from './Price.config';\n\n/** @namespace Util/Price/formatCurrency */\nexport const formatCurrency = (currency = 'USD') => currencyMap[currency];\n\n/** @namespace Util/Price/formatPrice */\nexport const formatPrice = (price, currency = 'USD') => {\n    const language = navigator.languages ? navigator.languages[0] : navigator.language;\n    return new Intl.NumberFormat(language, { style: 'currency', currency }).format(price);\n};\n\n/**\n * Calculate final price\n * @param {Number} discount discount percentage\n * @param {Number} min minimum price\n * @param {Number} reg regular price\n * @return {Number} final price\n * @namespace Util/Price/calculateFinalPrice\n */\nexport const calculateFinalPrice = (discount, min, reg) => (discount ? min : reg);\n\n/**\n * Calculate final price\n * @param {Number} price\n * @return {Number} price rounded to 2 digits\n * @namespace Util/Price/roundPrice\n */\nexport const roundPrice = (price) => parseFloat(price).toFixed(2);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './FieldForm.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport default {\n    AED: 'د.إ',\n    AFN: '؋',\n    ALL: 'L',\n    AMD: '֏',\n    ANG: 'ƒ',\n    AOA: 'Kz',\n    ARS: '$',\n    AUD: '$',\n    AWG: 'ƒ',\n    AZN: '₼',\n    BAM: 'KM',\n    BBD: 'Bds$',\n    BDT: '৳',\n    BGN: 'лв',\n    BHD: '.د.ب',\n    BIF: 'FBu',\n    BMD: '$',\n    BND: 'B$',\n    BOB: '$b',\n    BRL: 'R$',\n    BSD: 'B$',\n    BTC: '฿',\n    BTN: 'Nu.',\n    BWP: 'P',\n    BYR: 'Br',\n    BYN: 'Br',\n    BZD: 'BZ$',\n    CAD: 'CA$',\n    CDF: 'FC',\n    CHF: 'CHF',\n    CLP: '$',\n    CNY: '¥',\n    COP: '$',\n    CRC: '₡',\n    CUC: 'CUC$',\n    CUP: '₱',\n    CVE: '$',\n    CZK: 'Kč',\n    DJF: 'Fdj',\n    DKK: 'kr',\n    DOP: 'RD$',\n    DZD: 'دج',\n    EEK: 'kr',\n    EGP: '£',\n    ERN: 'Nfk',\n    ETB: 'Br',\n    ETH: 'Ξ',\n    EUR: '€',\n    FJD: 'FJ$',\n    FKP: '£',\n    GBP: '£',\n    GEL: '₾',\n    GGP: '£',\n    GHC: '₵',\n    GHS: 'GH₵',\n    GIP: '£',\n    GMD: 'D',\n    GNF: 'FG',\n    GTQ: 'Q',\n    GYD: 'G$',\n    HKD: 'HK$',\n    HNL: 'L',\n    HRK: 'kn',\n    HTG: 'G',\n    HUF: 'Ft',\n    IDR: 'Rp',\n    ILS: '₪',\n    IMP: '£',\n    INR: '₹',\n    IQD: 'ع.د',\n    IRR: '﷼',\n    ISK: 'kr',\n    JEP: '£',\n    JMD: 'J$',\n    JOD: 'JD',\n    JPY: '¥',\n    KES: 'KSh',\n    KGS: 'лв',\n    KHR: '៛',\n    KMF: 'CF',\n    KPW: '₩',\n    KRW: '₩',\n    KWD: 'KD',\n    KYD: '$',\n    KZT: 'лв',\n    LAK: '₭',\n    LBP: '£',\n    LKR: '₨',\n    LRD: 'L$',\n    LSL: 'M',\n    LTC: 'Ł',\n    LTL: 'Lt',\n    LVL: 'Ls',\n    LYD: 'LD',\n    MAD: 'MAD',\n    MDL: 'lei',\n    MGA: 'Ar',\n    MKD: 'ден',\n    MMK: 'K',\n    MNT: '₮',\n    MOP: 'MOP$',\n    MRO: 'UM',\n    MRU: 'UM',\n    MUR: '₨',\n    MVR: 'Rf',\n    MWK: 'MK',\n    MXN: 'Mex$',\n    MYR: 'RM',\n    MZN: 'MT',\n    NAD: '$',\n    NGN: '₦',\n    NIO: 'C$',\n    NOK: 'kr',\n    NPR: '₨',\n    NZD: '$',\n    OMR: '﷼',\n    PAB: 'B/.',\n    PEN: 'S/.',\n    PGK: 'K',\n    PHP: '₱',\n    PKR: '₨',\n    PLN: 'zł',\n    PYG: 'Gs',\n    QAR: '﷼',\n    RMB: '￥',\n    RON: 'lei',\n    RSD: 'Дин.',\n    RUB: '₽',\n    RWF: 'R₣',\n    SAR: '﷼',\n    SBD: 'Si$',\n    SCR: '₨',\n    SDG: 'ج.س.',\n    SEK: 'kr',\n    SGD: '$',\n    SHP: '£',\n    SLL: 'Le',\n    SOS: 'S',\n    SRD: '$',\n    SSP: '£',\n    STD: 'Db',\n    STN: 'Db',\n    SVC: '₡',\n    SYP: '£',\n    SZL: 'E',\n    THB: '฿',\n    TJS: 'SM',\n    TMT: 'T',\n    TND: 'د.ت',\n    TOP: 'T$',\n    TRL: '₤',\n    TRY: '₺',\n    TTD: 'TT$',\n    TVD: '$',\n    TWD: 'NT$',\n    TZS: 'TSh',\n    UAH: '₴',\n    UGX: 'USh',\n    USD: '$',\n    UYU: '$U',\n    UZS: 'лв',\n    VEF: 'Bs',\n    VND: '₫',\n    VUV: 'VT',\n    WST: 'WS$',\n    XAF: 'FCFA',\n    XBT: 'Ƀ',\n    XCD: '$',\n    XOF: 'CFA',\n    XPF: '₣',\n    YER: '﷼',\n    ZAR: 'R',\n    ZWD: 'Z$'\n};\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const KLARNA = 'klarna_kp';\nexport const BRAINTREE = 'braintree';\nexport const CHECK_MONEY = 'checkmo';\nexport const PAYPAL_EXPRESS = 'paypal_express';\nexport const PAYPAL_EXPRESS_CREDIT = 'paypal_express_bml';\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const TERMS_AND_CONDITIONS_POPUP_ID = 'CheckoutTermsAndConditionsPopup';\n","/* eslint-disable no-undef */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport KlarnaComponent from './Klarna.component';\n\n/** @namespace Component/Klarna/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showError: (message) => dispatch(showNotification('error', message))\n});\n\n/** @namespace Component/Klarna/Container */\nexport class KlarnaContainer extends PureComponent {\n    static authorize() {\n        return new Promise((resolve, reject) => {\n            window.Klarna.Payments.authorize(\n                { payment_method_category: localStorage.getItem('kl_pm') },\n                {},\n                (res) => {\n                    const { error, approved, authorization_token } = res;\n                    if (!approved) {\n                        reject(error);\n                    }\n\n                    resolve({ authorization_token });\n                }\n            );\n        });\n    }\n\n    render() {\n        return <KlarnaComponent { ...this.props } />;\n    }\n}\n\n/** @namespace Component/Klarna/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlarnaContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CART_TAB } from 'Component/NavigationTabs/NavigationTabs.config';\nimport CheckoutQuery from 'Query/Checkout.query';\nimport MyAccountQuery from 'Query/MyAccount.query';\nimport { toggleBreadcrumbs } from 'Store/Breadcrumbs/Breadcrumbs.action';\nimport { updateShippingPrice } from 'Store/Cart/Cart.action';\nimport { GUEST_QUOTE_ID } from 'Store/Cart/Cart.dispatcher';\nimport { updateEmail, updateShippingFields } from 'Store/Checkout/Checkout.action';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { BOTTOM_NAVIGATION_TYPE, TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { customerType } from 'Type/Account';\nimport { HistoryType } from 'Type/Common';\nimport { TotalsType } from 'Type/MiniCart';\nimport { isSignedIn } from 'Util/Auth';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport history from 'Util/History';\nimport { debounce, fetchMutation, fetchQuery } from 'Util/Request';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport Checkout from './Checkout.component';\nimport {\n    BILLING_STEP, DETAILS_STEP, PAYMENT_TOTALS, SHIPPING_STEP, UPDATE_EMAIL_CHECK_FREQUENCY\n} from './Checkout.config';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\nexport const CheckoutDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Checkout/Checkout.dispatcher'\n);\n\n/** @namespace Route/Checkout/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    totals: state.CartReducer.cartTotals,\n    customer: state.MyAccountReducer.customer,\n    guest_checkout: state.ConfigReducer.guest_checkout,\n    countries: state.ConfigReducer.countries,\n    isEmailAvailable: state.CheckoutReducer.isEmailAvailable,\n    isMobile: state.ConfigReducer.device.isMobile\n});\n\n/** @namespace Route/Checkout/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    resetCart: () => CartDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.updateInitialCartData(dispatch)\n    ),\n    resetGuestCart: () => CartDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.resetGuestCart(dispatch)\n    ),\n    toggleBreadcrumbs: (state) => dispatch(toggleBreadcrumbs(state)),\n    showErrorNotification: (message) => dispatch(showNotification('error', message)),\n    showInfoNotification: (message) => dispatch(showNotification('info', message)),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message)),\n    setHeaderState: (stateName) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName)),\n    setNavigationState: (stateName) => dispatch(changeNavigationState(BOTTOM_NAVIGATION_TYPE, stateName)),\n    createAccount: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.createAccount(options, dispatch)\n    ),\n    updateShippingFields: (fields) => dispatch(updateShippingFields(fields)),\n    updateEmail: (email) => dispatch(updateEmail(email)),\n    checkEmailAvailability: (email) => CheckoutDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.handleData(dispatch, email)\n    ),\n    updateShippingPrice: (data) => dispatch(updateShippingPrice(data))\n});\n\n/** @namespace Route/Checkout/Container */\nexport class CheckoutContainer extends PureComponent {\n    static propTypes = {\n        showErrorNotification: PropTypes.func.isRequired,\n        showInfoNotification: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired,\n        toggleBreadcrumbs: PropTypes.func.isRequired,\n        setNavigationState: PropTypes.func.isRequired,\n        createAccount: PropTypes.func.isRequired,\n        updateMeta: PropTypes.func.isRequired,\n        resetCart: PropTypes.func.isRequired,\n        resetGuestCart: PropTypes.func.isRequired,\n        guest_checkout: PropTypes.bool.isRequired,\n        totals: TotalsType.isRequired,\n        history: HistoryType.isRequired,\n        customer: customerType.isRequired,\n        countries: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                id: PropTypes.string,\n                available_regions: PropTypes.arrayOf(\n                    PropTypes.shape({\n                        code: PropTypes.string,\n                        name: PropTypes.string,\n                        id: PropTypes.number\n                    })\n                )\n            })\n        ).isRequired,\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                step: PropTypes.string\n            })\n        }).isRequired,\n        updateShippingFields: PropTypes.func.isRequired,\n        updateEmail: PropTypes.func.isRequired,\n        checkEmailAvailability: PropTypes.func.isRequired,\n        isEmailAvailable: PropTypes.bool.isRequired,\n        updateShippingPrice: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        setLoading: this.setLoading.bind(this),\n        setDetailsStep: this.setDetailsStep.bind(this),\n        savePaymentInformation: this.savePaymentInformation.bind(this),\n        saveAddressInformation: this.saveAddressInformation.bind(this),\n        onShippingEstimationFieldsChange: this.onShippingEstimationFieldsChange.bind(this),\n        onEmailChange: this.onEmailChange.bind(this),\n        onCreateUserChange: this.onCreateUserChange.bind(this),\n        onPasswordChange: this.onPasswordChange.bind(this),\n        goBack: this.goBack.bind(this)\n    };\n\n    checkEmailAvailability = debounce((email) => {\n        const { checkEmailAvailability } = this.props;\n        checkEmailAvailability(email);\n    }, UPDATE_EMAIL_CHECK_FREQUENCY);\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            toggleBreadcrumbs,\n            totals: {\n                is_virtual\n            }\n        } = props;\n\n        toggleBreadcrumbs(false);\n\n        this.state = {\n            isLoading: is_virtual,\n            isDeliveryOptionsLoading: false,\n            requestsSent: 0,\n            paymentMethods: [],\n            shippingMethods: [],\n            shippingAddress: {},\n            checkoutStep: is_virtual ? BILLING_STEP : SHIPPING_STEP,\n            orderID: '',\n            paymentTotals: BrowserDatabase.getItem(PAYMENT_TOTALS) || {},\n            email: '',\n            isGuestEmailSaved: false,\n            isCreateUser: false\n        };\n\n        if (is_virtual) {\n            this._getPaymentMethods();\n        }\n    }\n\n    componentDidMount() {\n        const {\n            history,\n            showInfoNotification,\n            guest_checkout,\n            updateMeta,\n            totals: {\n                items = []\n            }\n        } = this.props;\n\n        if (!items.length) {\n            showInfoNotification(__('Please add at least one product to cart!'));\n            history.push(appendWithStoreCode('/cart'));\n        }\n\n        // if guest checkout is disabled and user is not logged in => throw him to homepage\n        if (!guest_checkout && !isSignedIn()) {\n            history.push(appendWithStoreCode('/'));\n        }\n\n        updateMeta({ title: __('Checkout') });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { match: { params: { step: urlStep } }, isEmailAvailable, updateEmail } = this.props;\n        const { match: { params: { step: prevUrlStep } } } = prevProps;\n        const { email } = this.state;\n        const { email: prevEmail } = prevState;\n\n        // Handle going back from billing to shipping\n        if (/shipping/.test(urlStep) && /billing/.test(prevUrlStep)) {\n            BrowserDatabase.deleteItem(PAYMENT_TOTALS);\n\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                checkoutStep: SHIPPING_STEP,\n                isGuestEmailSaved: false\n            });\n        }\n\n        if (email !== prevEmail) {\n            this.checkEmailAvailability(email);\n        }\n\n        if (!isEmailAvailable) {\n            updateEmail(email);\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        const { toggleBreadcrumbs } = this.props;\n        toggleBreadcrumbs(true);\n    }\n\n    onEmailChange(email) {\n        this.setState({ email });\n    }\n\n    onCreateUserChange() {\n        const { isCreateUser } = this.state;\n        this.setState({ isCreateUser: !isCreateUser });\n    }\n\n    onPasswordChange(password) {\n        this.setState({ password });\n    }\n\n    onShippingEstimationFieldsChange(address) {\n        const { requestsSent } = this.state;\n\n        this.setState({\n            isDeliveryOptionsLoading: true,\n            requestsSent: requestsSent + 1\n        });\n\n        fetchMutation(CheckoutQuery.getEstimateShippingCosts(\n            address,\n            this._getGuestCartId()\n        )).then(\n            /** @namespace Route/Checkout/Container/onShippingEstimationFieldsChangeFetchMutationThen */\n            ({ estimateShippingCosts: shippingMethods }) => {\n                const { requestsSent } = this.state;\n\n                this.setState({\n                    shippingMethods,\n                    isDeliveryOptionsLoading: requestsSent > 1,\n                    requestsSent: requestsSent - 1\n                });\n            },\n            this._handleError\n        );\n    }\n\n    goBack() {\n        const { checkoutStep } = this.state;\n\n        if (checkoutStep === BILLING_STEP) {\n            this.setState({\n                isLoading: false,\n                checkoutStep: SHIPPING_STEP\n            });\n\n            BrowserDatabase.deleteItem(PAYMENT_TOTALS);\n        }\n\n        history.goBack();\n    }\n\n    setDetailsStep(orderID) {\n        const { resetCart, resetGuestCart, setNavigationState } = this.props;\n\n        // For some reason not logged in user cart preserves qty in it\n        if (!isSignedIn()) {\n            BrowserDatabase.deleteItem(GUEST_QUOTE_ID);\n        }\n\n        BrowserDatabase.deleteItem(PAYMENT_TOTALS);\n\n        // For guest we can just update cart without creating new quote id\n        if (isSignedIn()) {\n            resetCart();\n        } else {\n            resetGuestCart();\n        }\n\n        this.setState({\n            isLoading: false,\n            paymentTotals: {},\n            checkoutStep: DETAILS_STEP,\n            orderID\n        });\n\n        setNavigationState({\n            name: CART_TAB\n        });\n    }\n\n    setLoading(isLoading = true) {\n        this.setState({ isLoading });\n    }\n\n    setShippingAddress = async () => {\n        const { shippingAddress } = this.state;\n        const { region, region_id, ...address } = shippingAddress;\n\n        const mutation = MyAccountQuery.getCreateAddressMutation({\n            ...address, region: { region, region_id }\n        });\n\n        await fetchMutation(mutation);\n\n        return true;\n    };\n\n    containerProps = () => {\n        const { paymentTotals } = this.state;\n\n        return {\n            checkoutTotals: this._getCheckoutTotals(),\n            paymentTotals\n        };\n    };\n\n    _handleError = (error) => {\n        const { showErrorNotification } = this.props;\n        const [{ message, debugMessage }] = error;\n\n        this.setState({\n            isDeliveryOptionsLoading: false,\n            isLoading: false\n        }, () => {\n            showErrorNotification(debugMessage || message);\n        });\n\n        return false;\n    };\n\n    _getGuestCartId = () => BrowserDatabase.getItem(GUEST_QUOTE_ID);\n\n    _getPaymentMethods() {\n        fetchQuery(CheckoutQuery.getPaymentMethodsQuery(\n            this._getGuestCartId()\n        )).then(\n            /** @namespace Route/Checkout/Container/fetchQueryThen */\n            ({ getPaymentMethods: paymentMethods }) => {\n                this.setState({ isLoading: false, paymentMethods });\n            },\n            this._handleError\n        );\n    }\n\n    _getCheckoutTotals() {\n        const { totals: cartTotals } = this.props;\n        const { paymentTotals: { shipping_amount } } = this.state;\n\n        return shipping_amount\n            ? { ...cartTotals, shipping_amount }\n            : cartTotals;\n    }\n\n    saveGuestEmail() {\n        const { email } = this.state;\n        const { updateEmail } = this.props;\n        const guestCartId = BrowserDatabase.getItem(GUEST_QUOTE_ID);\n        const mutation = CheckoutQuery.getSaveGuestEmailMutation(email, guestCartId);\n\n        updateEmail(email);\n        return fetchMutation(mutation).then(\n            /** @namespace Route/Checkout/Container/saveGuestEmailFetchMutationThen */\n            ({ setGuestEmailOnCart: data }) => {\n                if (data) {\n                    this.setState({ isGuestEmailSaved: true });\n                }\n\n                return data;\n            },\n            this._handleError\n        );\n    }\n\n    async createUserOrSaveGuest() {\n        const {\n            createAccount,\n            totals: { is_virtual },\n            showSuccessNotification,\n            isEmailAvailable\n        } = this.props;\n\n        const {\n            email,\n            password,\n            isCreateUser,\n            shippingAddress: {\n                firstname,\n                lastname\n            }\n        } = this.state;\n\n        if (!isCreateUser || !isEmailAvailable) {\n            return this.saveGuestEmail();\n        }\n\n        const options = {\n            customer: {\n                email,\n                firstname,\n                lastname\n            },\n            password\n        };\n\n        const creation = await createAccount(options);\n\n        if (!creation) {\n            return creation;\n        }\n\n        showSuccessNotification(__('Your account has been created successfully!'));\n\n        if (!is_virtual) {\n            return this.setShippingAddress();\n        }\n\n        return true;\n    }\n\n    prepareAddressInformation(addressInformation) {\n        const {\n            shipping_address: {\n                save_in_address_book,\n                ...shippingAddress\n            } = {},\n            billing_address: {\n                save_in_address_book: x,\n                ...billingAddress\n            } = {},\n            ...data\n        } = addressInformation;\n\n        return {\n            ...data,\n            shipping_address: shippingAddress,\n            billing_address: billingAddress\n        };\n    }\n\n    async saveAddressInformation(addressInformation) {\n        const { updateShippingPrice } = this.props;\n        const { shipping_address } = addressInformation;\n\n        this.setState({\n            isLoading: true,\n            shippingAddress: shipping_address\n        });\n\n        if (!isSignedIn()) {\n            if (!await this.createUserOrSaveGuest()) {\n                this.setState({ isLoading: false });\n                return;\n            }\n        }\n\n        fetchMutation(CheckoutQuery.getSaveAddressInformation(\n            this.prepareAddressInformation(addressInformation),\n            this._getGuestCartId()\n        )).then(\n            /** @namespace Route/Checkout/Container/saveAddressInformationFetchMutationThen */\n            ({ saveAddressInformation: data }) => {\n                const { payment_methods, totals } = data;\n\n                updateShippingPrice(totals);\n\n                BrowserDatabase.setItem(\n                    totals,\n                    PAYMENT_TOTALS,\n                    ONE_MONTH_IN_SECONDS\n                );\n\n                this.setState({\n                    isLoading: false,\n                    paymentMethods: payment_methods,\n                    checkoutStep: BILLING_STEP,\n                    paymentTotals: totals\n                });\n            },\n            this._handleError\n        );\n    }\n\n    async savePaymentInformation(paymentInformation) {\n        const { totals: { is_virtual } } = this.props;\n        const {\n            billing_address: {\n                firstname: billingFirstName,\n                lastname: billingLastName\n            }\n        } = paymentInformation;\n\n        /**\n         * If cart contains only virtual products then set firstname & lastname\n         * from billing step into shippingAddress for user creating.\n         */\n        if (is_virtual) {\n            this.setState({\n                shippingAddress: {\n                    firstname: billingFirstName,\n                    lastname: billingLastName\n                }\n            });\n        }\n\n        this.setState({ isLoading: true });\n\n        if (!isSignedIn()) {\n            if (!await this.createUserOrSaveGuest()) {\n                this.setState({ isLoading: false });\n                return;\n            }\n        }\n\n        await this.saveBillingAddress(paymentInformation).then(\n            /** @namespace Route/Checkout/Container/saveBillingAddressThen */\n            () => this.savePaymentMethodAndPlaceOrder(paymentInformation),\n            this._handleError\n        );\n    }\n\n    trimAddressMagentoStyle(address) {\n        const { countries } = this.props;\n\n        const {\n            country_id,\n            region_code, // drop this\n            region_id,\n            region,\n            ...restOfBillingAddress\n        } = address;\n\n        const newAddress = {\n            ...restOfBillingAddress,\n            country_code: country_id,\n            region\n        };\n\n        /**\n         * If there is no region specified, but there is region ID\n         * get the region code by the country ID\n         */\n        if (region_id) {\n            // find a country by country ID\n            const { available_regions } = countries.find(\n                ({ id }) => id === country_id\n            ) || {};\n\n            if (!available_regions) {\n                return newAddress;\n            }\n\n            // find region by region ID\n            const { code } = available_regions.find(\n                ({ id }) => +id === +region_id\n            ) || {};\n\n            if (!code) {\n                return newAddress;\n            }\n\n            newAddress.region = code;\n        }\n\n        return newAddress;\n    }\n\n    async saveBillingAddress(paymentInformation) {\n        const guest_cart_id = !isSignedIn() ? this._getGuestCartId() : '';\n        const { billing_address } = paymentInformation;\n\n        await fetchMutation(CheckoutQuery.getSetBillingAddressOnCart({\n            guest_cart_id,\n            billing_address: {\n                address: this.trimAddressMagentoStyle(billing_address)\n            }\n        }));\n    }\n\n    async savePaymentMethodAndPlaceOrder(paymentInformation) {\n        const { paymentMethod: { code, additional_data } } = paymentInformation;\n        const guest_cart_id = !isSignedIn() ? this._getGuestCartId() : '';\n\n        try {\n            await fetchMutation(CheckoutQuery.getSetPaymentMethodOnCartMutation({\n                guest_cart_id,\n                payment_method: {\n                    code,\n                    [code]: additional_data\n                }\n            }));\n\n            const orderData = await fetchMutation(CheckoutQuery.getPlaceOrderMutation(guest_cart_id));\n            const { placeOrder: { order: { order_id } } } = orderData;\n\n            this.setDetailsStep(order_id);\n        } catch (e) {\n            this._handleError(e);\n        }\n    }\n\n    render() {\n        return (\n            <Checkout\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { BRAINTREE, KLARNA } from 'Component/CheckoutPayments/CheckoutPayments.config';\nimport {\n    TERMS_AND_CONDITIONS_POPUP_ID\n} from 'Component/CheckoutTermsAndConditionsPopup/CheckoutTermsAndConditionsPopup.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { addressType, customerType } from 'Type/Account';\nimport { paymentMethodsType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { getFormFields, trimAddressFields, trimCustomerAddress } from 'Util/Address';\n\nimport CheckoutBilling from './CheckoutBilling.component';\n\n/** @namespace Component/CheckoutBilling/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer,\n    totals: state.CartReducer.cartTotals,\n    termsAreEnabled: state.ConfigReducer.terms_are_enabled,\n    termsAndConditions: state.ConfigReducer.checkoutAgreements,\n    addressLinesQty: state.ConfigReducer.address_lines_quantity\n});\n\n/** @namespace Component/CheckoutBilling/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showErrorNotification: (message) => dispatch(showNotification('error', message)),\n    showPopup: (payload) => dispatch(showPopup(TERMS_AND_CONDITIONS_POPUP_ID, payload))\n});\n\n/** @namespace Component/CheckoutBilling/Container */\nexport class CheckoutBillingContainer extends PureComponent {\n    static propTypes = {\n        showErrorNotification: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        savePaymentInformation: PropTypes.func.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        shippingAddress: addressType.isRequired,\n        customer: customerType.isRequired,\n        totals: TotalsType.isRequired,\n        addressLinesQty: PropTypes.number.isRequired,\n        termsAndConditions: PropTypes.arrayOf(PropTypes.shape({\n            checkbox_text: PropTypes.string,\n            content: PropTypes.string,\n            name: PropTypes.string\n        })).isRequired\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { paymentMethod, prevPaymentMethods } = state;\n        const { paymentMethods } = props;\n\n        if (!prevPaymentMethods.length && !paymentMethod) {\n            const [method] = paymentMethods;\n            const { code: paymentMethod } = method || {};\n\n            return {\n                prevPaymentMethods: paymentMethods,\n                paymentMethod\n            };\n        }\n\n        return null;\n    }\n\n    containerFunctions = {\n        onBillingSuccess: this.onBillingSuccess.bind(this),\n        onBillingError: this.onBillingError.bind(this),\n        onAddressSelect: this.onAddressSelect.bind(this),\n        onSameAsShippingChange: this.onSameAsShippingChange.bind(this),\n        onPaymentMethodSelect: this.onPaymentMethodSelect.bind(this),\n        showPopup: this.showPopup.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { paymentMethods, customer } = props;\n        const [method] = paymentMethods;\n        const { code: paymentMethod } = method || {};\n\n        this.state = {\n            isSameAsShipping: this.isSameShippingAddress(customer),\n            selectedCustomerAddressId: 0,\n            prevPaymentMethods: paymentMethods,\n            paymentMethod\n        };\n    }\n\n    isSameShippingAddress({ default_billing, default_shipping }) {\n        const { totals: { is_virtual } } = this.props;\n\n        if (is_virtual) {\n            return false;\n        }\n\n        return default_billing === default_shipping;\n    }\n\n    onAddressSelect(id) {\n        this.setState({ selectedCustomerAddressId: id });\n    }\n\n    onSameAsShippingChange() {\n        this.setState(({ isSameAsShipping }) => ({ isSameAsShipping: !isSameAsShipping }));\n    }\n\n    onPaymentMethodSelect(code) {\n        this.setState({ paymentMethod: code });\n    }\n\n    onBillingSuccess(fields, asyncData) {\n        const { savePaymentInformation } = this.props;\n\n        const address = this._getAddress(fields);\n        const paymentMethod = this._getPaymentData(asyncData);\n\n        savePaymentInformation({\n            billing_address: address,\n            paymentMethod\n        });\n    }\n\n    onBillingError(fields, invalidFields, error) {\n        const { showErrorNotification } = this.props;\n\n        if (error) {\n            const { message = __('Something went wrong!') } = error;\n            showErrorNotification(message);\n        }\n    }\n\n    showPopup() {\n        const { showPopup, termsAndConditions } = this.props;\n        const {\n            name: title = __('Terms and Conditions'),\n            content: text = __('There are no Terms and Conditions configured.')\n        } = termsAndConditions[0] || {};\n\n        return showPopup({\n            title, text\n        });\n    }\n\n    _getPaymentData(asyncData) {\n        const { paymentMethod: code } = this.state;\n\n        switch (code) {\n        case BRAINTREE:\n            const [{ nonce }] = asyncData;\n\n            return {\n                code,\n                additional_data: {\n                    payment_method_nonce: nonce,\n                    is_active_payment_token_enabler: false\n                }\n            };\n\n        case KLARNA:\n            const [{ authorization_token }] = asyncData;\n\n            return {\n                code,\n                additional_data: {\n                    authorization_token\n                }\n            };\n\n        default:\n            return { code };\n        }\n    }\n\n    _getAddress(fields) {\n        const { addressLinesQty, shippingAddress } = this.props;\n\n        const {\n            isSameAsShipping,\n            selectedCustomerAddressId\n        } = this.state;\n\n        const formFields = getFormFields(fields, addressLinesQty);\n\n        if (isSameAsShipping) {\n            return shippingAddress;\n        }\n\n        if (!selectedCustomerAddressId) {\n            return trimAddressFields(formFields);\n        }\n\n        const { customer: { addresses } } = this.props;\n        const address = addresses.find(({ id }) => id === selectedCustomerAddressId);\n\n        return {\n            ...trimCustomerAddress(address),\n            save_in_address_book: false\n        };\n    }\n\n    render() {\n        return (\n            <CheckoutBilling\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutBillingContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutAddressBook.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { customerType } from 'Type/Account';\n\nimport CheckoutAddressBook from './CheckoutAddressBook.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/CheckoutAddressBook/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer,\n    isSignedIn: state.MyAccountReducer.isSignedIn\n});\n\n/** @namespace Component/CheckoutAddressBook/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    requestCustomerData: () => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestCustomerData(dispatch)\n    )\n});\n\n/** @namespace Component/CheckoutAddressBook/Container */\nexport class CheckoutAddressBookContainer extends PureComponent {\n    static propTypes = {\n        isSignedIn: PropTypes.bool.isRequired,\n        requestCustomerData: PropTypes.func.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func,\n        onAddressSelect: PropTypes.func,\n        customer: customerType.isRequired,\n        isBilling: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isBilling: false,\n        onAddressSelect: () => {},\n        onShippingEstimationFieldsChange: () => {}\n    };\n\n    static _getDefaultAddressId(props) {\n        const { customer, isBilling } = props;\n        const defaultKey = isBilling ? 'default_billing' : 'default_shipping';\n        const { [defaultKey]: defaultAddressId, addresses } = customer;\n\n        if (defaultAddressId) {\n            return +defaultAddressId;\n        }\n        if (addresses && addresses.length) {\n            return addresses[0].id;\n        }\n\n        return 0;\n    }\n\n    containerFunctions = ({\n        onAddressSelect: this.onAddressSelect.bind(this)\n    });\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            requestCustomerData,\n            customer,\n            onAddressSelect,\n            isSignedIn\n        } = props;\n\n        if (isSignedIn && !Object.keys(customer).length) {\n            requestCustomerData();\n        }\n\n        const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n        if (defaultAddressId) {\n            onAddressSelect(defaultAddressId);\n            this.estimateShipping(defaultAddressId);\n        }\n\n        this.state = {\n            prevDefaultAddressId: defaultAddressId,\n            selectedAddressId: defaultAddressId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevDefaultAddressId } = state;\n        const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n        if (defaultAddressId !== prevDefaultAddressId) {\n            return {\n                selectedAddressId: defaultAddressId,\n                prevDefaultAddressId: defaultAddressId\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(_, prevState) {\n        const {\n            onAddressSelect,\n            requestCustomerData,\n            isSignedIn,\n            customer\n        } = this.props;\n        const { selectedAddressId: prevSelectedAddressId } = prevState;\n        const { selectedAddressId } = this.state;\n\n        if (isSignedIn && !Object.keys(customer).length) {\n            requestCustomerData();\n        }\n\n        if (selectedAddressId !== prevSelectedAddressId) {\n            onAddressSelect(selectedAddressId);\n            this.estimateShipping(selectedAddressId);\n        }\n    }\n\n    onAddressSelect(address) {\n        const { id = 0 } = address;\n        this.setState({ selectedAddressId: id });\n    }\n\n    estimateShipping(addressId) {\n        const {\n            onShippingEstimationFieldsChange,\n            customer: { addresses = [] }\n        } = this.props;\n\n        const address = addresses.find(({ id }) => id === addressId);\n\n        if (!address) {\n            return;\n        }\n\n        const {\n            city,\n            country_id,\n            postcode,\n            region: {\n                region_id,\n                region\n            } = {}\n        } = address;\n\n        if (!country_id) {\n            return;\n        }\n\n        onShippingEstimationFieldsChange({\n            city,\n            country_id,\n            region_id,\n            region,\n            postcode\n        });\n    }\n\n    render() {\n        return (\n            <CheckoutAddressBook\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutAddressBookContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { connect } from 'react-redux';\n\nimport CheckoutAddressForm from './CheckoutAddressForm.component';\n\n/** @namespace Component/CheckoutAddressForm/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    countries: state.ConfigReducer.countries,\n    default_country: state.ConfigReducer.default_country,\n    addressLinesQty: state.ConfigReducer.address_lines_quantity,\n    shippingFields: state.CheckoutReducer.shippingFields,\n    showVatNumber: state.ConfigReducer.show_vat_number_on_storefront\n});\n\n/** @namespace Component/CheckoutAddressForm/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutAddressForm);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './FormPortal.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport Form from 'Component/Form/Form.component';\n\n/** @namespace Component/FormPortal/Component */\nexport class FormPortal extends Form {\n    static propTypes = {\n        ...Form.propTypes,\n        name: PropTypes.string.isRequired\n    };\n\n    componentDidUpdate(prevProps) {\n        const { id: prevId } = prevProps;\n        const { id, name } = this.props;\n\n        if (id !== prevId) {\n            this.unsubscribeToFormPortalCollector(prevId, name);\n            this.subscribeToFormPortalCollector(id, name);\n        }\n    }\n\n    subscribeToFormPortalCollector(id, name) {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.subscribe(id, this.collectFieldsInformation, name);\n        }\n    }\n\n    unsubscribeToFormPortalCollector(id, name) {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.unsubscribe(id, name);\n        }\n    }\n\n    componentWillUnmount() {\n        const { id, name } = this.props;\n        this.unsubscribeToFormPortalCollector(id, name);\n    }\n\n    componentDidMount() {\n        const { id, name } = this.props;\n        if (!id) {\n            throw new Error('Can not create a FormPortal without assignment to the Form ID!');\n        }\n        this.subscribeToFormPortalCollector(id, name);\n    }\n\n    render() {\n        const { children } = this.state;\n        return children;\n    }\n}\n\nexport default FormPortal;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { connect } from 'react-redux';\n\nimport {\n    mapDispatchToProps,\n    mapStateToProps,\n    MyAccountAddressTableContainer\n} from 'Component/MyAccountAddressTable/MyAccountAddressTable.container';\n\nimport CheckoutAddressTable from './CheckoutAddressTable.component';\n\n/** @namespace Component/CheckoutAddressTable/Container */\nexport class CheckoutAddressTableContainer extends MyAccountAddressTableContainer {\n    render() {\n        return (\n            <CheckoutAddressTable\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutAddressTableContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { BRAINTREE_CONTAINER_ID } from 'Component/Braintree/Braintree.config';\nimport { KlarnaContainer } from 'Component/Klarna/Klarna.container';\nimport { BILLING_STEP } from 'Route/Checkout/Checkout.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { paymentMethodsType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport BraintreeDropIn from 'Util/Braintree';\n\nimport CheckoutPayments from './CheckoutPayments.component';\nimport { BRAINTREE, KLARNA } from './CheckoutPayments.config';\n\n/** @namespace Component/CheckoutPayments/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showError: (message) => dispatch(showNotification('error', message))\n});\n\n/** @namespace Component/CheckoutPayments/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    totals: state.CartReducer.cartTotals,\n    email: state.CheckoutReducer.email,\n    address: state.CheckoutReducer.shippingFields\n});\n\n/** @namespace Component/CheckoutPayments/Container */\nexport class CheckoutPaymentsContainer extends PureComponent {\n    static propTypes = {\n        onPaymentMethodSelect: PropTypes.func.isRequired,\n        setOrderButtonEnableStatus: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        totals: TotalsType.isRequired,\n        email: PropTypes.string.isRequired,\n        address: PropTypes.object.isRequired\n    };\n\n    containerFunctions = {\n        initBraintree: this.initBraintree.bind(this),\n        selectPaymentMethod: this.selectPaymentMethod.bind(this)\n    };\n\n    braintree = new BraintreeDropIn(BRAINTREE_CONTAINER_ID);\n\n    dataMap = {\n        [BRAINTREE]: this.getBraintreeData.bind(this),\n        [KLARNA]: this.getKlarnaData.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { paymentMethods } = props;\n        const [{ code } = {}] = paymentMethods;\n        this.state = { selectedPaymentCode: code };\n    }\n\n    componentDidMount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.subscribe(BILLING_STEP, this.collectAdditionalData, 'CheckoutPaymentsContainer');\n        }\n    }\n\n    componentWillUnmount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.unsubscribe(BILLING_STEP, 'CheckoutPaymentsContainer');\n        }\n    }\n\n    getKlarnaData() {\n        return { asyncData: KlarnaContainer.authorize() };\n    }\n\n    getBraintreeData() {\n        const {\n            totals: {\n                grand_total = 0\n            },\n            email,\n            address\n        } = this.props;\n\n        return {\n            asyncData: this.braintree.requestPaymentNonce(grand_total, email, address)\n        };\n    }\n\n    collectAdditionalData = () => {\n        const { selectedPaymentCode } = this.state;\n        const additionalDataGetter = this.dataMap[selectedPaymentCode];\n        if (!additionalDataGetter) {\n            return {};\n        }\n\n        return additionalDataGetter();\n    };\n\n    initBraintree() {\n        return this.braintree.create();\n    }\n\n    selectPaymentMethod({ code }) {\n        const {\n            onPaymentMethodSelect,\n            setOrderButtonEnableStatus\n        } = this.props;\n\n        this.setState({\n            selectedPaymentCode: code\n        });\n\n        onPaymentMethodSelect(code);\n        setOrderButtonEnableStatus(true);\n    }\n\n    render() {\n        return (\n            <CheckoutPayments\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPaymentsContainer);\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const BRAINTREE_CONTAINER_ID = 'BRAINTREE_CONTAINER_ID';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\nimport { fetchMutation, fetchQuery } from 'Util/Request';\n\n/** @namespace Util/Braintree */\nexport class Braintree {\n    isLoading = false;\n\n    isThreeDSecure = false;\n\n    __construct(containerId) {\n        super.__construct();\n        this.containerId = containerId;\n    }\n\n    async create() {\n        const { default: dropIn } = await import('braintree-web-drop-in');\n        const authorization = await this.requestBraintreeClientToken();\n        const configuration = await this.requestBraintreeConfig();\n        this.isThreeDSecure = configuration.is_three_d_secure;\n        this.braintreeDropIn = await dropIn.create({\n            authorization,\n            container: `#${ this.containerId }`,\n            threeDSecure: this.isThreeDSecure\n        });\n\n        return true;\n    }\n\n    requestBraintreeConfig() {\n        const query = new Field('getBraintreeConfig').addFieldList(['is_three_d_secure']);\n        return fetchQuery(query).then(\n            /** @namespace Util/Braintree/fetchQueryThen */\n            ({ getBraintreeConfig }) => getBraintreeConfig\n        );\n    }\n\n    requestBraintreeClientToken() {\n        const mutation = (new Field('createBraintreeClientToken')).setAlias('token');\n        return fetchMutation(mutation).then(\n            /** @namespace Util/Braintree/fetchMutationThen */\n            ({ token }) => token\n        );\n    }\n\n    convertAddressToBillingAddress(address) {\n        const {\n            firstname = '',\n            lastname = '',\n            telephone = '',\n            street0 = '',\n            street1 = '',\n            city = '',\n            postcode = '',\n            country_id = '',\n            region_code = ''\n        } = address || {};\n\n        return {\n            givenName: firstname,\n            surname: lastname,\n            phoneNumber: telephone,\n            streetAddress: street0,\n            extendedAddress: street1,\n            locality: city,\n            region: region_code,\n            postalCode: postcode,\n            countryCodeAlpha2: country_id\n        };\n    }\n\n    requestPaymentNonce(amount, email, address) {\n        const requestData = this.isThreeDSecure ? {\n            threeDSecure: {\n                amount,\n                email,\n                billingAddress: this.convertAddressToBillingAddress(address)\n            }\n        } : {};\n\n        return this.braintreeDropIn.requestPaymentMethod(requestData);\n    }\n}\n\nexport default Braintree;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Loader from 'Component/Loader';\n\nimport { BRAINTREE_CONTAINER_ID } from './Braintree.config';\n\nimport './Braintree.style';\n\n/** @namespace Component/Braintree/Component */\nexport class Braintree extends PureComponent {\n    static propTypes = {\n        init: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: true\n    };\n\n    componentDidMount() {\n        const { init } = this.props;\n\n        init().then(\n            /** @namespace Component/Braintree/Component/initThen */\n            () => this.setState({ isLoading: false })\n        );\n    }\n\n    render() {\n        const { isLoading } = this.state;\n\n        return (\n            <div block=\"Braintree\">\n                <Loader isLoading={ isLoading } />\n                <div\n                  block=\"Braintree\"\n                  elem=\"Form\"\n                  id={ BRAINTREE_CONTAINER_ID }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Braintree;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { paymentMethodType } from 'Type/Checkout';\n\nimport './CheckoutPayment.style';\n\n/** @namespace Component/CheckoutPayment/Component */\nexport class CheckoutPayment extends PureComponent {\n    static propTypes = {\n        method: paymentMethodType.isRequired,\n        onClick: PropTypes.func.isRequired,\n        isSelected: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isSelected: false\n    };\n\n    onClick = () => {\n        const {\n            onClick,\n            method\n        } = this.props;\n\n        onClick(method);\n    };\n\n    render() {\n        const {\n            isSelected,\n            method: { title }\n        } = this.props;\n\n        return (\n            <li block=\"CheckoutPayment\">\n                <button\n                  block=\"CheckoutPayment\"\n                  mods={ { isSelected } }\n                  elem=\"Button\"\n                  onClick={ this.onClick }\n                  type=\"button\"\n                >\n                    { title }\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default CheckoutPayment;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './NotSupportedPayment.style';\n\n/** @namespace Component/NotSupportedPayment/Component */\nexport class NotSupportedPayment extends PureComponent {\n    static propTypes = {\n        disableButton: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n        const { disableButton } = this.props;\n        disableButton();\n    }\n\n    render() {\n        return (\n            <div block=\"NotSupportedPayment\">\n                <p>{ __('This payment method is not supported yet.') }</p>\n            </div>\n        );\n    }\n}\n\nexport default NotSupportedPayment;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport CheckoutTermsAndConditionsPopup from './CheckoutTermsAndConditionsPopup.component';\nimport { TERMS_AND_CONDITIONS_POPUP_ID } from './CheckoutTermsAndConditionsPopup.config';\n\n/** @namespace Component/CheckoutTermsAndConditionsPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    payload: state.PopupReducer.popupPayload[TERMS_AND_CONDITIONS_POPUP_ID] || {}\n});\n\n/** @namespace Component/CheckoutTermsAndConditionsPopup/Container */\nexport class CheckoutTermsAndConditionsPopupContainer extends PureComponent {\n    static propTypes = {\n        payload: PropTypes.shape({\n            text: PropTypes.string\n        })\n    };\n\n    static defaultProps = {\n        payload: {\n            text: ''\n        }\n    };\n\n    render() {\n        return (\n            <CheckoutTermsAndConditionsPopup\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\n/** @namespace Component/CheckoutTermsAndConditionsPopup/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutTermsAndConditionsPopupContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    STATE_CREATE_ACCOUNT,\n    STATE_FORGOT_PASSWORD,\n    STATE_SIGN_IN\n} from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport { SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport CheckoutGuestForm from './CheckoutGuestForm.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/CheckoutGuestForm/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isSignedIn: state.MyAccountReducer.isSignedIn,\n    isEmailConfirmationRequired: state.ConfigReducer.is_email_confirmation_required,\n    emailValue: state.CheckoutReducer.email,\n    isEmailAvailable: state.CheckoutReducer.isEmailAvailable\n});\n\n/** @namespace Component/CheckoutGuestForm/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    signIn: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.signIn(options, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    showErrorNotification: (error) => dispatch(showNotification('error', error[0].message))\n});\n\n/** @namespace Component/CheckoutGuestForm/Container */\nexport class CheckoutGuestFormContainer extends PureComponent {\n    static propTypes = {\n        isCreateUser: PropTypes.bool.isRequired,\n        isGuestEmailSaved: PropTypes.bool,\n        isSignedIn: PropTypes.bool.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        onEmailChange: PropTypes.func.isRequired,\n        onCreateUserChange: PropTypes.func.isRequired,\n        onPasswordChange: PropTypes.func.isRequired,\n        emailValue: PropTypes.string,\n        onSignIn: PropTypes.func,\n        isEmailAvailable: PropTypes.bool.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        signIn: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        emailValue: '',\n        isGuestEmailSaved: false,\n        onSignIn: () => {}\n    };\n\n    state = {\n        isLoading: false,\n        signInState: ''\n    };\n\n    containerFunctions = {\n        handleEmailInput: this.handleEmailInput.bind(this),\n        handleCreateUser: this.handleCreateUser.bind(this),\n        handlePasswordInput: this.handlePasswordInput.bind(this),\n        handleForgotPassword: this.handleForgotPassword.bind(this),\n        handleSignIn: this.handleSignIn.bind(this),\n        handleCreateAccount: this.handleCreateAccount.bind(this),\n        onFormError: this.onFormError.bind(this),\n        setSignInState: this.setSignInState.bind(this),\n        setLoadingState: this.setLoadingState.bind(this)\n    };\n\n    containerProps = () => {\n        const { emailValue } = this.props;\n        return ({\n            formId: SHIPPING_STEP,\n            emailValue\n        });\n    };\n\n    onFormError() {\n        this.setState({ isLoading: false });\n    }\n\n    handleForgotPassword(e) {\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ signInState: STATE_FORGOT_PASSWORD });\n    }\n\n    handleSignIn(e) {\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ signInState: STATE_SIGN_IN });\n    }\n\n    handleCreateAccount(e) {\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ signInState: STATE_CREATE_ACCOUNT });\n    }\n\n    setSignInState(signInState) {\n        this.setState({ signInState });\n    }\n\n    setLoadingState(isLoading) {\n        this.setState({ isLoading });\n    }\n\n    handleEmailInput(email) {\n        const { onEmailChange } = this.props;\n        onEmailChange(email);\n    }\n\n    handleCreateUser() {\n        const { onCreateUserChange } = this.props;\n        onCreateUserChange();\n    }\n\n    handlePasswordInput(password) {\n        const { onPasswordChange } = this.props;\n        onPasswordChange(password);\n    }\n\n    render() {\n        const { isSignedIn, isGuestEmailSaved } = this.props;\n        if (isSignedIn || isGuestEmailSaved) {\n            return null;\n        }\n\n        return (\n            <CheckoutGuestForm\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutGuestFormContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { connect } from 'react-redux';\n\nimport {\n    getCartShippingPrice,\n    getCartShippingSubPrice,\n    getCartSubtotal,\n    getCartSubtotalSubPrice,\n    getCartTotalSubPrice\n} from 'Util/Cart';\n\nimport CheckoutOrderSummary from './CheckoutOrderSummary.component';\n\n/** @namespace Component/CheckoutOrderSummary/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    cartDisplayConfig: state.ConfigReducer.cartDisplayConfig,\n    cartSubtotal: getCartSubtotal(state),\n    cartSubtotalSubPrice: getCartSubtotalSubPrice(state),\n    cartShippingPrice: getCartShippingPrice(state),\n    cartShippingSubPrice: getCartShippingSubPrice(state),\n    cartTotalSubPrice: getCartTotalSubPrice(state)\n});\n\n/** @namespace Component/CheckoutOrderSummary/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutOrderSummary);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { ChildrenType } from 'Type/Common';\nimport { formatPrice } from 'Util/Price';\n\n/** @namespace Component/CheckoutOrderSummaryPriceLine/Component */\nexport class CheckoutOrderSummaryPriceLine extends PureComponent {\n    static propTypes = {\n        price: PropTypes.number.isRequired,\n        currency: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        mods: PropTypes.object,\n        subPrice: PropTypes.node,\n        children: ChildrenType\n    };\n\n    static defaultProps = {\n        mods: {},\n        subPrice: null,\n        children: []\n    };\n\n    renderPrice() {\n        const { price, currency } = this.props;\n        return formatPrice(price, currency);\n    }\n\n    renderSubPrice() {\n        const { subPrice, currency } = this.props;\n\n        if (!subPrice) {\n            return null;\n        }\n\n        return (\n            <span>\n                { `${ __('Excl. tax:') } ${ formatPrice(subPrice, currency) }` }\n            </span>\n        );\n    }\n\n    render() {\n        const {\n            price,\n            title,\n            mods,\n            children\n        } = this.props;\n\n        if (!price) {\n            return null;\n        }\n\n        return (\n            <li block=\"CheckoutOrderSummary\" elem=\"SummaryItem\" mods={ mods }>\n                <strong block=\"CheckoutOrderSummary\" elem=\"Text\">\n                    { title }\n                </strong>\n                <strong block=\"CheckoutOrderSummary\" elem=\"Text\">\n                    { this.renderPrice() }\n                    { this.renderSubPrice() }\n                </strong>\n                { children }\n            </li>\n        );\n    }\n}\n\nexport default CheckoutOrderSummaryPriceLine;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateShippingFields } from 'Store/Checkout/Checkout.action';\nimport { customerType } from 'Type/Account';\nimport { shippingMethodsType } from 'Type/Checkout';\nimport { getFormFields, trimAddressFields, trimCustomerAddress } from 'Util/Address';\n\nimport CheckoutShipping from './CheckoutShipping.component';\n\n/** @namespace Component/CheckoutShipping/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer,\n    addressLinesQty: state.ConfigReducer.address_lines_quantity,\n    totals: state.CartReducer.cartTotals\n});\n\n/** @namespace Component/CheckoutShipping/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateShippingFields: (fields) => dispatch(updateShippingFields(fields))\n});\n\n/** @namespace Component/CheckoutShipping/Container */\nexport class CheckoutShippingContainer extends PureComponent {\n    static propTypes = {\n        saveAddressInformation: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired,\n        customer: customerType.isRequired,\n        addressLinesQty: PropTypes.number.isRequired,\n        updateShippingFields: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        onShippingSuccess: this.onShippingSuccess.bind(this),\n        onShippingError: this.onShippingError.bind(this),\n        onAddressSelect: this.onAddressSelect.bind(this),\n        onShippingMethodSelect: this.onShippingMethodSelect.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { shippingMethods } = props;\n        const [selectedShippingMethod] = shippingMethods;\n\n        this.state = {\n            selectedCustomerAddressId: 0,\n            selectedShippingMethod\n        };\n    }\n\n    onAddressSelect(id) {\n        this.setState({ selectedCustomerAddressId: id });\n    }\n\n    onShippingMethodSelect(method) {\n        this.setState({ selectedShippingMethod: method });\n    }\n\n    onShippingError() {\n        // TODO: implement notification if some data in Form can not display error\n    }\n\n    onShippingSuccess(fields) {\n        const {\n            saveAddressInformation,\n            updateShippingFields,\n            addressLinesQty\n        } = this.props;\n\n        const {\n            selectedCustomerAddressId,\n            selectedShippingMethod\n        } = this.state;\n\n        const formFields = getFormFields(fields, addressLinesQty);\n\n        const shippingAddress = selectedCustomerAddressId\n            ? this._getAddressById(selectedCustomerAddressId)\n            : trimAddressFields(formFields);\n\n        const {\n            carrier_code: shipping_carrier_code,\n            method_code: shipping_method_code\n        } = selectedShippingMethod;\n\n        const data = {\n            billing_address: shippingAddress,\n            shipping_address: shippingAddress,\n            shipping_carrier_code,\n            shipping_method_code\n        };\n\n        saveAddressInformation(data);\n        updateShippingFields(fields);\n    }\n\n    _getAddressById(addressId) {\n        const { customer: { addresses } } = this.props;\n        const address = addresses.find(({ id }) => id === addressId);\n        return {\n            ...trimCustomerAddress(address),\n            save_in_address_book: false\n        };\n    }\n\n    render() {\n        return (\n            <CheckoutShipping\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutShippingContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { shippingMethodsType } from 'Type/Checkout';\n\nimport CheckoutDeliveryOptions from './CheckoutDeliveryOptions.component';\n\n/** @namespace Component/CheckoutDeliveryOptions/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    shippingMethod: state.CartReducer.cartTotals.shipping_method\n});\n\n/** @namespace Component/CheckoutDeliveryOptions/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/CheckoutDeliveryOptions/Container */\nexport class CheckoutDeliveryOptionsContainer extends PureComponent {\n    static propTypes = {\n        onShippingMethodSelect: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired\n    };\n\n    static _getDefaultMethod(props) {\n        const {\n            shippingMethods = [],\n            shippingMethod\n        } = props;\n\n        const result = shippingMethods.find(\n            ({ method_code, carrier_code }) => `${carrier_code}_${method_code}` === shippingMethod\n        ) || shippingMethods[0] || {};\n\n        return result.method_code;\n    }\n\n    containerFunctions = {\n        selectShippingMethod: this.selectShippingMethod.bind(this)\n    };\n\n    dataMap = {};\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { shippingMethods } = props;\n        this.state = { prevShippingMethods: shippingMethods };\n\n        const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n        if (selectedShippingMethodCode) {\n            this.state = {\n                ...this.state,\n                selectedShippingMethodCode\n            };\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { shippingMethods } = props;\n        const { prevShippingMethods } = state;\n\n        if (shippingMethods.length !== prevShippingMethods.length) {\n            const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n            return {\n                selectedShippingMethodCode,\n                prevShippingMethods: shippingMethods\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.subscribe(SHIPPING_STEP, this.collectAdditionalData, 'CheckoutDeliveryOptions');\n        }\n    }\n\n    componentDidUpdate(_, prevState) {\n        const { onShippingMethodSelect, shippingMethods } = this.props;\n        const { selectedShippingMethodCode } = this.state;\n        const { selectedShippingMethodCode: prevSelectedShippingMethodCode } = prevState;\n\n        if (selectedShippingMethodCode !== prevSelectedShippingMethodCode) {\n            const shippingMethod = shippingMethods.find(\n                ({ method_code }) => method_code === selectedShippingMethodCode\n            );\n\n            onShippingMethodSelect(shippingMethod);\n        }\n    }\n\n    componentWillUnmount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.unsubscribe(SHIPPING_STEP, 'CheckoutDeliveryOptions');\n        }\n    }\n\n    collectAdditionalData = () => {\n        const { selectedShippingMethodCode } = this.state;\n        const additionalDataGetter = this.dataMap[selectedShippingMethodCode];\n        if (!additionalDataGetter) {\n            return {};\n        }\n\n        return additionalDataGetter();\n    };\n\n    selectShippingMethod(shippingMethod) {\n        const { onShippingMethodSelect } = this.props;\n        const { method_code } = shippingMethod;\n        this.setState({ selectedShippingMethodCode: method_code });\n        onShippingMethodSelect(shippingMethod);\n    }\n\n    render() {\n        return (\n            <CheckoutDeliveryOptions\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutDeliveryOptionsContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { shippingMethodType } from 'Type/Checkout';\nimport { getCartShippingItemPrice, getCartShippingItemSubPrice } from 'Util/Cart';\n\nimport CheckoutDeliveryOption from './CheckoutDeliveryOption.component';\n\n/** @namespace Component/CheckoutDeliveryOption/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    totals: state.CartReducer.cartTotals,\n    cartDisplayConfig: state.ConfigReducer.cartDisplayConfig,\n    getCartShippingItemPrice: getCartShippingItemPrice(state),\n    getCartShippingItemSubPrice: getCartShippingItemSubPrice(state)\n});\n\n/** @namespace Component/CheckoutDeliveryOption/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/CheckoutDeliveryOption/Container */\nexport class CheckoutDeliveryOptionContainer extends PureComponent {\n    static propTypes = {\n        getCartShippingItemPrice: PropTypes.func.isRequired,\n        getCartShippingItemSubPrice: PropTypes.func.isRequired,\n        option: shippingMethodType.isRequired\n    };\n\n    containerProps() {\n        const {\n            getCartShippingItemPrice,\n            getCartShippingItemSubPrice,\n            option = {}\n        } = this.props;\n\n        return {\n            optionPrice: getCartShippingItemPrice(option),\n            optionSubPrice: getCartShippingItemSubPrice(option)\n        };\n    }\n\n    render() {\n        return (\n            <CheckoutDeliveryOption\n              { ...this.props }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutDeliveryOptionContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Link from 'Component/Link';\n\nimport './CheckoutSuccess.style';\n\n/** @namespace Component/CheckoutSuccess/Component */\nexport class CheckoutSuccess extends PureComponent {\n    static propTypes = {\n        orderID: PropTypes.string.isRequired\n    };\n\n    renderButtons() {\n        return (\n            <div block=\"CheckoutSuccess\" elem=\"ButtonWrapper\">\n                <Link\n                  block=\"Button\"\n                  mix={ { block: 'CheckoutSuccess', elem: 'ContinueButton' } }\n                  to=\"/\"\n                >\n                    { __('Continue shopping') }\n                </Link>\n            </div>\n        );\n    }\n\n    render() {\n        const { orderID } = this.props;\n\n        return (\n            <div block=\"CheckoutSuccess\">\n                <h3>{ __('Your order # is: %s', orderID) }</h3>\n                <p>{ __('We`ll email you an order confirmation with details and tracking info.') }</p>\n                { this.renderButtons() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutSuccess;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { isSignedIn } from 'Util/Auth';\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/Checkout */\nexport class CheckoutQuery {\n    getPaymentMethodsQuery(guestCartId) {\n        const query = new Field('getPaymentMethods')\n            .addFieldList(this._getPaymentMethodFields());\n\n        this._addGuestCartId(guestCartId, query);\n\n        return query;\n    }\n\n    getSaveGuestEmailMutation(email, cart_id) {\n        const input = { email, cart_id };\n        const mutation = new Field('setGuestEmailOnCart')\n            .addArgument('input', 'SetGuestEmailOnCartInput', input)\n            .addField(((new Field('cart')).addField('email')));\n\n        return mutation;\n    }\n\n    getEstimateShippingCosts(address, guestCartId) {\n        const mutation = new Field('estimateShippingCosts')\n            .addArgument('address', 'EstimateShippingCostsAddress!', address)\n            .addFieldList(this._getEstimatedShippingFields());\n\n        this._addGuestCartId(guestCartId, mutation);\n\n        return mutation;\n    }\n\n    getSaveAddressInformation(addressInformation, guestCartId) {\n        const mutation = new Field('saveAddressInformation')\n            .addArgument('addressInformation', 'SaveAddressInformation!', addressInformation)\n            .addFieldList(this._getSaveAddressInformationFields());\n\n        this._addGuestCartId(guestCartId, mutation);\n\n        return mutation;\n    }\n\n    getSetBillingAddressOnCart(input) {\n        return new Field('s_setBillingAddressOnCart')\n            .addArgument('input', 'S_SetBillingAddressOnCartInput!', input)\n            .addField(this._getCartField())\n            .setAlias('billingAddress');\n    }\n\n    getSetPaymentMethodOnCartMutation(input) {\n        return new Field('s_setPaymentMethodOnCart')\n            .addArgument('input', 'S_SetPaymentMethodOnCartInput!', input)\n            .addField(this._getCartField())\n            .setAlias('paymentMethod');\n    }\n\n    getPlaceOrderMutation(guestCartId) {\n        const mutation = new Field('s_placeOrder')\n            .setAlias('placeOrder')\n            .addField(this._getOrderField());\n\n        if (!isSignedIn()) {\n            mutation.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return mutation;\n    }\n\n    _addGuestCartId(guestCartId, mutation) {\n        if (guestCartId && !isSignedIn()) {\n            mutation.addArgument('guestCartId', 'String!', guestCartId);\n        }\n    }\n\n    _getOrderField() {\n        return new Field('order')\n            .addFieldList(['order_id']);\n    }\n\n    _getSaveAddressInformationFields() {\n        return [\n            this._getPaymentMethodsField(),\n            this._getTotalsField()\n        ];\n    }\n\n    _getEstimatedShippingFields() {\n        return [\n            'amount',\n            'available',\n            'base_amount',\n            'method_code',\n            'carrier_code',\n            'method_title',\n            'carrier_title',\n            'error_message',\n            'price_excl_tax',\n            'price_incl_tax'\n        ];\n    }\n\n    _getPaymentMethodsField() {\n        return new Field('payment_methods')\n            .addFieldList(this._getPaymentMethodFields());\n    }\n\n    _getPaymentMethodFields() {\n        return ['code', 'title'];\n    }\n\n    _getTotalItemFields() {\n        return [\n            'qty',\n            'name',\n            'price',\n            'item_id',\n            'options',\n            'tax_amount',\n            'tax_percent',\n            'price_incl_tax',\n            'discount_amount',\n            'discount_percent'\n        ];\n    }\n\n    _getTotalItemField() {\n        return new Field('items')\n            .addFieldList(this._getTotalItemFields());\n    }\n\n    _getTotalsFields() {\n        return [\n            'subtotal',\n            'tax_amount',\n            'base_grand_total',\n            'grand_total',\n            'discount_amount',\n            'shipping_amount',\n            'subtotal_incl_tax',\n            'shipping_incl_tax',\n            'quote_currency_code',\n            'shipping_tax_amount',\n            'subtotal_with_discount',\n            'shipping_discount_amount',\n            this._getTotalItemField()\n        ];\n    }\n\n    _getTotalsField() {\n        return new Field('totals')\n            .addFieldList(this._getTotalsFields());\n    }\n\n    _getCartField() {\n        return new Field('cart')\n            .addFieldList(this._getCartFieldList());\n    }\n\n    _getCartFieldList() {\n        return [\n            'id'\n        ];\n    }\n}\n\nexport default new CheckoutQuery();\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CartCoupon from 'Component/CartCoupon';\nimport CheckoutBilling from 'Component/CheckoutBilling';\nimport CheckoutGuestForm from 'Component/CheckoutGuestForm';\nimport CheckoutOrderSummary from 'Component/CheckoutOrderSummary';\nimport CheckoutShipping from 'Component/CheckoutShipping';\nimport CheckoutSuccess from 'Component/CheckoutSuccess';\nimport CmsBlock from 'Component/CmsBlock';\nimport ContentWrapper from 'Component/ContentWrapper';\nimport ExpandableContent from 'Component/ExpandableContent';\nimport { CHECKOUT, CHECKOUT_SUCCESS } from 'Component/Header/Header.config';\nimport Loader from 'Component/Loader';\nimport { addressType } from 'Type/Account';\nimport { paymentMethodsType, shippingMethodsType } from 'Type/Checkout';\nimport { HistoryType } from 'Type/Common';\nimport { TotalsType } from 'Type/MiniCart';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport {\n    BILLING_STEP,\n    CHECKOUT_URL,\n    DETAILS_STEP,\n    SHIPPING_STEP\n} from './Checkout.config';\n\nimport './Checkout.style';\n\n/** @namespace Route/Checkout/Component */\nexport class Checkout extends PureComponent {\n    static propTypes = {\n        setLoading: PropTypes.func.isRequired,\n        setDetailsStep: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func.isRequired,\n        setHeaderState: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        saveAddressInformation: PropTypes.func.isRequired,\n        savePaymentInformation: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        isDeliveryOptionsLoading: PropTypes.bool.isRequired,\n        shippingAddress: addressType.isRequired,\n        checkoutTotals: TotalsType.isRequired,\n        orderID: PropTypes.string.isRequired,\n        history: HistoryType.isRequired,\n        onEmailChange: PropTypes.func.isRequired,\n        paymentTotals: TotalsType,\n        checkoutStep: PropTypes.oneOf([\n            SHIPPING_STEP,\n            BILLING_STEP,\n            DETAILS_STEP\n        ]).isRequired,\n        isCreateUser: PropTypes.bool.isRequired,\n        onCreateUserChange: PropTypes.func.isRequired,\n        onPasswordChange: PropTypes.func.isRequired,\n        isGuestEmailSaved: PropTypes.bool.isRequired,\n        goBack: PropTypes.func.isRequired,\n        totals: TotalsType.isRequired,\n        isMobile: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        paymentTotals: {}\n    };\n\n    stepMap = {\n        [SHIPPING_STEP]: {\n            title: __('Shipping step'),\n            url: '/shipping',\n            render: this.renderShippingStep.bind(this),\n            areTotalsVisible: true,\n            renderCartCoupon: this.renderCartCoupon.bind(this)\n        },\n        [BILLING_STEP]: {\n            title: __('Billing step'),\n            url: '/billing',\n            render: this.renderBillingStep.bind(this),\n            areTotalsVisible: true,\n            renderCartCoupon: this.renderCartCoupon.bind(this)\n        },\n        [DETAILS_STEP]: {\n            title: __('Thank you for your purchase!'),\n            url: '/success',\n            render: this.renderDetailsStep.bind(this),\n            areTotalsVisible: false\n        }\n    };\n\n    componentDidMount() {\n        const { checkoutStep, history } = this.props;\n        const { url } = this.stepMap[checkoutStep];\n\n        this.updateHeader();\n\n        history.replace(appendWithStoreCode(`${ CHECKOUT_URL }${ url }`));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { checkoutStep } = this.props;\n        const { checkoutStep: prevCheckoutStep } = prevProps;\n\n        if (checkoutStep !== prevCheckoutStep) {\n            this.updateHeader();\n            this.updateStep();\n        }\n    }\n\n    updateHeader() {\n        const { setHeaderState, checkoutStep, goBack } = this.props;\n        const { title = '' } = this.stepMap[checkoutStep];\n\n        setHeaderState({\n            name: checkoutStep === DETAILS_STEP ? CHECKOUT_SUCCESS : CHECKOUT,\n            title,\n            onBackClick: () => goBack()\n        });\n    }\n\n    updateStep() {\n        const { checkoutStep, history } = this.props;\n        const { url } = this.stepMap[checkoutStep];\n\n        history.push(appendWithStoreCode(`${ CHECKOUT_URL }${ url }`));\n    }\n\n    renderTitle() {\n        const { checkoutStep } = this.props;\n        const { title = '' } = this.stepMap[checkoutStep];\n\n        return (\n            <h1 block=\"Checkout\" elem=\"Title\">\n                { title }\n            </h1>\n        );\n    }\n\n    renderGuestForm() {\n        const {\n            checkoutStep,\n            isCreateUser,\n            onEmailChange,\n            onCreateUserChange,\n            onPasswordChange,\n            isGuestEmailSaved\n        } = this.props;\n        const isBilling = checkoutStep === BILLING_STEP;\n\n        return (\n            <CheckoutGuestForm\n              isBilling={ isBilling }\n              isCreateUser={ isCreateUser }\n              onEmailChange={ onEmailChange }\n              onCreateUserChange={ onCreateUserChange }\n              onPasswordChange={ onPasswordChange }\n              isGuestEmailSaved={ isGuestEmailSaved }\n            />\n        );\n    }\n\n    renderShippingStep() {\n        const {\n            shippingMethods,\n            onShippingEstimationFieldsChange,\n            saveAddressInformation,\n            isDeliveryOptionsLoading,\n            onPasswordChange,\n            onCreateUserChange,\n            onEmailChange,\n            isCreateUser\n        } = this.props;\n\n        return (\n            <CheckoutShipping\n              isLoading={ isDeliveryOptionsLoading }\n              shippingMethods={ shippingMethods }\n              saveAddressInformation={ saveAddressInformation }\n              onShippingEstimationFieldsChange={ onShippingEstimationFieldsChange }\n              onPasswordChange={ onPasswordChange }\n              onCreateUserChange={ onCreateUserChange }\n              onEmailChange={ onEmailChange }\n              isCreateUser={ isCreateUser }\n            />\n        );\n    }\n\n    renderBillingStep() {\n        const {\n            setLoading,\n            setDetailsStep,\n            shippingAddress,\n            paymentMethods = [],\n            savePaymentInformation\n        } = this.props;\n\n        return (\n            <CheckoutBilling\n              setLoading={ setLoading }\n              paymentMethods={ paymentMethods }\n              setDetailsStep={ setDetailsStep }\n              shippingAddress={ shippingAddress }\n              savePaymentInformation={ savePaymentInformation }\n            />\n        );\n    }\n\n    renderDetailsStep() {\n        const { orderID } = this.props;\n\n        return (\n            <CheckoutSuccess\n              orderID={ orderID }\n            />\n        );\n    }\n\n    renderStep() {\n        const { checkoutStep } = this.props;\n        const { render } = this.stepMap[checkoutStep];\n        if (render) {\n            return render();\n        }\n\n        return null;\n    }\n\n    renderLoader() {\n        const { isLoading } = this.props;\n        return <Loader isLoading={ isLoading } />;\n    }\n\n    renderSummary(showOnMobile = false) {\n        const {\n            checkoutTotals,\n            checkoutStep,\n            paymentTotals,\n            isMobile,\n            totals: { coupon_code }\n        } = this.props;\n        const { areTotalsVisible } = this.stepMap[checkoutStep];\n\n        if (!areTotalsVisible || (showOnMobile && !isMobile) || (!showOnMobile && isMobile)) {\n            return null;\n        }\n\n        return (\n            <CheckoutOrderSummary\n              checkoutStep={ checkoutStep }\n              totals={ checkoutTotals }\n              paymentTotals={ paymentTotals }\n              isExpandable={ isMobile }\n              couponCode={ coupon_code }\n              // eslint-disable-next-line react/jsx-no-bind\n              renderCmsBlock={ () => this.renderPromo(true) }\n            />\n        );\n    }\n\n    renderCoupon() {\n        const { checkoutStep } = this.props;\n        const { renderCartCoupon } = this.stepMap[checkoutStep];\n\n        if (renderCartCoupon) {\n            return renderCartCoupon();\n        }\n\n        return null;\n    }\n\n    renderCartCoupon() {\n        const {\n            totals: { coupon_code },\n            isMobile\n        } = this.props;\n\n        if (isMobile) {\n            return null;\n        }\n\n        return (\n            <ExpandableContent\n              heading={ __('Have a discount code?') }\n              mix={ { block: 'Checkout', elem: 'Coupon' } }\n            >\n                <CartCoupon couponCode={ coupon_code } />\n            </ExpandableContent>\n        );\n    }\n\n    renderPromo(showOnMobile = false) {\n        const { checkoutStep, isMobile } = this.props;\n        const isBilling = checkoutStep === BILLING_STEP;\n\n        if (!showOnMobile && isMobile) {\n            return null;\n        }\n\n        const {\n            checkout_content: {\n                [isBilling ? 'checkout_billing_cms' : 'checkout_shipping_cms']: promo\n            } = {}\n        } = window.contentConfiguration;\n\n        if (!promo) {\n            return null;\n        }\n\n        return <CmsBlock identifier={ promo } />;\n    }\n\n    render() {\n        return (\n            <main block=\"Checkout\">\n                <ContentWrapper\n                  wrapperMix={ { block: 'Checkout', elem: 'Wrapper' } }\n                  label={ __('Checkout page') }\n                >\n                    { this.renderSummary(true) }\n                    <div block=\"Checkout\" elem=\"Step\">\n                        { this.renderTitle() }\n                        { this.renderGuestForm() }\n                        { this.renderStep() }\n                        { this.renderLoader() }\n                    </div>\n                    <div>\n                        { this.renderSummary() }\n                        { this.renderPromo() }\n                        { this.renderCoupon() }\n                    </div>\n                </ContentWrapper>\n            </main>\n        );\n    }\n}\n\nexport default Checkout;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutBilling.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutAddressBook from 'Component/CheckoutAddressBook';\nimport CheckoutPayments from 'Component/CheckoutPayments';\nimport CheckoutTermsAndConditionsPopup from 'Component/CheckoutTermsAndConditionsPopup';\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { BILLING_STEP } from 'Route/Checkout/Checkout.config';\nimport { addressType } from 'Type/Account';\nimport { paymentMethodsType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { formatPrice } from 'Util/Price';\n\nimport './CheckoutBilling.style';\n\n/** @namespace Component/CheckoutBilling/Component */\nexport class CheckoutBilling extends PureComponent {\n    state = {\n        isOrderButtonVisible: true,\n        isOrderButtonEnabled: true,\n        isTermsAndConditionsAccepted: false\n    };\n\n    static propTypes = {\n        setLoading: PropTypes.func.isRequired,\n        setDetailsStep: PropTypes.func.isRequired,\n        isSameAsShipping: PropTypes.bool.isRequired,\n        termsAreEnabled: PropTypes.bool,\n        onSameAsShippingChange: PropTypes.func.isRequired,\n        onPaymentMethodSelect: PropTypes.func.isRequired,\n        onBillingSuccess: PropTypes.func.isRequired,\n        onBillingError: PropTypes.func.isRequired,\n        onAddressSelect: PropTypes.func.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        totals: TotalsType.isRequired,\n        shippingAddress: addressType.isRequired,\n        termsAndConditions: PropTypes.arrayOf(PropTypes.shape({\n            checkbox_text: PropTypes.string\n        })).isRequired\n    };\n\n    static defaultProps = {\n        termsAreEnabled: false\n    };\n\n    componentDidMount() {\n        const { termsAreEnabled } = this.props;\n        if (!termsAreEnabled) {\n            this.setState({ isOrderButtonEnabled: true });\n        }\n    }\n\n    setOrderButtonVisibility = (isOrderButtonVisible) => {\n        this.setState({ isOrderButtonVisible });\n    };\n\n    setOrderButtonEnableStatus = (isOrderButtonEnabled) => {\n        this.setState({ isOrderButtonEnabled });\n    };\n\n    setTACAccepted = () => {\n        this.setState(({ isTermsAndConditionsAccepted: oldIsTACAccepted }) => ({\n            isTermsAndConditionsAccepted: !oldIsTACAccepted\n        }));\n    };\n\n    handleShowPopup = (e) => {\n        const { showPopup } = this.props;\n        e.preventDefault();\n        showPopup();\n    };\n\n    renderTermsAndConditions() {\n        const {\n            termsAreEnabled,\n            termsAndConditions\n        } = this.props;\n\n        const {\n            checkbox_text = __('I agree to terms and conditions')\n        } = termsAndConditions[0] || {};\n\n        const { isTermsAndConditionsAccepted } = this.state;\n\n        if (!termsAreEnabled) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"CheckoutBilling\"\n              elem=\"TermsAndConditions\"\n            >\n                <label\n                  block=\"CheckoutBilling\"\n                  elem=\"TACLabel\"\n                  htmlFor=\"termsAndConditions\"\n                >\n                    { checkbox_text }\n                    <button\n                      block=\"CheckoutBilling\"\n                      elem=\"TACLink\"\n                      onClick={ this.handleShowPopup }\n                    >\n                        { __('read more') }\n                    </button>\n                </label>\n                <Field\n                  id=\"termsAndConditions\"\n                  name=\"termsAndConditions\"\n                  type=\"checkbox\"\n                  value=\"termsAndConditions\"\n                  mix={ { block: 'CheckoutBilling', elem: 'TermsAndConditions-Checkbox' } }\n                  checked={ isTermsAndConditionsAccepted }\n                  onChange={ this.setTACAccepted }\n                />\n            </div>\n        );\n    }\n\n    renderOrderTotal() {\n        const { totals: { grand_total, quote_currency_code } } = this.props;\n\n        const orderTotal = formatPrice(grand_total, quote_currency_code);\n\n        return (\n            <div block=\"Checkout\" elem=\"OrderTotal\">\n                <span>\n                    { __('Order total:') }\n                </span>\n                <span>\n                    { orderTotal }\n                </span>\n            </div>\n        );\n    }\n\n    renderActions() {\n        const {\n            isOrderButtonVisible,\n            isOrderButtonEnabled,\n            isTermsAndConditionsAccepted\n        } = this.state;\n\n        const { termsAreEnabled } = this.props;\n\n        if (!isOrderButtonVisible) {\n            return null;\n        }\n\n        // if terms and conditions are enabled, validate for acceptance\n        const isDisabled = termsAreEnabled\n            ? !isOrderButtonEnabled || !isTermsAndConditionsAccepted\n            : !isOrderButtonEnabled;\n\n        return (\n            <div block=\"Checkout\" elem=\"StickyButtonWrapper\">\n                { this.renderOrderTotal() }\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  disabled={ isDisabled }\n                  mix={ { block: 'CheckoutBilling', elem: 'Button' } }\n                >\n                    { __('Complete order') }\n                </button>\n            </div>\n        );\n    }\n\n    renderAddressBook() {\n        const {\n            onAddressSelect,\n            isSameAsShipping,\n            totals: { is_virtual }\n        } = this.props;\n\n        if (isSameAsShipping && !is_virtual) {\n            return null;\n        }\n\n        return (\n            <CheckoutAddressBook\n              onAddressSelect={ onAddressSelect }\n              isBilling\n            />\n        );\n    }\n\n    renderSameAsShippingCheckbox() {\n        const {\n            isSameAsShipping,\n            onSameAsShippingChange,\n            totals: { is_virtual }\n        } = this.props;\n\n        if (is_virtual) {\n            return null;\n        }\n\n        return (\n            <Field\n              id=\"sameAsShippingAddress\"\n              name=\"sameAsShippingAddress\"\n              type=\"checkbox\"\n              label={ __('My billing and shipping are the same') }\n              value=\"sameAsShippingAddress\"\n              mix={ { block: 'CheckoutBilling', elem: 'Checkbox' } }\n              checked={ isSameAsShipping }\n              onChange={ onSameAsShippingChange }\n            />\n        );\n    }\n\n    renderAddresses() {\n        return (\n            <>\n                { this.renderSameAsShippingCheckbox() }\n                { this.renderAddressBook() }\n            </>\n        );\n    }\n\n    renderPayments() {\n        const {\n            paymentMethods,\n            onPaymentMethodSelect,\n            setLoading,\n            setDetailsStep,\n            shippingAddress\n        } = this.props;\n\n        if (!paymentMethods.length) {\n            return null;\n        }\n\n        return (\n            <CheckoutPayments\n              setLoading={ setLoading }\n              setDetailsStep={ setDetailsStep }\n              paymentMethods={ paymentMethods }\n              onPaymentMethodSelect={ onPaymentMethodSelect }\n              setOrderButtonVisibility={ this.setOrderButtonVisibility }\n              billingAddress={ shippingAddress }\n              setOrderButtonEnableStatus={ this.setOrderButtonEnableStatus }\n            />\n        );\n    }\n\n    renderPopup() {\n        return <CheckoutTermsAndConditionsPopup />;\n    }\n\n    render() {\n        const { onBillingSuccess, onBillingError } = this.props;\n\n        return (\n            <Form\n              mix={ { block: 'CheckoutBilling' } }\n              id={ BILLING_STEP }\n              onSubmitError={ onBillingError }\n              onSubmitSuccess={ onBillingSuccess }\n            >\n                { this.renderAddresses() }\n                { this.renderPayments() }\n                { this.renderTermsAndConditions() }\n                { this.renderActions() }\n                { this.renderPopup() }\n            </Form>\n        );\n    }\n}\n\nexport default CheckoutBilling;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutAddressForm from 'Component/CheckoutAddressForm';\nimport CheckoutAddressTable from 'Component/CheckoutAddressTable';\nimport Link from 'Component/Link';\nimport Loader from 'Component/Loader';\nimport { BILLING_STEP, SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { MY_ACCOUNT_URL } from 'Route/MyAccount/MyAccount.config';\nimport { ADDRESS_BOOK, customerType } from 'Type/Account';\n\nimport './CheckoutAddressBook.style';\n\n/** @namespace Component/CheckoutAddressBook/Component */\nexport class CheckoutAddressBook extends PureComponent {\n    static propTypes = {\n        customer: customerType.isRequired,\n        onAddressSelect: PropTypes.func.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func.isRequired,\n        selectedAddressId: PropTypes.number.isRequired,\n        isSignedIn: PropTypes.bool.isRequired,\n        isBilling: PropTypes.bool.isRequired\n    };\n\n    state = {\n        isCustomAddressExpanded: false\n    };\n\n    static getDerivedStateFromProps(props) {\n        const { selectedAddressId } = props;\n        if (selectedAddressId === 0) {\n            return null;\n        }\n\n        return { isCustomAddressExpanded: false };\n    }\n\n    expandCustomAddress = () => {\n        const { onAddressSelect } = this.props;\n        this.setState({ isCustomAddressExpanded: true });\n        onAddressSelect({});\n    };\n\n    renderNoAddresses() {\n        return (\n            <div>\n                <p>{ __('You have no configured addresses.') }</p>\n                <p>\n                    <Link to={ `${ MY_ACCOUNT_URL }/${ ADDRESS_BOOK }` }>\n                        { __('Go to Address Book to configure them!') }\n                    </Link>\n                </p>\n            </div>\n        );\n    }\n\n    renderLoading() {\n        return (\n            <Loader isLoading />\n        );\n    }\n\n    renderAddress = (address) => {\n        const { onAddressSelect, selectedAddressId } = this.props;\n        const { id } = address;\n\n        return (\n            <CheckoutAddressTable\n              onClick={ onAddressSelect }\n              isSelected={ selectedAddressId === id }\n              title={ __('Address #%s', id) }\n              address={ address }\n              key={ id }\n            />\n        );\n    };\n\n    renderAddressList() {\n        const { customer: { addresses } } = this.props;\n        if (!addresses) {\n            return this.renderLoading();\n        }\n        if (!addresses.length) {\n            return this.renderNoAddresses();\n        }\n\n        return addresses.map(this.renderAddress);\n    }\n\n    renderHeading() {\n        const { isBilling } = this.props;\n        const addressName = isBilling ? __('Select billing address') : __('Select shipping address');\n\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { addressName }\n            </h2>\n        );\n    }\n\n    renderCustomAddress() {\n        const { isBilling, onShippingEstimationFieldsChange } = this.props;\n        const formPortalId = isBilling ? BILLING_STEP : SHIPPING_STEP;\n\n        return (\n            <CheckoutAddressForm\n              onShippingEstimationFieldsChange={ onShippingEstimationFieldsChange }\n              address={ {} }\n              id={ formPortalId }\n            />\n        );\n    }\n\n    renderOptionalCustomAddress() {\n        const { isCustomAddressExpanded } = this.state;\n\n        return (\n            <div\n              block=\"CheckoutAddressBook\"\n              elem=\"CustomAddressWrapper\"\n            >\n                <button\n                  block=\"CheckoutAddressBook\"\n                  elem=\"Button\"\n                  mods={ { isCustomAddressExpanded } }\n                  mix={ { block: 'Button', mods: { isHollow: true } } }\n                  type=\"button\"\n                  onClick={ this.expandCustomAddress }\n                >\n                    { __('Use custom address') }\n                </button>\n                { isCustomAddressExpanded && this.renderCustomAddress() }\n            </div>\n        );\n    }\n\n    renderSignedInContent() {\n        return (\n            <>\n                <div block=\"CheckoutAddressBook\" elem=\"Wrapper\">\n                    { this.renderAddressList() }\n                </div>\n                { this.renderOptionalCustomAddress() }\n            </>\n        );\n    }\n\n    renderGuestContent() {\n        return this.renderCustomAddress();\n    }\n\n    renderContent() {\n        const { isSignedIn } = this.props;\n        if (isSignedIn) {\n            return this.renderSignedInContent();\n        }\n\n        return this.renderGuestContent();\n    }\n\n    render() {\n        return (\n            <div block=\"CheckoutAddressBook\">\n                { this.renderHeading() }\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutAddressBook;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutAddressForm.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FormPortal from 'Component/FormPortal';\nimport MyAccountAddressForm from 'Component/MyAccountAddressForm/MyAccountAddressForm.component';\nimport { debounce } from 'Util/Request';\n\nimport { UPDATE_STATE_FREQUENCY } from './CheckoutAddressForm.config';\n\n/** @namespace Component/CheckoutAddressForm/Component */\nexport class CheckoutAddressForm extends MyAccountAddressForm {\n    static propTypes = {\n        ...MyAccountAddressForm.propTypes,\n        id: PropTypes.string.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func\n    };\n\n    static defaultProps = {\n        ...MyAccountAddressForm.defaultProps,\n        onShippingEstimationFieldsChange: () => {}\n    };\n\n    onChange = debounce((key, value) => {\n        this.setState(() => ({ [key]: value }));\n    }, UPDATE_STATE_FREQUENCY);\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            address: { region: { region = '' } = {} }\n        } = this.props;\n\n        // TODO: get from region data\n        this.state = {\n            ...this.state,\n            region,\n            city: '',\n            postcode: ''\n        };\n\n        this.estimateShipping();\n    }\n\n    componentDidUpdate(_, prevState) {\n        const {\n            countryId,\n            regionId,\n            region,\n            city,\n            postcode\n        } = this.state;\n\n        const {\n            countryId: prevCountryId,\n            regionId: prevRegionId,\n            region: prevRegion,\n            city: prevCity,\n            postcode: prevpostcode\n        } = prevState;\n\n        if (\n            countryId !== prevCountryId\n            || regionId !== prevRegionId\n            || city !== prevCity\n            || region !== prevRegion\n            || postcode !== prevpostcode\n        ) {\n            this.estimateShipping();\n        }\n    }\n\n    estimateShipping() {\n        const { onShippingEstimationFieldsChange } = this.props;\n\n        const {\n            countryId,\n            regionId,\n            region,\n            city,\n            postcode\n        } = this.state;\n\n        onShippingEstimationFieldsChange({\n            country_id: countryId,\n            region_id: regionId,\n            region,\n            city,\n            postcode\n        });\n    }\n\n    get fieldMap() {\n        // country_id, region, region_id, city - are used for shipping estimation\n        const { shippingFields } = this.props;\n\n        const {\n            default_billing,\n            default_shipping,\n            city,\n            postcode,\n            vat_id,\n            ...fieldMap\n        } = super.fieldMap;\n\n        fieldMap.city = {\n            ...city,\n            onChange: (value) => this.onChange('city', value)\n        };\n\n        fieldMap.postcode = {\n            ...postcode,\n            onChange: (value) => this.onChange('postcode', value)\n        };\n\n        // since object doesn't maintain the order of it's properties\n        // and last modified property goes to the end of the property list,\n        // move vat_id after postcode\n        if (vat_id) {\n            fieldMap.vat_id = vat_id;\n        }\n\n        // Preserve values from global state\n        Object.entries(fieldMap).forEach(([key]) => {\n            if (Object.hasOwnProperty.call(shippingFields, key)) {\n                fieldMap[key].value = shippingFields[key];\n\n                // Handle setting dropdown/input depending on regions existance\n                if (key === 'country_id') {\n                    this.handleInitialCountryValue(shippingFields[key]);\n                }\n            }\n        });\n\n        return fieldMap;\n    }\n\n    handleInitialCountryValue(initialValue) {\n        if (this.handledInitialCountry) {\n            return;\n        }\n\n        this.onCountryChange(initialValue);\n        this.handledInitialCountry = true;\n    }\n\n    getRegionFields() {\n        const regionFieldData = super.getRegionFields();\n        const { region_string } = regionFieldData;\n\n        if (region_string) {\n            regionFieldData.region_string.onChange = (v) => this.onChange('region', v);\n        }\n\n        return regionFieldData;\n    }\n\n    render() {\n        const { id } = this.props;\n\n        return (\n            <FormPortal\n              id={ id }\n              name=\"CheckoutAddressForm\"\n            >\n                <div\n                  block=\"FieldForm\"\n                  mix={ { block: 'CheckoutAddressForm' } }\n                >\n                    { this.renderFields() }\n                </div>\n            </FormPortal>\n        );\n    }\n}\n\nexport default CheckoutAddressForm;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const UPDATE_STATE_FREQUENCY = 1000; // (ms)\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutAddressTable.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport Loader from 'Component/Loader';\nimport MyAccountAddressTable from 'Component/MyAccountAddressTable/MyAccountAddressTable.component';\n\nimport './CheckoutAddressTable.style';\n\n/** @namespace Component/CheckoutAddressTable/Component */\nexport class CheckoutAddressTable extends MyAccountAddressTable {\n    static propTypes = {\n        ...MyAccountAddressTable.propTypes,\n        isSelected: PropTypes.bool,\n        onClick: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        ...MyAccountAddressTable.defaultProps,\n        isSelected: false\n    };\n\n    onAddressClick = () => {\n        const { address, onClick } = this.props;\n        onClick(address);\n    };\n\n    renderTable() {\n        const { isSelected } = this.props;\n\n        return (\n            <button\n              block=\"CheckoutAddressTable\"\n              elem=\"Button\"\n              type=\"button\"\n              mods={ { isSelected } }\n              onClick={ this.onAddressClick }\n            >\n                { super.renderTable() }\n            </button>\n        );\n    }\n\n    render() {\n        const { countries } = this.props;\n\n        return (\n            <div block=\"CheckoutAddressTable\">\n                <Loader isLoading={ !countries.length } />\n                { this.renderTable() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutAddressTable;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutPayments.container';\n","/* eslint-disable no-console */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Loader from 'Component/Loader';\nimport KlarnaQuery from 'Query/Klarna.query';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation } from 'Util/Request';\n\nimport {\n    KLARNA_PAYMENTS_CONTAINER_ID,\n    KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID,\n    KLARNA_SCRIPT_ID\n} from './Klarna.config';\n\nimport './Klarna.style';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/** @namespace Component/Klarna/Component */\nexport class Klarna extends PureComponent {\n    static propTypes = {\n        showError: PropTypes.func.isRequired,\n        setOrderButtonEnableStatus: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: true,\n        canShowPaymentSelector: true,\n        paymentIsShown: false\n    };\n\n    componentWillUnmount() {\n        const { paymentIsShown } = this.state;\n\n        if (paymentIsShown) {\n            const klarnaDOM = document.getElementById(KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID);\n\n            if (klarnaDOM) {\n                klarnaDOM.remove();\n            }\n        }\n    }\n\n    async initiateKlarna() {\n        const { showError, setOrderButtonEnableStatus } = this.props;\n        const guest_cart_id = await CartDispatcher.then(\n            ({ default: dispatcher }) => dispatcher._getGuestQuoteId()\n        );\n\n        try {\n            setOrderButtonEnableStatus(false);\n\n            const { klarnaToken: client_token } = await fetchMutation(\n                KlarnaQuery.getCreateKlarnaTokenMutation(\n                    !isSignedIn() ? { guest_cart_id } : {}\n                )\n            );\n\n            window.Klarna.Payments.init({ client_token });\n            window.Klarna.Payments.load({\n                container: `#${KLARNA_PAYMENTS_CONTAINER_ID}`,\n                payment_method_category: localStorage.getItem('kl_pm')\n            });\n\n            setOrderButtonEnableStatus(true);\n        } catch (err) {\n            console.groupCollapsed('Suppressed error log:');\n            console.error(err);\n            console.groupEnd();\n\n            showError(__('Error initializing Klarna payment method.'));\n        }\n\n        this.setState({ isLoading: false });\n    }\n\n    renderScript() {\n        window.klarnaAsyncCallback = this.initiateKlarna.bind(this);\n        const script = document.getElementById(KLARNA_SCRIPT_ID);\n\n        if (script) {\n            script.parentNode.removeChild(script);\n        }\n\n        const klarnaScript = document.createElement('script');\n        klarnaScript.setAttribute('id', KLARNA_SCRIPT_ID);\n        klarnaScript.setAttribute('src', 'https://x.klarnacdn.net/kp/lib/v1/api.js');\n        klarnaScript.async = true;\n        document.head.appendChild(klarnaScript);\n\n        this.setState({ paymentIsShown: true });\n    }\n\n    loadPaymentMethod(method) {\n        this.setState({\n            isLoading: true,\n            canShowPaymentSelector: false\n        });\n        localStorage.setItem('kl_pm', method);\n        this.renderScript();\n    }\n\n    loadPaymentMethodPayLater = () => {\n        this.loadPaymentMethod('pay_later');\n    };\n\n    loadPaymentMethodPayNow = () => {\n        this.loadPaymentMethod('pay_now');\n    };\n\n    loadPaymentMethodPayOverTime = () => {\n        this.loadPaymentMethod('pay_over_time');\n    };\n\n    renderPaymentSelector() {\n        const { canShowPaymentSelector } = this.state;\n\n        if (!canShowPaymentSelector) {\n            return null;\n        }\n\n        const { setOrderButtonEnableStatus } = this.props;\n\n        this.setState({ isLoading: false });\n        setOrderButtonEnableStatus(false);\n\n        return (\n            <div block=\"Klarna-PaymentSelector\">\n                <button\n                  onClick={ this.loadPaymentMethodPayLater }\n                  block=\"Button\"\n                >\n                    { __('Pay later') }\n                </button>\n\n                <button\n                  onClick={ this.loadPaymentMethodPayNow }\n                  block=\"Button\"\n                >\n                    { __('Pay now') }\n                </button>\n\n                <button\n                  onClick={ this.loadPaymentMethodPayOverTime }\n                  block=\"Button\"\n                >\n                    { __('Pay over time') }\n                </button>\n            </div>\n        );\n    }\n\n    render() {\n        const { isLoading } = this.state;\n\n        return (\n            <div block=\"Klarna\">\n                <Loader isLoading={ isLoading } />\n                { this.renderPaymentSelector() }\n                <div id={ KLARNA_PAYMENTS_CONTAINER_ID } />\n            </div>\n        );\n    }\n}\n\nexport default Klarna;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/Klarna */\nexport class KlarnaQuery {\n    getCreateKlarnaTokenMutation(input) {\n        return new Field('createKlarnaToken')\n            .addArgument('input', 'KlarnaTokenInput!', input)\n            .setAlias('klarnaToken');\n    }\n}\n\nexport default new KlarnaQuery();\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const KLARNA_SCRIPT_ID = 'klarna_script';\nexport const KLARNA_PAYMENTS_CONTAINER_ID = 'klarna-payments-container';\nexport const KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID = 'klarna-payments-device-recognition';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './Braintree';\n","/* eslint-disable no-console */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Braintree from 'Component/Braintree';\nimport CheckoutPayment from 'Component/CheckoutPayment';\nimport Klarna from 'Component/Klarna';\nimport NotSupportedPayment from 'Component/NotSupportedPayment';\nimport { paymentMethodsType } from 'Type/Checkout';\n\nimport {\n    BRAINTREE,\n    KLARNA\n} from './CheckoutPayments.config';\n\nimport './CheckoutPayments.style';\n\n/** @namespace Component/CheckoutPayments/Component */\nexport class CheckoutPayments extends PureComponent {\n    static propTypes = {\n        showError: PropTypes.func.isRequired,\n        selectPaymentMethod: PropTypes.func.isRequired,\n        initBraintree: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        setOrderButtonEnableStatus: PropTypes.func.isRequired,\n        selectedPaymentCode: PropTypes.string.isRequired,\n        billingAddress: PropTypes.shape({\n            city: PropTypes.string,\n            company: PropTypes.string,\n            country_id: PropTypes.string,\n            email: PropTypes.string,\n            firstname: PropTypes.string,\n            lastname: PropTypes.string,\n            postcode: PropTypes.string,\n            region_id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string\n            ]),\n            region: PropTypes.oneOfType([\n                PropTypes.object,\n                PropTypes.string\n            ]),\n            street: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.array\n            ]),\n            telephone: PropTypes.string\n        }).isRequired\n    };\n\n    paymentRenderMap = {\n        [BRAINTREE]: this.renderBrainTreePayment.bind(this),\n        [KLARNA]: this.renderKlarnaPayment.bind(this)\n    };\n\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch(error, info) {\n        const { showError, setOrderButtonEnableStatus } = this.props;\n\n        console.groupCollapsed('Suppressed error log:');\n        console.error(error.toString(), info.toString());\n        console.groupEnd();\n\n        this.setState(\n            { hasError: true },\n            () => {\n                setOrderButtonEnableStatus(false);\n                showError(`${error} Please try again later`);\n            }\n        );\n    }\n\n    renderBrainTreePayment() {\n        const { initBraintree } = this.props;\n        return <Braintree init={ initBraintree } />;\n    }\n\n    renderKlarnaPayment() {\n        const { setOrderButtonEnableStatus } = this.props;\n        return <Klarna setOrderButtonEnableStatus={ setOrderButtonEnableStatus } />;\n    }\n\n    renderNotSupported() {\n        const { setOrderButtonEnableStatus } = this.props;\n        return <NotSupportedPayment disableButton={ setOrderButtonEnableStatus } />;\n    }\n\n    renderPayment = (method) => {\n        const {\n            selectPaymentMethod,\n            selectedPaymentCode\n        } = this.props;\n\n        const { code } = method;\n        const isSelected = selectedPaymentCode === code;\n\n        return (\n            <CheckoutPayment\n              key={ code }\n              isSelected={ isSelected }\n              method={ method }\n              onClick={ selectPaymentMethod }\n            />\n        );\n    };\n\n    renderPayments() {\n        const { paymentMethods } = this.props;\n        return paymentMethods.map(this.renderPayment);\n    }\n\n    renderSelectedPayment() {\n        const { selectedPaymentCode } = this.props;\n        const render = this.paymentRenderMap[selectedPaymentCode];\n        if (!render) {\n            return null;\n        }\n\n        return render();\n    }\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Select payment method') }\n            </h2>\n        );\n    }\n\n    renderContent() {\n        const { hasError } = this.state;\n\n        if (hasError) {\n            return (\n                <p>{ __('The error occurred during initializing payment methods. Please try again later!') }</p>\n            );\n        }\n\n        return (\n            <>\n                { this.renderHeading() }\n                <ul block=\"CheckoutPayments\" elem=\"Methods\">\n                    { this.renderPayments() }\n                </ul>\n                { this.renderSelectedPayment() }\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div block=\"CheckoutPayments\">\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutPayments;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './Braintree.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutPayment.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './Klarna.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport { default } from './NotSupportedPayment.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutTermsAndConditionsPopup.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Html from 'Component/Html';\nimport Popup from 'Component/Popup';\n\nimport { TERMS_AND_CONDITIONS_POPUP_ID } from './CheckoutTermsAndConditionsPopup.config';\n\nimport './CheckoutTermsAndConditionsPopup.style';\n\n/** @namespace Component/CheckoutTermsAndConditionsPopup/Component */\nexport class CheckoutTermsAndConditionsPopup extends PureComponent {\n    static propTypes = {\n        payload: PropTypes.shape({\n            text: PropTypes.string\n        }).isRequired\n    };\n\n    renderContent() {\n        const { payload: { text = 'No text was passed' } } = this.props;\n        return (\n            <Html content={ text } />\n        );\n    }\n\n    render() {\n        return (\n            <Popup\n              id={ TERMS_AND_CONDITIONS_POPUP_ID }\n              clickOutside={ false }\n              mix={ { block: 'CheckoutTermsAndConditionsPopup' } }\n            >\n                { this.renderContent() }\n            </Popup>\n        );\n    }\n}\n\nexport default CheckoutTermsAndConditionsPopup;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutGuestForm.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport Field from 'Component/Field';\nimport FieldForm from 'Component/FieldForm/FieldForm.component';\nimport FormPortal from 'Component/FormPortal';\nimport MyAccountConfirmEmail from 'Component/MyAccountConfirmEmail';\nimport MyAccountForgotPassword from 'Component/MyAccountForgotPassword';\nimport MyAccountForgotPasswordSuccess from 'Component/MyAccountForgotPasswordSuccess';\nimport {\n    STATE_CONFIRM_EMAIL,\n    STATE_FORGOT_PASSWORD,\n    STATE_FORGOT_PASSWORD_SUCCESS,\n    STATE_LOGGED_IN,\n    STATE_SIGN_IN\n} from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport MyAccountSignIn from 'Component/MyAccountSignIn';\n\nimport './CheckoutGuestForm.style';\n\n/** @namespace Component/CheckoutGuestForm/Component */\nexport class CheckoutGuestForm extends FieldForm {\n    static propTypes = {\n        formId: PropTypes.string.isRequired,\n        handleEmailInput: PropTypes.func.isRequired,\n        handleCreateUser: PropTypes.func.isRequired,\n        isEmailAvailable: PropTypes.bool.isRequired,\n        emailValue: PropTypes.string.isRequired,\n        signInState: PropTypes.string.isRequired,\n        setSignInState: PropTypes.func.isRequired\n    };\n\n    componentDidUpdate(prevProps) {\n        const { isEmailAvailable, setSignInState, signInState } = this.props;\n        const { isEmailAvailable: prevIsEmailAvailable } = prevProps;\n\n        if (!isEmailAvailable && prevIsEmailAvailable && signInState !== STATE_SIGN_IN) {\n            setSignInState(STATE_SIGN_IN);\n        }\n    }\n\n    renderMap = {\n        [STATE_SIGN_IN]: {\n            render: () => this.renderSignIn(),\n            title: __('Sign in to your account')\n        },\n        [STATE_FORGOT_PASSWORD]: {\n            render: () => this.renderForgotPassword(),\n            title: __('Get password link')\n        },\n        [STATE_FORGOT_PASSWORD_SUCCESS]: {\n            render: () => this.renderForgotPasswordSuccess()\n        },\n        [STATE_LOGGED_IN]: {\n            render: () => {}\n        },\n        [STATE_CONFIRM_EMAIL]: {\n            render: () => this.renderConfirmEmail(),\n            title: __('Confirm the email')\n        },\n        '': {\n            render: () => this.renderGuestForm(),\n            title: __('Enter personal information')\n        }\n    };\n\n    get fieldMap() {\n        const {\n            handleEmailInput,\n            handlePasswordInput,\n            formId,\n            isCreateUser,\n            emailValue\n        } = this.props;\n\n        const fields = {\n            guest_email: {\n                form: formId,\n                label: __('Email'),\n                validation: ['notEmpty', 'email'],\n                onChange: handleEmailInput,\n                skipValue: true,\n                value: emailValue\n            }\n        };\n\n        if (isCreateUser) {\n            fields.guest_password = {\n                form: formId,\n                label: __('Create Password'),\n                onChange: handlePasswordInput,\n                validation: ['notEmpty', 'password'],\n                type: 'password',\n                skipValue: true\n            };\n        }\n\n        return fields;\n    }\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Enter personal information') }\n            </h2>\n        );\n    }\n\n    renderCreateUserCheckbox() {\n        const {\n            isCreateUser,\n            handleCreateUser,\n            isEmailConfirmationRequired\n        } = this.props;\n\n        // if email confirmation required and user is not logged in\n        // the user is 100% not logged in (we are in the guest form)\n        // do not show the checkbox to create the user account\n        if (isEmailConfirmationRequired) {\n            return null;\n        }\n\n        return (\n            <Field\n              type=\"checkbox\"\n              label={ __('Create free account and keep track of your orders') }\n              id=\"guest_create_user\"\n              name=\"guest_create_user\"\n              value={ isCreateUser }\n              checked={ isCreateUser }\n              skipValue\n              onChange={ handleCreateUser }\n            />\n        );\n    }\n\n    renderSignIn() {\n        const {\n            signInState,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            setLoadingState,\n            onSignIn,\n            emailValue,\n            handleEmailInput,\n            setSignInState\n        } = this.props;\n\n        return (\n            <MyAccountSignIn\n              state={ signInState }\n              onFormError={ onFormError }\n              handleForgotPassword={ handleForgotPassword }\n              handleCreateAccount={ handleCreateAccount }\n              isCheckout\n              handleEmailInput={ handleEmailInput }\n              setSignInState={ setSignInState }\n              emailValue={ emailValue }\n              setLoadingState={ setLoadingState }\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    renderConfirmEmail() {\n        const { signInState, handleSignIn } = this.props;\n\n        return (\n            <MyAccountConfirmEmail\n              state={ signInState }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderForgotPassword() {\n        const {\n            signInState,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            setSignInState,\n            setLoadingState\n        } = this.props;\n\n        return (\n            <MyAccountForgotPassword\n              state={ signInState }\n              onFormError={ onFormError }\n              handleSignIn={ handleSignIn }\n              handleCreateAccount={ handleCreateAccount }\n              setLoadingState={ setLoadingState }\n              setSignInState={ setSignInState }\n              isCheckout\n            />\n        );\n    }\n\n    renderForgotPasswordSuccess() {\n        const { signInState, handleSignIn } = this.props;\n\n        return (\n            <MyAccountForgotPasswordSuccess\n              state={ signInState }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderSignInForm() {\n        const {\n            signInState,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            onSignIn\n        } = this.props;\n\n        return (\n            <MyAccountSignIn\n              state={ signInState }\n              onFormError={ onFormError }\n              handleForgotPassword={ handleForgotPassword }\n              handleCreateAccount={ handleCreateAccount }\n              isCheckout={ isCheckout }\n              setLoadingState={ setLoadingState }\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    renderGuestForm() {\n        const { formId } = this.props;\n        return (\n            <>\n                { this.renderHeading() }\n                <FormPortal\n                  id={ formId }\n                  name=\"CheckoutGuestForm\"\n                >\n                    { this.renderFields() }\n                    { this.renderCreateUserCheckbox() }\n                </FormPortal>\n            </>\n        );\n    }\n\n    renderForm() {\n        const { signInState } = this.props;\n        const { render } = this.renderMap[signInState];\n\n        return render();\n    }\n\n    render() {\n        return (\n            <div\n              block=\"CheckoutGuestForm\"\n              mix={ { block: 'FieldForm' } }\n            >\n                { this.renderForm() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutGuestForm;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutOrderSummary.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CartCoupon from 'Component/CartCoupon';\nimport CartItem from 'Component/CartItem';\nimport CheckoutOrderSummaryPriceLine from 'Component/CheckoutOrderSummaryPriceLine';\nimport ExpandableContent from 'Component/ExpandableContent';\nimport { BILLING_STEP } from 'Route/Checkout/Checkout.config';\nimport { TotalsType } from 'Type/MiniCart';\n\nimport './CheckoutOrderSummary.style';\n\n/**\n * Checkout Order Summary component\n * @namespace Component/CheckoutOrderSummary/Component\n */\nexport class CheckoutOrderSummary extends PureComponent {\n    static propTypes = {\n        totals: TotalsType,\n        checkoutStep: PropTypes.string.isRequired,\n        couponCode: PropTypes.string,\n        renderCmsBlock: PropTypes.func,\n        isExpandable: PropTypes.bool,\n        cartDisplayConfig: PropTypes.object.isRequired,\n        cartSubtotal: PropTypes.number,\n        cartSubtotalSubPrice: PropTypes.number,\n        cartShippingPrice: PropTypes.number,\n        cartShippingSubPrice: PropTypes.number,\n        cartTotalSubPrice: PropTypes.number\n    };\n\n    static defaultProps = {\n        totals: {},\n        couponCode: '',\n        renderCmsBlock: () => {},\n        isExpandable: false,\n        cartSubtotal: 0,\n        cartSubtotalSubPrice: null,\n        cartShippingPrice: 0,\n        cartShippingSubPrice: null,\n        cartTotalSubPrice: null\n    };\n\n    renderPriceLine(price, title, mods) {\n        if (!price) {\n            return null;\n        }\n\n        const { totals: { quote_currency_code } } = this.props;\n\n        return (\n            <CheckoutOrderSummaryPriceLine\n              price={ price }\n              currency={ quote_currency_code }\n              title={ title }\n              mods={ mods }\n            />\n        );\n    }\n\n    renderItem = (item) => {\n        const {\n            totals: {\n                quote_currency_code\n            }\n        } = this.props;\n\n        const { item_id } = item;\n\n        return (\n            <CartItem\n              key={ item_id }\n              item={ item }\n              currency_code={ quote_currency_code }\n            />\n        );\n    };\n\n    renderDiscount() {\n        const {\n            totals: {\n                applied_rule_ids,\n                discount_amount,\n                coupon_code\n            }\n        } = this.props;\n\n        if (!applied_rule_ids) {\n            return null;\n        }\n\n        if (!coupon_code) {\n            return this.renderPriceLine(\n                -Math.abs(discount_amount),\n                __('Discount %s:', '')\n            );\n        }\n\n        return this.renderPriceLine(\n            -Math.abs(discount_amount),\n            __('Discount/Coupon %s:', coupon_code.toUpperCase())\n        );\n    }\n\n    renderItems() {\n        const { totals: { items = [] } } = this.props;\n\n        return (\n            <div block=\"CheckoutOrderSummary\" elem=\"OrderItems\">\n                <ul block=\"CheckoutOrderSummary\" elem=\"CartItemList\">\n                    { items.map(this.renderItem) }\n                </ul>\n            </div>\n        );\n    }\n\n    renderHeading() {\n        const { totals: { items_qty } } = this.props;\n\n        return (\n            <h3\n              block=\"CheckoutOrderSummary\"\n              elem=\"Header\"\n              mix={ { block: 'CheckoutPage', elem: 'Heading', mods: { hasDivider: true } } }\n            >\n                <span>{ __('Order Summary') }</span>\n                <p block=\"CheckoutOrderSummary\" elem=\"ItemsInCart\">{ __('%s Item(s) In Cart', items_qty) }</p>\n            </h3>\n        );\n    }\n\n    renderSubTotal() {\n        const {\n            totals: {\n                quote_currency_code\n            },\n            cartSubtotal,\n            cartSubtotalSubPrice\n        } = this.props;\n        const title = __('Cart Subtotal');\n\n        if (cartSubtotalSubPrice) {\n            return (\n                <CheckoutOrderSummaryPriceLine\n                  price={ cartSubtotal }\n                  currency={ quote_currency_code }\n                  title={ title }\n                  subPrice={ cartSubtotalSubPrice }\n                />\n            );\n        }\n\n        return this.renderPriceLine(cartSubtotal, title);\n    }\n\n    getShippingLabel() {\n        const { checkoutStep } = this.props;\n\n        if (checkoutStep === BILLING_STEP) {\n            return __('Shipping');\n        }\n\n        return __('Estimated Shipping');\n    }\n\n    renderShipping() {\n        const {\n            totals: {\n                quote_currency_code\n            },\n            cartShippingPrice,\n            cartShippingSubPrice\n        } = this.props;\n        const title = this.getShippingLabel();\n        const mods = { divider: true };\n\n        if (!cartShippingSubPrice) {\n            return this.renderPriceLine(cartShippingPrice, title, mods);\n        }\n\n        return (\n            <CheckoutOrderSummaryPriceLine\n              price={ cartShippingPrice }\n              currency={ quote_currency_code }\n              title={ title }\n              mods={ mods }\n              subPrice={ cartShippingSubPrice }\n            />\n        );\n    }\n\n    renderOrderTotal() {\n        const {\n            totals: {\n                grand_total,\n                quote_currency_code\n            },\n            cartTotalSubPrice\n        } = this.props;\n        const title = __('Order total');\n\n        if (cartTotalSubPrice) {\n            return (\n                <CheckoutOrderSummaryPriceLine\n                  price={ grand_total }\n                  currency={ quote_currency_code }\n                  title={ title }\n                  subPrice={ cartTotalSubPrice }\n                />\n            );\n        }\n\n        return this.renderPriceLine(grand_total, title);\n    }\n\n    renderTaxFullSummary() {\n        const {\n            totals: {\n                applied_taxes = []\n            },\n            cartDisplayConfig: {\n                display_full_tax_summary\n            } = {}\n        } = this.props;\n\n        if (!display_full_tax_summary || !applied_taxes.length) {\n            return null;\n        }\n\n        return applied_taxes\n            .flatMap(({ rates }) => rates)\n            .map(({ percent, title }, i) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <div block=\"CheckoutOrderSummary\" elem=\"AppendedContent\" key={ i }>\n                    { `${title} (${percent}%)` }\n                </div>\n            ));\n    }\n\n    renderTax() {\n        const {\n            totals: {\n                tax_amount = 0,\n                quote_currency_code\n            },\n            cartDisplayConfig: {\n                display_full_tax_summary,\n                display_zero_tax_subtotal\n            } = {}\n        } = this.props;\n\n        if (!tax_amount && !display_zero_tax_subtotal) {\n            return null;\n        }\n\n        return (\n            <CheckoutOrderSummaryPriceLine\n              price={ tax_amount.toFixed(2) } // since we display tax even if value is 0\n              currency={ quote_currency_code }\n              title={ __('Tax') }\n              mods={ { withAppendedContent: display_full_tax_summary } }\n            >\n                { this.renderTaxFullSummary() }\n            </CheckoutOrderSummaryPriceLine>\n        );\n    }\n\n    renderTotals() {\n        return (\n            <div block=\"CheckoutOrderSummary\" elem=\"OrderTotals\">\n                <ul>\n                    { this.renderSubTotal() }\n                    { this.renderShipping() }\n                    { this.renderDiscount() }\n                    { this.renderTax() }\n                    { this.renderOrderTotal() }\n                </ul>\n            </div>\n        );\n    }\n\n    renderCoupon() {\n        const { couponCode } = this.props;\n\n        return (\n            <CartCoupon\n              couponCode={ couponCode }\n              mix={ { block: 'CheckoutOrderSummary', elem: 'Coupon' } }\n              title={ __('Have a discount code?') }\n            />\n        );\n    }\n\n    renderCmsBlock() {\n        const { renderCmsBlock } = this.props;\n\n        return (\n            <div\n              block=\"CheckoutOrderSummary\"\n              elem=\"CmsBlock\"\n            >\n                { renderCmsBlock() }\n            </div>\n        );\n    }\n\n    renderExpandableContent() {\n        return (\n            <ExpandableContent\n              heading={ __('Order summary') }\n              mix={ { block: 'CheckoutOrderSummary', elem: 'ExpandableContent' } }\n            >\n                { this.renderItems() }\n                { this.renderCmsBlock() }\n                { this.renderCoupon() }\n                { this.renderTotals() }\n            </ExpandableContent>\n        );\n    }\n\n    renderContent() {\n        const { isExpandable } = this.props;\n\n        if (isExpandable) {\n            return this.renderExpandableContent();\n        }\n\n        return (\n            <>\n                { this.renderHeading() }\n                { this.renderItems() }\n                { this.renderTotals() }\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <article block=\"CheckoutOrderSummary\" aria-label=\"Order Summary\">\n                { this.renderContent() }\n            </article>\n        );\n    }\n}\n\nexport default CheckoutOrderSummary;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutOrderSummaryPriceLine.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutShipping.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutAddressBook from 'Component/CheckoutAddressBook';\nimport CheckoutDeliveryOptions from 'Component/CheckoutDeliveryOptions';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\nimport { SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { shippingMethodsType, shippingMethodType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { formatPrice } from 'Util/Price';\n\n/** @namespace Component/CheckoutShipping/Component */\nexport class CheckoutShipping extends PureComponent {\n    static propTypes = {\n        totals: TotalsType.isRequired,\n        onShippingSuccess: PropTypes.func.isRequired,\n        onShippingError: PropTypes.func.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired,\n        onShippingMethodSelect: PropTypes.func.isRequired,\n        selectedShippingMethod: shippingMethodType,\n        onAddressSelect: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        selectedShippingMethod: null\n    };\n\n    renderOrderTotal() {\n        const {\n            totals: {\n                grand_total,\n                quote_currency_code\n            }\n        } = this.props;\n\n        const orderTotal = formatPrice(grand_total, quote_currency_code);\n\n        return (\n            <div block=\"Checkout\" elem=\"OrderTotal\">\n                <span>\n                    { __('Order total:') }\n                </span>\n                <span>\n                    { orderTotal }\n                </span>\n            </div>\n        );\n    }\n\n    renderActions() {\n        const { selectedShippingMethod } = this.props;\n\n        return (\n            <div block=\"Checkout\" elem=\"StickyButtonWrapper\">\n                { this.renderOrderTotal() }\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  disabled={ !selectedShippingMethod }\n                  mix={ { block: 'CheckoutShipping', elem: 'Button' } }\n                >\n                    { __('Proceed to billing') }\n                </button>\n            </div>\n        );\n    }\n\n    renderDelivery() {\n        const {\n            shippingMethods,\n            onShippingMethodSelect\n        } = this.props;\n\n        return (\n            <CheckoutDeliveryOptions\n              shippingMethods={ shippingMethods }\n              onShippingMethodSelect={ onShippingMethodSelect }\n            />\n        );\n    }\n\n    renderAddressBook() {\n        const {\n            onAddressSelect,\n            onShippingEstimationFieldsChange\n        } = this.props;\n\n        return (\n            <CheckoutAddressBook\n              onAddressSelect={ onAddressSelect }\n              onShippingEstimationFieldsChange={ onShippingEstimationFieldsChange }\n            />\n        );\n    }\n\n    render() {\n        const {\n            onShippingSuccess,\n            onShippingError,\n            isLoading\n        } = this.props;\n\n        return (\n            <Form\n              id={ SHIPPING_STEP }\n              mix={ { block: 'CheckoutShipping' } }\n              onSubmitError={ onShippingError }\n              onSubmitSuccess={ onShippingSuccess }\n            >\n                { this.renderAddressBook() }\n                <div>\n                    <Loader isLoading={ isLoading } />\n                    { this.renderDelivery() }\n                    { this.renderActions() }\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default CheckoutShipping;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutDeliveryOptions.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutDeliveryOption from 'Component/CheckoutDeliveryOption';\nimport { shippingMethodsType } from 'Type/Checkout';\n\nimport './CheckoutDeliveryOptions.style';\n\n/** @namespace Component/CheckoutDeliveryOptions/Component */\nexport class CheckoutDeliveryOptions extends PureComponent {\n    static propTypes = {\n        shippingMethods: shippingMethodsType.isRequired,\n        selectShippingMethod: PropTypes.func.isRequired,\n        selectedShippingMethodCode: PropTypes.string\n    };\n\n    static defaultProps = {\n        selectedShippingMethodCode: null\n    };\n\n    shippingRenderMap = {};\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Select shipping method') }\n            </h2>\n        );\n    }\n\n    renderDeliveryOption = (option) => {\n        const {\n            selectedShippingMethodCode,\n            selectShippingMethod\n        } = this.props;\n\n        const { method_code } = option;\n        const isSelected = selectedShippingMethodCode === method_code;\n\n        return (\n            <CheckoutDeliveryOption\n              key={ method_code }\n              isSelected={ isSelected }\n              option={ option }\n              onClick={ selectShippingMethod }\n            />\n        );\n    };\n\n    renderNoDeliveryOptions() {\n        return (\n            <p block=\"CheckoutDeliveryOptions\" elem=\"NoOptions\">\n                { __('There are no shipping methods available, try different address.') }\n            </p>\n        );\n    }\n\n    renderShippingMethods() {\n        const { shippingMethods } = this.props;\n        if (!shippingMethods.length) {\n            return this.renderNoDeliveryOptions();\n        }\n\n        return shippingMethods.map(this.renderDeliveryOption);\n    }\n\n    renderSelectedShippingMethod() {\n        const { selectedShippingMethodCode } = this.props;\n        const render = this.shippingRenderMap[selectedShippingMethodCode];\n        if (!render) {\n            return null;\n        }\n\n        return render();\n    }\n\n    render() {\n        return (\n            <div block=\"CheckoutDeliveryOptions\">\n                { this.renderHeading() }\n                <ul block=\"CheckoutPayments\" elem=\"Methods\">\n                    { this.renderShippingMethods() }\n                </ul>\n                { this.renderSelectedShippingMethod() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutDeliveryOptions;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutDeliveryOption.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { shippingMethodType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { formatPrice } from 'Util/Price';\n\nimport './CheckoutDeliveryOption.style';\n\n/** @namespace Component/CheckoutDeliveryOption/Component */\nexport class CheckoutDeliveryOption extends PureComponent {\n    static propTypes = {\n        option: shippingMethodType.isRequired,\n        onClick: PropTypes.func.isRequired,\n        isSelected: PropTypes.bool,\n        totals: TotalsType.isRequired,\n        optionPrice: PropTypes.number,\n        optionSubPrice: PropTypes.number\n    };\n\n    static defaultProps = {\n        isSelected: false,\n        optionPrice: 0,\n        optionSubPrice: null\n    };\n\n    onClick = () => {\n        const {\n            onClick,\n            option\n        } = this.props;\n\n        onClick(option);\n    };\n\n    getOptionPrice() {\n        const {\n            totals: {\n                quote_currency_code\n            },\n            optionPrice\n        } = this.props;\n\n        return formatPrice(optionPrice, quote_currency_code);\n    }\n\n    renderOptionSubPrice() {\n        const {\n            totals: {\n                quote_currency_code\n            },\n            optionSubPrice\n        } = this.props;\n\n        if (!optionSubPrice) {\n            return null;\n        }\n\n        return (\n            <span block=\"CheckoutDeliveryOption\" elem=\"SubPrice\">\n                { __('Excl. tax: ') }\n                { formatPrice(optionSubPrice, quote_currency_code) }\n            </span>\n        );\n    }\n\n    renderPrice() {\n        return (\n            <strong>\n                { ` - ${ this.getOptionPrice() }` }\n                { this.renderOptionSubPrice() }\n            </strong>\n        );\n    }\n\n    renderRow() {\n        const {\n            option: {\n                carrier_title,\n                method_title\n            }\n        } = this.props;\n\n        return (\n            <div block=\"CheckoutDeliveryOption\" elem=\"Row\">\n                <span>\n                    { __('Carrier method: ') }\n                    <strong>{ carrier_title }</strong>\n                </span>\n                <br />\n                <span>\n                    { __('Rate: ') }\n                    <strong>{ method_title }</strong>\n                </span>\n                { this.renderPrice() }\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            isSelected\n        } = this.props;\n\n        return (\n            <li block=\"CheckoutDeliveryOption\">\n                <button\n                  block=\"CheckoutDeliveryOption\"\n                  mods={ { isSelected } }\n                  elem=\"Button\"\n                  onClick={ this.onClick }\n                  type=\"button\"\n                >\n                    { this.renderRow() }\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default CheckoutDeliveryOption;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './CheckoutSuccess.component';\n"],"sourceRoot":""}