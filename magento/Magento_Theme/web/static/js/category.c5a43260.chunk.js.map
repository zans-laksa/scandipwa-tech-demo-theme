{"version":3,"sources":["component/ProductCard/ProductCard.container.js","component/ProductAttributeValue/ProductAttributeValue.component.js","component/ExpandableContentShowMore/ExpandableContentShowMore.component.js"],"names":["ProductCardContainer","this","props","product","configurable_options","Object","keys","length","values","attribute_options","reduce","acc","option","swatch_data","label","type","value","push","to","SharedTransitionContainer","registerSharedElement","containerFunctions","containerProps","defineProperty","_ProductCardContainer","connect","mapStateToProps","mapDispatchToProps","ExpandableContentShowMore","handleShowAllButtonClick","state","isExpanding","setState","isOpen","expandableRef","current","expandableContentHeight","getBoundingClientRect","height","prevProps","transitionDurationCSStoMS","window","getComputedStyle","getPropertyValue","slice","setTimeout","children","getExpandableContentHeight","ref","createRef","showElemCount","console","log","mods","onClick","mix","block","likeLink","elem","__","child","style","renderExpandableChildren","renderShowAllButton","isMobile","renderContent","defaultProps","_ExpandableContentShowMore"],"mappings":"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","file":"static/js/category.c5a43260.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { Subscribe } from 'unstated';\n\nimport ProductCard from 'SourceComponent/ProductCard/ProductCard.component';\nimport {\n    mapDispatchToProps,\n    mapStateToProps,\n    ProductCardContainer as SourceProductCardContainer\n} from 'SourceComponent/ProductCard/ProductCard.container';\nimport SharedTransitionContainer from 'SourceComponent/SharedTransition/SharedTransition.unstated';\n\n/** @namespace ScandipwaTheme/Component/ProductCard/Container/ProductCardContainer */\nexport class ProductCardContainer extends SourceProductCardContainer {\n    _getAvailableVisualOptions() {\n        const { product: { configurable_options = {} } } = this.props;\n\n        if (Object.keys(configurable_options).length === 0) {\n            return [];\n        }\n\n        const { attribute_options = {} } = Object.values(configurable_options)[0];\n\n        return Object.values(attribute_options).reduce(\n            (acc, option) => {\n                const {\n                    swatch_data,\n                    label\n                } = option;\n\n                const { type, value } = swatch_data || {};\n\n                if (type && value) {\n                    acc.push({ value, label, type });\n                }\n\n                return acc;\n            },\n            []\n        );\n    }\n\n    render() {\n        return (\n            <Subscribe to={ [SharedTransitionContainer] }>\n                { ({ registerSharedElement }) => (\n                    <ProductCard\n                      // eslint-disable-next-line @scandipwa/scandipwa-guidelines/jsx-no-props-destruction\n                      { ...{ ...this.props, registerSharedElement } }\n                      { ...this.containerFunctions }\n                      { ...this.containerProps() }\n                    />\n                ) }\n            </Subscribe>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCardContainer);\n","import './ProductAttributeValue.override.style.scss';\n\nexport { default } from 'SourceComponent/ProductAttributeValue/ProductAttributeValue.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { ChildrenType } from 'Type/Common';\n\nimport './ExpandableContentShowMore.style';\n\n/** @namespace ScandipwaTheme/Component/ExpandableContentShowMore/Component/ExpandableContentShowMore */\n// eslint-disable-next-line @scandipwa/scandipwa-guidelines/derived-class-names\nexport class ExpandableContentShowMore extends PureComponent {\n    static propTypes = {\n        showElemCount: PropTypes.number,\n        children: ChildrenType.isRequired,\n        isMobile: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        showElemCount: 3\n    };\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    componentDidMount() {\n        const { isOpen } = this.state;\n\n        if (isOpen) {\n            if (this.expandableRef.current) {\n                this.expandableContentHeight = this.expandableRef.current.getBoundingClientRect().height;\n            }\n            this.setState({ isOpen: false });\n        }\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    componentDidUpdate(prevProps) {\n        const { isExpanding } = this.state;\n\n        if (isExpanding) {\n            const ONE_SECOND_IN_MS = 1000;\n            const transitionDurationCSStoMS = window\n                .getComputedStyle(this.expandableRef.current)\n                .getPropertyValue('transition-duration')\n                .slice(0, -1) * ONE_SECOND_IN_MS;\n\n            setTimeout(() => this.setState({ isExpanding: false }),\n                transitionDurationCSStoMS);\n        }\n\n        const { children: { length } } = this.props;\n        const { children: { length: prevLength } } = prevProps;\n\n        if (length !== prevLength) {\n            this.getExpandableContentHeight();\n        }\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    __construct(props) {\n        super.__construct(props);\n\n        this.ref = createRef();\n\n        const { showElemCount, children: { length } } = this.props;\n\n        this.expandableRef = createRef();\n        this.expandableContentHeight = 'auto';\n\n        this.state = {\n            isOpen: length > showElemCount,\n            isExpanding: false\n        };\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    getExpandableContentHeight() {\n        const { isOpen } = this.state;\n        const { showElemCount, children: { length } } = this.props;\n\n        if (isOpen && length <= showElemCount) {\n            this.setState({ isOpen: false });\n            return;\n        }\n\n        this.expandableContentHeight = 'auto';\n        this.setState({ isOpen: true }, () => {\n            this.expandableContentHeight = this.expandableRef.current.getBoundingClientRect().height;\n            this.setState({ isOpen: false });\n        });\n    }\n\n    handleShowAllButtonClick = () => {\n        const { isExpanding } = this.state;\n\n        if (!isExpanding) {\n            this.setState(({ isOpen }) => ({ isOpen: !isOpen, isExpanding: true }));\n        }\n    };\n\n    renderShowAllButton() {\n        const { showElemCount, children: { length } } = this.props;\n        console.log(['showAll-0']);\n        if (length <= showElemCount) {\n            return null;\n        }\n        console.log(['showAll-1']);\n\n        const { isOpen } = this.state;\n\n        const mods = isOpen ? { state: 'isOpen' } : {};\n\n        return (\n            <button\n              onClick={ this.handleShowAllButtonClick }\n              mix={ { block: 'Button', mods: { likeLink: true } } }\n              block=\"ExpandableContentShowMore\"\n              elem=\"ShowAllButton\"\n              mods={ mods }\n            >\n                { /* eslint-disable-next-line @scandipwa/scandipwa-guidelines/jsx-no-conditional */ }\n                { isOpen ? __('Show less') : __('Show more') }\n            </button>\n        );\n    }\n\n    renderExpandableChildren() {\n        const { isOpen, isExpanding } = this.state;\n        const { children, showElemCount } = this.props;\n\n        const child = (isOpen || isExpanding) ? children.slice(showElemCount) : null;\n        const style = {\n            height: isOpen ? this.expandableContentHeight : 0\n        };\n\n        return (\n            <div\n              ref={ this.expandableRef }\n              block=\"ExpandableContentShowMore\"\n              elem=\"ExpandableChildren\"\n              style={ style }\n            >\n            { child }\n            </div>\n        );\n    }\n\n    renderContent() {\n        const { children, showElemCount } = this.props;\n\n        const child = children.slice(0, showElemCount);\n\n        return (\n            <>\n            { child }\n            { this.renderExpandableChildren() }\n            { this.renderShowAllButton() }\n            </>\n        );\n    }\n\n    render() {\n        const { children, isMobile } = this.props;\n\n        if (isMobile) {\n            return children;\n        }\n\n        return (\n            <div block=\"ExpandableContentShowMore\" ref={ this.ref }>\n            { this.renderContent() }\n            </div>\n        );\n    }\n}\nexport default ExpandableContentShowMore;\n"],"sourceRoot":""}